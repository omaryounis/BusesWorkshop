#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusesWorkshop.DAL.Bus
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BusWorkshop")]
	public partial class WorkshopDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAlarm(Alarm instance);
    partial void UpdateAlarm(Alarm instance);
    partial void DeleteAlarm(Alarm instance);
    partial void InsertStaticIPAddressWithBranch(StaticIPAddressWithBranch instance);
    partial void UpdateStaticIPAddressWithBranch(StaticIPAddressWithBranch instance);
    partial void DeleteStaticIPAddressWithBranch(StaticIPAddressWithBranch instance);
    partial void InsertFollowUpCard(FollowUpCard instance);
    partial void UpdateFollowUpCard(FollowUpCard instance);
    partial void DeleteFollowUpCard(FollowUpCard instance);
    partial void InsertFuelCardsCustody(FuelCardsCustody instance);
    partial void UpdateFuelCardsCustody(FuelCardsCustody instance);
    partial void DeleteFuelCardsCustody(FuelCardsCustody instance);
    partial void InsertFuelSupply(FuelSupply instance);
    partial void UpdateFuelSupply(FuelSupply instance);
    partial void DeleteFuelSupply(FuelSupply instance);
    partial void InsertPeriodicalPlanExecDetail(PeriodicalPlanExecDetail instance);
    partial void UpdatePeriodicalPlanExecDetail(PeriodicalPlanExecDetail instance);
    partial void DeletePeriodicalPlanExecDetail(PeriodicalPlanExecDetail instance);
    partial void InsertStoppedCar(StoppedCar instance);
    partial void UpdateStoppedCar(StoppedCar instance);
    partial void DeleteStoppedCar(StoppedCar instance);
    partial void InsertBuiding(Buiding instance);
    partial void UpdateBuiding(Buiding instance);
    partial void DeleteBuiding(Buiding instance);
    partial void InsertBuildingMaint(BuildingMaint instance);
    partial void UpdateBuildingMaint(BuildingMaint instance);
    partial void DeleteBuildingMaint(BuildingMaint instance);
    partial void InsertBuildingMaintDetail(BuildingMaintDetail instance);
    partial void UpdateBuildingMaintDetail(BuildingMaintDetail instance);
    partial void DeleteBuildingMaintDetail(BuildingMaintDetail instance);
    partial void InsertBuildingPlan(BuildingPlan instance);
    partial void UpdateBuildingPlan(BuildingPlan instance);
    partial void DeleteBuildingPlan(BuildingPlan instance);
    partial void InsertBuildingPlanDetail(BuildingPlanDetail instance);
    partial void UpdateBuildingPlanDetail(BuildingPlanDetail instance);
    partial void DeleteBuildingPlanDetail(BuildingPlanDetail instance);
    partial void InsertBuildPerExecPlan(BuildPerExecPlan instance);
    partial void UpdateBuildPerExecPlan(BuildPerExecPlan instance);
    partial void DeleteBuildPerExecPlan(BuildPerExecPlan instance);
    partial void InsertBuildPerExecPlanDetail(BuildPerExecPlanDetail instance);
    partial void UpdateBuildPerExecPlanDetail(BuildPerExecPlanDetail instance);
    partial void DeleteBuildPerExecPlanDetail(BuildPerExecPlanDetail instance);
    partial void InsertDistrict(District instance);
    partial void UpdateDistrict(District instance);
    partial void DeleteDistrict(District instance);
    partial void InsertPeriodicalPlanToBuilding(PeriodicalPlanToBuilding instance);
    partial void UpdatePeriodicalPlanToBuilding(PeriodicalPlanToBuilding instance);
    partial void DeletePeriodicalPlanToBuilding(PeriodicalPlanToBuilding instance);
    partial void InsertStreet(Street instance);
    partial void UpdateStreet(Street instance);
    partial void DeleteStreet(Street instance);
    partial void InsertBuse(Buse instance);
    partial void UpdateBuse(Buse instance);
    partial void DeleteBuse(Buse instance);
    partial void InsertBusesService(BusesService instance);
    partial void UpdateBusesService(BusesService instance);
    partial void DeleteBusesService(BusesService instance);
    partial void InsertBusesServicesSpar(BusesServicesSpar instance);
    partial void UpdateBusesServicesSpar(BusesServicesSpar instance);
    partial void DeleteBusesServicesSpar(BusesServicesSpar instance);
    partial void InsertCOM(COM instance);
    partial void UpdateCOM(COM instance);
    partial void DeleteCOM(COM instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertCon_Company(Con_Company instance);
    partial void UpdateCon_Company(Con_Company instance);
    partial void DeleteCon_Company(Con_Company instance);
    partial void InsertDriver(Driver instance);
    partial void UpdateDriver(Driver instance);
    partial void DeleteDriver(Driver instance);
    partial void InsertGroupPermission(GroupPermission instance);
    partial void UpdateGroupPermission(GroupPermission instance);
    partial void DeleteGroupPermission(GroupPermission instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertMaintReqComment(MaintReqComment instance);
    partial void UpdateMaintReqComment(MaintReqComment instance);
    partial void DeleteMaintReqComment(MaintReqComment instance);
    partial void InsertMaintReqPicture(MaintReqPicture instance);
    partial void UpdateMaintReqPicture(MaintReqPicture instance);
    partial void DeleteMaintReqPicture(MaintReqPicture instance);
    partial void InsertMaterial(Material instance);
    partial void UpdateMaterial(Material instance);
    partial void DeleteMaterial(Material instance);
    partial void InsertMobile(Mobile instance);
    partial void UpdateMobile(Mobile instance);
    partial void DeleteMobile(Mobile instance);
    partial void InsertPageAction(PageAction instance);
    partial void UpdatePageAction(PageAction instance);
    partial void DeletePageAction(PageAction instance);
    partial void InsertPage(Page instance);
    partial void UpdatePage(Page instance);
    partial void DeletePage(Page instance);
    partial void InsertPhase(Phase instance);
    partial void UpdatePhase(Phase instance);
    partial void DeletePhase(Phase instance);
    partial void InsertProcess(Process instance);
    partial void UpdateProcess(Process instance);
    partial void DeleteProcess(Process instance);
    partial void InsertServicesSetting(ServicesSetting instance);
    partial void UpdateServicesSetting(ServicesSetting instance);
    partial void DeleteServicesSetting(ServicesSetting instance);
    partial void InsertUser_Phase(User_Phase instance);
    partial void UpdateUser_Phase(User_Phase instance);
    partial void DeleteUser_Phase(User_Phase instance);
    partial void InsertUserGroup(UserGroup instance);
    partial void UpdateUserGroup(UserGroup instance);
    partial void DeleteUserGroup(UserGroup instance);
    partial void InsertuserRequest(userRequest instance);
    partial void UpdateuserRequest(userRequest instance);
    partial void DeleteuserRequest(userRequest instance);
    partial void InsertBrand(Brand instance);
    partial void UpdateBrand(Brand instance);
    partial void DeleteBrand(Brand instance);
    partial void InsertBusAttachment(BusAttachment instance);
    partial void UpdateBusAttachment(BusAttachment instance);
    partial void DeleteBusAttachment(BusAttachment instance);
    partial void InsertClass(Class instance);
    partial void UpdateClass(Class instance);
    partial void DeleteClass(Class instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertFuelCardsDefinition(FuelCardsDefinition instance);
    partial void UpdateFuelCardsDefinition(FuelCardsDefinition instance);
    partial void DeleteFuelCardsDefinition(FuelCardsDefinition instance);
    partial void InsertModel(Model instance);
    partial void UpdateModel(Model instance);
    partial void DeleteModel(Model instance);
    partial void InsertPeriodicalPlan(PeriodicalPlan instance);
    partial void UpdatePeriodicalPlan(PeriodicalPlan instance);
    partial void DeletePeriodicalPlan(PeriodicalPlan instance);
    partial void InsertPeriodicalPlanSpar(PeriodicalPlanSpar instance);
    partial void UpdatePeriodicalPlanSpar(PeriodicalPlanSpar instance);
    partial void DeletePeriodicalPlanSpar(PeriodicalPlanSpar instance);
    partial void InsertPeriodicalPlanToVehcle(PeriodicalPlanToVehcle instance);
    partial void UpdatePeriodicalPlanToVehcle(PeriodicalPlanToVehcle instance);
    partial void DeletePeriodicalPlanToVehcle(PeriodicalPlanToVehcle instance);
    partial void InsertPeriodicPlanDetail(PeriodicPlanDetail instance);
    partial void UpdatePeriodicPlanDetail(PeriodicPlanDetail instance);
    partial void DeletePeriodicPlanDetail(PeriodicPlanDetail instance);
    partial void InsertServiceCenter(ServiceCenter instance);
    partial void UpdateServiceCenter(ServiceCenter instance);
    partial void DeleteServiceCenter(ServiceCenter instance);
    partial void InsertSparePart(SparePart instance);
    partial void UpdateSparePart(SparePart instance);
    partial void DeleteSparePart(SparePart instance);
    partial void InsertSparPart(SparPart instance);
    partial void UpdateSparPart(SparPart instance);
    partial void DeleteSparPart(SparPart instance);
    partial void InsertType(Type instance);
    partial void UpdateType(Type instance);
    partial void DeleteType(Type instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertVehcle(Vehcle instance);
    partial void UpdateVehcle(Vehcle instance);
    partial void DeleteVehcle(Vehcle instance);
    partial void InsertConfigMaster(ConfigMaster instance);
    partial void UpdateConfigMaster(ConfigMaster instance);
    partial void DeleteConfigMaster(ConfigMaster instance);
    partial void InsertUserCompany(UserCompany instance);
    partial void UpdateUserCompany(UserCompany instance);
    partial void DeleteUserCompany(UserCompany instance);
    partial void InsertPeriodicalPlanExecution(PeriodicalPlanExecution instance);
    partial void UpdatePeriodicalPlanExecution(PeriodicalPlanExecution instance);
    partial void DeletePeriodicalPlanExecution(PeriodicalPlanExecution instance);
    partial void InsertNetworkDevicesInformation(NetworkDevicesInformation instance);
    partial void UpdateNetworkDevicesInformation(NetworkDevicesInformation instance);
    partial void DeleteNetworkDevicesInformation(NetworkDevicesInformation instance);
    partial void InsertDeviceWithIPAddress(DeviceWithIPAddress instance);
    partial void UpdateDeviceWithIPAddress(DeviceWithIPAddress instance);
    partial void DeleteDeviceWithIPAddress(DeviceWithIPAddress instance);
    partial void InsertConfigDetail(ConfigDetail instance);
    partial void UpdateConfigDetail(ConfigDetail instance);
    partial void DeleteConfigDetail(ConfigDetail instance);
    partial void InsertRecommendation(Recommendation instance);
    partial void UpdateRecommendation(Recommendation instance);
    partial void DeleteRecommendation(Recommendation instance);
    partial void InsertMaintReqDetail(MaintReqDetail instance);
    partial void UpdateMaintReqDetail(MaintReqDetail instance);
    partial void DeleteMaintReqDetail(MaintReqDetail instance);
    partial void InsertMaintRequest(MaintRequest instance);
    partial void UpdateMaintRequest(MaintRequest instance);
    partial void DeleteMaintRequest(MaintRequest instance);
    partial void InsertReqPhase(ReqPhase instance);
    partial void UpdateReqPhase(ReqPhase instance);
    partial void DeleteReqPhase(ReqPhase instance);
    #endregion
		
		public WorkshopDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BusWorkshopConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WorkshopDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkshopDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkshopDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkshopDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Alarm> Alarms
		{
			get
			{
				return this.GetTable<Alarm>();
			}
		}
		
		public System.Data.Linq.Table<StaticIPAddressWithBranch> StaticIPAddressWithBranches
		{
			get
			{
				return this.GetTable<StaticIPAddressWithBranch>();
			}
		}
		
		public System.Data.Linq.Table<FollowUpCard> FollowUpCards
		{
			get
			{
				return this.GetTable<FollowUpCard>();
			}
		}
		
		public System.Data.Linq.Table<FuelCardsCustody> FuelCardsCustodies
		{
			get
			{
				return this.GetTable<FuelCardsCustody>();
			}
		}
		
		public System.Data.Linq.Table<FuelSupply> FuelSupplies
		{
			get
			{
				return this.GetTable<FuelSupply>();
			}
		}
		
		public System.Data.Linq.Table<PeriodicalPlanExecDetail> PeriodicalPlanExecDetails
		{
			get
			{
				return this.GetTable<PeriodicalPlanExecDetail>();
			}
		}
		
		public System.Data.Linq.Table<StoppedCar> StoppedCars
		{
			get
			{
				return this.GetTable<StoppedCar>();
			}
		}
		
		public System.Data.Linq.Table<Buiding> Buidings
		{
			get
			{
				return this.GetTable<Buiding>();
			}
		}
		
		public System.Data.Linq.Table<BuildingMaint> BuildingMaints
		{
			get
			{
				return this.GetTable<BuildingMaint>();
			}
		}
		
		public System.Data.Linq.Table<BuildingMaintDetail> BuildingMaintDetails
		{
			get
			{
				return this.GetTable<BuildingMaintDetail>();
			}
		}
		
		public System.Data.Linq.Table<BuildingPlan> BuildingPlans
		{
			get
			{
				return this.GetTable<BuildingPlan>();
			}
		}
		
		public System.Data.Linq.Table<BuildingPlanDetail> BuildingPlanDetails
		{
			get
			{
				return this.GetTable<BuildingPlanDetail>();
			}
		}
		
		public System.Data.Linq.Table<BuildPerExecPlan> BuildPerExecPlans
		{
			get
			{
				return this.GetTable<BuildPerExecPlan>();
			}
		}
		
		public System.Data.Linq.Table<BuildPerExecPlanDetail> BuildPerExecPlanDetails
		{
			get
			{
				return this.GetTable<BuildPerExecPlanDetail>();
			}
		}
		
		public System.Data.Linq.Table<District> Districts
		{
			get
			{
				return this.GetTable<District>();
			}
		}
		
		public System.Data.Linq.Table<PeriodicalPlanToBuilding> PeriodicalPlanToBuildings
		{
			get
			{
				return this.GetTable<PeriodicalPlanToBuilding>();
			}
		}
		
		public System.Data.Linq.Table<Street> Streets
		{
			get
			{
				return this.GetTable<Street>();
			}
		}
		
		public System.Data.Linq.Table<Buse> Buses
		{
			get
			{
				return this.GetTable<Buse>();
			}
		}
		
		public System.Data.Linq.Table<BusesService> BusesServices
		{
			get
			{
				return this.GetTable<BusesService>();
			}
		}
		
		public System.Data.Linq.Table<BusesServicesSpar> BusesServicesSpars
		{
			get
			{
				return this.GetTable<BusesServicesSpar>();
			}
		}
		
		public System.Data.Linq.Table<COM> COMs
		{
			get
			{
				return this.GetTable<COM>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<Con_Company> Con_Companies
		{
			get
			{
				return this.GetTable<Con_Company>();
			}
		}
		
		public System.Data.Linq.Table<Driver> Drivers
		{
			get
			{
				return this.GetTable<Driver>();
			}
		}
		
		public System.Data.Linq.Table<GroupPermission> GroupPermissions
		{
			get
			{
				return this.GetTable<GroupPermission>();
			}
		}
		
		public System.Data.Linq.Table<Group> Groups
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<MaintReqComment> MaintReqComments
		{
			get
			{
				return this.GetTable<MaintReqComment>();
			}
		}
		
		public System.Data.Linq.Table<MaintReqPicture> MaintReqPictures
		{
			get
			{
				return this.GetTable<MaintReqPicture>();
			}
		}
		
		public System.Data.Linq.Table<Material> Materials
		{
			get
			{
				return this.GetTable<Material>();
			}
		}
		
		public System.Data.Linq.Table<Mobile> Mobiles
		{
			get
			{
				return this.GetTable<Mobile>();
			}
		}
		
		public System.Data.Linq.Table<PageAction> PageActions
		{
			get
			{
				return this.GetTable<PageAction>();
			}
		}
		
		public System.Data.Linq.Table<Page> Pages
		{
			get
			{
				return this.GetTable<Page>();
			}
		}
		
		public System.Data.Linq.Table<Phase> Phases
		{
			get
			{
				return this.GetTable<Phase>();
			}
		}
		
		public System.Data.Linq.Table<Process> Processes
		{
			get
			{
				return this.GetTable<Process>();
			}
		}
		
		public System.Data.Linq.Table<ServicesSetting> ServicesSettings
		{
			get
			{
				return this.GetTable<ServicesSetting>();
			}
		}
		
		public System.Data.Linq.Table<User_Phase> User_Phases
		{
			get
			{
				return this.GetTable<User_Phase>();
			}
		}
		
		public System.Data.Linq.Table<UserGroup> UserGroups
		{
			get
			{
				return this.GetTable<UserGroup>();
			}
		}
		
		public System.Data.Linq.Table<userRequest> userRequests
		{
			get
			{
				return this.GetTable<userRequest>();
			}
		}
		
		public System.Data.Linq.Table<Brand> Brands
		{
			get
			{
				return this.GetTable<Brand>();
			}
		}
		
		public System.Data.Linq.Table<BusAttachment> BusAttachments
		{
			get
			{
				return this.GetTable<BusAttachment>();
			}
		}
		
		public System.Data.Linq.Table<Class> Classes
		{
			get
			{
				return this.GetTable<Class>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<FuelCardsDefinition> FuelCardsDefinitions
		{
			get
			{
				return this.GetTable<FuelCardsDefinition>();
			}
		}
		
		public System.Data.Linq.Table<Model> Models
		{
			get
			{
				return this.GetTable<Model>();
			}
		}
		
		public System.Data.Linq.Table<PeriodicalPlan> PeriodicalPlans
		{
			get
			{
				return this.GetTable<PeriodicalPlan>();
			}
		}
		
		public System.Data.Linq.Table<PeriodicalPlanSpar> PeriodicalPlanSpars
		{
			get
			{
				return this.GetTable<PeriodicalPlanSpar>();
			}
		}
		
		public System.Data.Linq.Table<PeriodicalPlanToVehcle> PeriodicalPlanToVehcles
		{
			get
			{
				return this.GetTable<PeriodicalPlanToVehcle>();
			}
		}
		
		public System.Data.Linq.Table<PeriodicPlanDetail> PeriodicPlanDetails
		{
			get
			{
				return this.GetTable<PeriodicPlanDetail>();
			}
		}
		
		public System.Data.Linq.Table<ServiceCenter> ServiceCenters
		{
			get
			{
				return this.GetTable<ServiceCenter>();
			}
		}
		
		public System.Data.Linq.Table<SparePart> SpareParts
		{
			get
			{
				return this.GetTable<SparePart>();
			}
		}
		
		public System.Data.Linq.Table<SparPart> SparParts
		{
			get
			{
				return this.GetTable<SparPart>();
			}
		}
		
		public System.Data.Linq.Table<Type> Types
		{
			get
			{
				return this.GetTable<Type>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Vehcle> Vehcles
		{
			get
			{
				return this.GetTable<Vehcle>();
			}
		}
		
		public System.Data.Linq.Table<ConfigMaster> ConfigMasters
		{
			get
			{
				return this.GetTable<ConfigMaster>();
			}
		}
		
		public System.Data.Linq.Table<UserCompany> UserCompanies
		{
			get
			{
				return this.GetTable<UserCompany>();
			}
		}
		
		public System.Data.Linq.Table<PeriodicalPlanExecution> PeriodicalPlanExecutions
		{
			get
			{
				return this.GetTable<PeriodicalPlanExecution>();
			}
		}
		
		public System.Data.Linq.Table<vehclesConsumedSparesVw> vehclesConsumedSparesVws
		{
			get
			{
				return this.GetTable<vehclesConsumedSparesVw>();
			}
		}
		
		public System.Data.Linq.Table<NetworkDevicesInformation> NetworkDevicesInformations
		{
			get
			{
				return this.GetTable<NetworkDevicesInformation>();
			}
		}
		
		public System.Data.Linq.Table<DeviceWithIPAddress> DeviceWithIPAddresses
		{
			get
			{
				return this.GetTable<DeviceWithIPAddress>();
			}
		}
		
		public System.Data.Linq.Table<ConfigDetail> ConfigDetails
		{
			get
			{
				return this.GetTable<ConfigDetail>();
			}
		}
		
		public System.Data.Linq.Table<Recommendation> Recommendations
		{
			get
			{
				return this.GetTable<Recommendation>();
			}
		}
		
		public System.Data.Linq.Table<MaintReqDetail> MaintReqDetails
		{
			get
			{
				return this.GetTable<MaintReqDetail>();
			}
		}
		
		public System.Data.Linq.Table<MaintRequest> MaintRequests
		{
			get
			{
				return this.GetTable<MaintRequest>();
			}
		}
		
		public System.Data.Linq.Table<ReqPhase> ReqPhases
		{
			get
			{
				return this.GetTable<ReqPhase>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AlarmSave")]
		public ISingleResult<AlarmSaveResult> AlarmSave()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<AlarmSaveResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AlarmsPlanDelete")]
		public int AlarmsPlanDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VehcleId", DbType="Int")] System.Nullable<int> vehcleId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> maintPlanId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> exeDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehcleId, maintPlanId, exeDate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CardsAvailableNo")]
		public ISingleResult<CardsAvailableNoResult> CardsAvailableNo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeId", DbType="Int")] System.Nullable<int> employeeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FuelCardId", DbType="Int")] System.Nullable<int> fuelCardId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeId, fuelCardId);
			return ((ISingleResult<CardsAvailableNoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EmployeesSelectWithJob")]
		public ISingleResult<EmployeesSelectWithJobResult> EmployeesSelectWithJob([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyId", DbType="Int")] System.Nullable<int> companyId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, companyId);
			return ((ISingleResult<EmployeesSelectWithJobResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FollowUpCardBetweenTwoDates")]
		public ISingleResult<FollowUpCardBetweenTwoDatesResult> FollowUpCardBetweenTwoDates([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VehcleId", DbType="Int")] System.Nullable<int> vehcleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="Date")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="Date")] System.Nullable<System.DateTime> endDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehcleId, startDate, endDate);
			return ((ISingleResult<FollowUpCardBetweenTwoDatesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FollowUpInsert")]
		public int FollowUpInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VehcleId", DbType="Int")] System.Nullable<int> vehcleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DriverId", DbType="Int")] System.Nullable<int> driverId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="Date")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CounterReading", DbType="Int")] System.Nullable<int> counterReading, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> distence, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Path", DbType="NVarChar(MAX)")] string path, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Accompanigns", DbType="NVarChar(MAX)")] string accompanigns, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Notes", DbType="NVarChar(MAX)")] string notes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FuelCardId", DbType="Int")] System.Nullable<int> fuelCardId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeId", DbType="Int")] System.Nullable<int> employeeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Count", DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Value", DbType="Decimal(18,2)")] System.Nullable<decimal> value, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Total", DbType="Decimal(18,2)")] System.Nullable<decimal> total)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehcleId, driverId, date, counterReading, distence, path, accompanigns, notes, fuelCardId, employeeId, count, value, total);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FuelCardBalances")]
		public ISingleResult<FuelCardBalancesResult> FuelCardBalances()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<FuelCardBalancesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FuelCardsBalance")]
		public ISingleResult<FuelCardsBalanceResult> FuelCardsBalance([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeId", DbType="Int")] System.Nullable<int> employeeId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeId);
			return ((ISingleResult<FuelCardsBalanceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FuelCardsSelectByFuelTypeAndSuperVisorID")]
		public ISingleResult<FuelCardsSelectByFuelTypeAndSuperVisorIDResult> FuelCardsSelectByFuelTypeAndSuperVisorID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VehcleId", DbType="Int")] System.Nullable<int> vehcleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeId", DbType="Int")] System.Nullable<int> employeeId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehcleId, employeeId);
			return ((ISingleResult<FuelCardsSelectByFuelTypeAndSuperVisorIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetBillId")]
		public ISingleResult<GetBillIdResult> GetBillId()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetBillIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsuranceAlarmSelect")]
		public ISingleResult<InsuranceAlarmSelectResult> InsuranceAlarmSelect([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<InsuranceAlarmSelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LastSupplyInfo")]
		public ISingleResult<LastSupplyInfoResult> LastSupplyInfo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VehcleId", DbType="Int")] System.Nullable<int> vehcleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehcleId);
			return ((ISingleResult<LastSupplyInfoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MaintenenceCost")]
		public ISingleResult<MaintenenceCostResult> MaintenenceCost([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VehcleId", DbType="Int")] System.Nullable<int> vehcleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="Date")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="Date")] System.Nullable<System.DateTime> endDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string maintType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PlanId", DbType="Int")] System.Nullable<int> planId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceId", DbType="Int")] System.Nullable<int> serviceId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SparId", DbType="Int")] System.Nullable<int> sparId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehcleId, startDate, endDate, maintType, planId, serviceId, sparId, userId);
			return ((ISingleResult<MaintenenceCostResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MaintReqAlarmSave")]
		public int MaintReqAlarmSave()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MaintRequestsReport", IsComposable=true)]
		public object MaintRequestsReport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsClosed", DbType="Bit")] System.Nullable<bool> isClosed, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsNotClosed", DbType="Bit")] System.Nullable<bool> isNotClosed, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyId", DbType="Int")] System.Nullable<int> companyId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestedEmpId", DbType="Int")] System.Nullable<int> requestedEmpId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DelayDays", DbType="Int")] System.Nullable<int> delayDays, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PriorUrgent", DbType="Bit")] System.Nullable<bool> priorUrgent, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PriorHigh", DbType="Bit")] System.Nullable<bool> priorHigh, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PriorLow", DbType="Bit")] System.Nullable<bool> priorLow)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), isClosed, isNotClosed, companyId, requestedEmpId, delayDays, priorUrgent, priorHigh, priorLow).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RequestSelectInWhile")]
		public ISingleResult<RequestSelectInWhileResult> RequestSelectInWhile()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<RequestSelectInWhileResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RequestSelectInWhileDetails", IsComposable=true)]
		public object RequestSelectInWhileDetails()
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShowLicenseNotifications")]
		public ISingleResult<ShowLicenseNotificationsResult> ShowLicenseNotifications([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<ShowLicenseNotificationsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShowMaintainanceNotifications")]
		public ISingleResult<ShowMaintainanceNotificationsResult> ShowMaintainanceNotifications([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<ShowMaintainanceNotificationsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShowNotifications")]
		public ISingleResult<ShowNotificationsResult> ShowNotifications([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<ShowNotificationsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShowPlanNotifications")]
		public ISingleResult<ShowPlanNotificationsResult> ShowPlanNotifications([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<ShowPlanNotificationsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_CompaniesSelectAll")]
		public ISingleResult<Sp_CompaniesSelectAllResult> Sp_CompaniesSelectAll([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<Sp_CompaniesSelectAllResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_MobileSelectAll")]
		public ISingleResult<Sp_MobileSelectAllResult> Sp_MobileSelectAll()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Sp_MobileSelectAllResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_SelectConfigDetails")]
		public ISingleResult<Sp_SelectConfigDetailsResult> Sp_SelectConfigDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="Int")] System.Nullable<int> type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> astID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), type, astID);
			return ((ISingleResult<Sp_SelectConfigDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_SelectMainMobile")]
		public ISingleResult<Sp_SelectMainMobileResult> Sp_SelectMainMobile([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestTypeId", DbType="Int")] System.Nullable<int> requestTypeId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestTypeId);
			return ((ISingleResult<Sp_SelectMainMobileResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_SelectMobile")]
		public ISingleResult<Sp_SelectMobileResult> Sp_SelectMobile([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MobileParentId", DbType="Int")] System.Nullable<int> mobileParentId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mobileParentId);
			return ((ISingleResult<Sp_SelectMobileResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_SelectParentMobile")]
		public ISingleResult<Sp_SelectParentMobileResult> Sp_SelectParentMobile()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Sp_SelectParentMobileResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_WorksSelectAll")]
		public ISingleResult<Sp_WorksSelectAllResult> Sp_WorksSelectAll()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Sp_WorksSelectAllResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SparePartsSelectAll", IsComposable=true)]
		public object SparePartsSelectAll()
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SparePartsSelectByBrandId", IsComposable=true)]
		public object SparePartsSelectByBrandId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrandId", DbType="Int")] System.Nullable<int> brandId)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), brandId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SparePartsSelectBySpareId", IsComposable=true)]
		public object SparePartsSelectBySpareId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SpareId", DbType="Int")] System.Nullable<int> spareId)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), spareId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StoppedCarsSelectById")]
		public ISingleResult<StoppedCarsSelectByIdResult> StoppedCarsSelectById([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VaehcleId", DbType="Int")] System.Nullable<int> vaehcleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vaehcleId);
			return ((ISingleResult<StoppedCarsSelectByIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TotalCostSp")]
		public ISingleResult<TotalCostSpResult> TotalCostSp([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VehcleId", DbType="Int")] System.Nullable<int> vehcleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateFrom", DbType="Date")] System.Nullable<System.DateTime> dateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateTo", DbType="Date")] System.Nullable<System.DateTime> dateTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehcleId, dateFrom, dateTo);
			return ((ISingleResult<TotalCostSpResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_AstLocations_Select_ByUserID")]
		public ISingleResult<usp_AstLocations_Select_ByUserIDResult> usp_AstLocations_Select_ByUserID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<usp_AstLocations_Select_ByUserIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_BCD_Update", IsComposable=true)]
		public object usp_BCD_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BCDID", DbType="Int")] System.Nullable<int> bCDID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BCDValue", DbType="NVarChar(50)")] string bCDValue)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bCDID, bCDValue).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Buses_RenewDates")]
		public ISingleResult<usp_Buses_RenewDatesResult> usp_Buses_RenewDates()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<usp_Buses_RenewDatesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_BusesDrivers")]
		public ISingleResult<usp_BusesDriversResult> usp_BusesDrivers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BusID", DbType="Int")] System.Nullable<int> busID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), busID);
			return ((ISingleResult<usp_BusesDriversResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_BusesServices_Select")]
		public ISingleResult<usp_BusesServices_SelectResult> usp_BusesServices_Select([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BusID", DbType="Int")] System.Nullable<int> busID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), busID);
			return ((ISingleResult<usp_BusesServices_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_COM_Insert")]
		public int usp_COM_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="COMName", DbType="NVarChar(250)")] string cOMName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="COMDescription", DbType="NVarChar(500)")] string cOMDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="COMAddress", DbType="NVarChar(500)")] string cOMAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="COMUrl", DbType="NVarChar(250)")] string cOMUrl, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="COMLogo", DbType="Image")] System.Data.Linq.Binary cOMLogo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="COMPhone", DbType="VarChar(50)")] string cOMPhone, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="COMFax", DbType="VarChar(50)")] string cOMFax, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="COMStatus", DbType="Bit")] System.Nullable<bool> cOMStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="COM_ID", DbType="Int")] System.Nullable<int> cOM_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocFooter", DbType="NVarChar(500)")] string docFooter, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Accountant_Name", DbType="NVarChar(250)")] string accountant_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FM_Name", DbType="NVarChar(250)")] string fM_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GM_Name", DbType="NVarChar(250)")] string gM_Name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cOMName, cOMDescription, cOMAddress, cOMUrl, cOMLogo, cOMPhone, cOMFax, cOMStatus, cOM_ID, docFooter, accountant_Name, fM_Name, gM_Name);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_COM_Select")]
		public ISingleResult<usp_COM_SelectResult> usp_COM_Select([global::System.Data.Linq.Mapping.ParameterAttribute(Name="COMID", DbType="Int")] System.Nullable<int> cOMID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cOMID);
			return ((ISingleResult<usp_COM_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_COM_Update")]
		public int usp_COM_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="COMID", DbType="Int")] System.Nullable<int> cOMID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="COMName", DbType="NVarChar(250)")] string cOMName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="COMDescription", DbType="NVarChar(500)")] string cOMDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="COMAddress", DbType="NVarChar(500)")] string cOMAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="COMUrl", DbType="NVarChar(250)")] string cOMUrl, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="COMLogo", DbType="Image")] System.Data.Linq.Binary cOMLogo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="COMPhone", DbType="VarChar(50)")] string cOMPhone, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="COMFax", DbType="VarChar(50)")] string cOMFax, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocFooter", DbType="NVarChar(500)")] string docFooter, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Accountant_Name", DbType="NVarChar(100)")] string accountant_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FM_Name", DbType="NVarChar(100)")] string fM_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GM_Name", DbType="NVarChar(100)")] string gM_Name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cOMID, cOMName, cOMDescription, cOMAddress, cOMUrl, cOMLogo, cOMPhone, cOMFax, docFooter, accountant_Name, fM_Name, gM_Name);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Companies_Select_ByUserID")]
		public ISingleResult<usp_Companies_Select_ByUserIDResult> usp_Companies_Select_ByUserID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<usp_Companies_Select_ByUserIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Usp_Company_Select_ByUserID")]
		public ISingleResult<Usp_Company_Select_ByUserIDResult> Usp_Company_Select_ByUserID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<Usp_Company_Select_ByUserIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_CON_COM_Update", IsComposable=true)]
		public object usp_CON_COM_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CONID", DbType="Int")] System.Nullable<int> cONID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CMP_ID", DbType="Int")] System.Nullable<int> cMP_ID)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cONID, cMP_ID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_CON_USR_Update", IsComposable=true)]
		public object usp_CON_USR_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CON_ID", DbType="Int")] System.Nullable<int> cON_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CONUserName", DbType="NVarChar(50)")] string cONUserName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CONPassword", DbType="NVarChar(50)")] string cONPassword, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CONConfirmPassword", DbType="NVarChar(50)")] string cONConfirmPassword, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CONPasswordHint", DbType="NVarChar(50)")] string cONPasswordHint, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComID", DbType="Int")] System.Nullable<int> comID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Con_USR_ID", DbType="Int")] System.Nullable<int> con_USR_ID)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cON_ID, cONUserName, cONPassword, cONConfirmPassword, cONPasswordHint, comID, con_USR_ID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_FSY_Insert", IsComposable=true)]
		public object usp_FSY_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FSYStartDate", DbType="Date")] System.Nullable<System.DateTime> fSYStartDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FSYEndDate", DbType="Date")] System.Nullable<System.DateTime> fSYEndDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FSYStatus", DbType="Bit")] System.Nullable<bool> fSYStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="COM_ID", DbType="Int")] System.Nullable<int> cOM_ID)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fSYStartDate, fSYEndDate, fSYStatus, cOM_ID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_FSY_Select", IsComposable=true)]
		public object usp_FSY_Select([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FSYID", DbType="Int")] System.Nullable<int> fSYID)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fSYID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GroupPermission_Delete")]
		public int usp_GroupPermission_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GroupPermission_GroupDelete")]
		public int usp_GroupPermission_GroupDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GroupPermission_GroupSelect")]
		public ISingleResult<usp_GroupPermission_GroupSelectResult> usp_GroupPermission_GroupSelect([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((ISingleResult<usp_GroupPermission_GroupSelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GroupPermission_Insert")]
		public int usp_GroupPermission_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Group_ID", DbType="Int")] System.Nullable<int> group_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Page_ID", DbType="Int")] System.Nullable<int> page_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Display", DbType="Bit")] System.Nullable<bool> display, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InsertA", DbType="Bit")] System.Nullable<bool> insertA, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UpdateA", DbType="Bit")] System.Nullable<bool> updateA, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeleteA", DbType="Bit")] System.Nullable<bool> deleteA)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), group_ID, page_ID, display, insertA, updateA, deleteA);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GroupPermission_Select")]
		public ISingleResult<usp_GroupPermission_SelectResult> usp_GroupPermission_Select([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((ISingleResult<usp_GroupPermission_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GroupPermission_Update")]
		public int usp_GroupPermission_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] System.Nullable<long> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Group_ID", DbType="Int")] System.Nullable<int> group_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Page_ID", DbType="Int")] System.Nullable<int> page_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Display", DbType="Bit")] System.Nullable<bool> display, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InsertA", DbType="Bit")] System.Nullable<bool> insertA, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UpdateA", DbType="Bit")] System.Nullable<bool> updateA, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeleteA", DbType="Bit")] System.Nullable<bool> deleteA)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, group_ID, page_ID, display, insertA, updateA, deleteA);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Groups_Delete")]
		public int usp_Groups_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Groups_Insert")]
		public int usp_Groups_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(200)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="School_ID", DbType="Int")] System.Nullable<int> school_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, school_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Groups_Select")]
		public ISingleResult<usp_Groups_SelectResult> usp_Groups_Select([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((ISingleResult<usp_Groups_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Groups_Update")]
		public int usp_Groups_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(200)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, name);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_PageActions_Delete")]
		public int usp_PageActions_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_PageActions_Insert")]
		public int usp_PageActions_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Page_ID", DbType="Int")] System.Nullable<int> page_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Display", DbType="Bit")] System.Nullable<bool> display, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InsertA", DbType="Bit")] System.Nullable<bool> insertA, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UpdateA", DbType="Bit")] System.Nullable<bool> updateA, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeleteA", DbType="Bit")] System.Nullable<bool> deleteA)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), page_ID, display, insertA, updateA, deleteA);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_PageActions_Select")]
		public ISingleResult<usp_PageActions_SelectResult> usp_PageActions_Select([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((ISingleResult<usp_PageActions_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_PageActions_Update")]
		public int usp_PageActions_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Page_ID", DbType="Int")] System.Nullable<int> page_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Display", DbType="Bit")] System.Nullable<bool> display, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InsertA", DbType="Bit")] System.Nullable<bool> insertA, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UpdateA", DbType="Bit")] System.Nullable<bool> updateA, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeleteA", DbType="Bit")] System.Nullable<bool> deleteA)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, page_ID, display, insertA, updateA, deleteA);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Pages_Delete")]
		public int usp_Pages_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Pages_Insert")]
		public int usp_Pages_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(200)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="URL", DbType="NVarChar(250)")] string uRL)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, uRL);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Pages_Select")]
		public ISingleResult<usp_Pages_SelectResult> usp_Pages_Select([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((ISingleResult<usp_Pages_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Pages_Update")]
		public int usp_Pages_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(200)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="URL", DbType="NVarChar(250)")] string uRL)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, name, uRL);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Services_Reminder")]
		public ISingleResult<usp_Services_ReminderResult> usp_Services_Reminder([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceID", DbType="Int")] System.Nullable<int> serviceID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serviceID);
			return ((ISingleResult<usp_Services_ReminderResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_User_Delete", IsComposable=true)]
		public object usp_User_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_User_PagesPermission")]
		public ISingleResult<usp_User_PagesPermissionResult> usp_User_PagesPermission([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageID", DbType="Int")] System.Nullable<int> pageID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, pageID);
			return ((ISingleResult<usp_User_PagesPermissionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserCompanies_Select")]
		public ISingleResult<usp_UserCompanies_SelectResult> usp_UserCompanies_Select([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, userID);
			return ((ISingleResult<usp_UserCompanies_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserGroups_Delete")]
		public int usp_UserGroups_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserGroups_Insert")]
		public int usp_UserGroups_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Group_ID", DbType="Int")] System.Nullable<int> group_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="User_ID", DbType="Int")] System.Nullable<int> user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="School_ID", DbType="Int")] System.Nullable<int> school_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), group_ID, user_ID, school_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserGroups_Select")]
		public ISingleResult<usp_UserGroups_SelectResult> usp_UserGroups_Select([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((ISingleResult<usp_UserGroups_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserGroups_Update")]
		public int usp_UserGroups_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] System.Nullable<long> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Group_ID", DbType="Int")] System.Nullable<int> group_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="User_ID", DbType="Int")] System.Nullable<int> user_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, group_ID, user_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserPermission_Insert", IsComposable=true)]
		public object usp_UserPermission_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusID", DbType="Int")] System.Nullable<int> statusID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GenderID", DbType="Int")] System.Nullable<int> genderID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LevelID", DbType="Int")] System.Nullable<int> levelID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RowID", DbType="Int")] System.Nullable<int> rowID)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, statusID, genderID, levelID, rowID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Users_Delete")]
		public int usp_Users_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Users_Insert")]
		public int usp_Users_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(150)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, userName, password, isActive);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Users_Select")]
		public ISingleResult<usp_Users_SelectResult> usp_Users_Select()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<usp_Users_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Users_Update")]
		public int usp_Users_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(150)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, name, userName, password, isActive);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.VehclesPlansRequired")]
		public ISingleResult<VehclesPlansRequiredResult> VehclesPlansRequired([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompId", DbType="Int")] System.Nullable<int> compId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VehcleId", DbType="Int")] System.Nullable<int> vehcleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeId", DbType="Int")] System.Nullable<int> employeeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), compId, vehcleId, employeeId, userId);
			return ((ISingleResult<VehclesPlansRequiredResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.VehclesSelectAll")]
		public ISingleResult<VehclesSelectAllResult> VehclesSelectAll(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VehcleId", DbType="Int")] System.Nullable<int> vehcleId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PlateNo", DbType="NVarChar(50)")] string plateNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyId", DbType="Int")] System.Nullable<int> companyId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassId", DbType="Int")] System.Nullable<int> classId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LicenseType", DbType="Int")] System.Nullable<int> licenseType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LicenseNo", DbType="NVarChar(20)")] string licenseNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LicenseExpiryDateStart", DbType="Date")] System.Nullable<System.DateTime> licenseExpiryDateStart, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LicenseExpiryDateEnd", DbType="Date")] System.Nullable<System.DateTime> licenseExpiryDateEnd, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InspectioDateStart", DbType="Date")] System.Nullable<System.DateTime> inspectioDateStart, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InspectioDateEnd", DbType="Date")] System.Nullable<System.DateTime> inspectioDateEnd, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VehcleType", DbType="Int")] System.Nullable<int> vehcleType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FueL", DbType="Int")] System.Nullable<int> fueL, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BodyNo", DbType="NVarChar(20)")] string bodyNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MotorNo", DbType="NVarChar(20)")] string motorNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CC", DbType="Int")] System.Nullable<int> cC, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MainDriver", DbType="Int")] System.Nullable<int> mainDriver, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SuperVisorId", DbType="NVarChar(100)")] string superVisorId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CounterReadingStartSart", DbType="Int")] System.Nullable<int> counterReadingStartSart, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CounterReadingStartEnd", DbType="Int")] System.Nullable<int> counterReadingStartEnd, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentReadingStart", DbType="Int")] System.Nullable<int> currentReadingStart, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentReadingEnd", DbType="Int")] System.Nullable<int> currentReadingEnd, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AverageFuelConsumptionStart", DbType="Decimal(18,0)")] System.Nullable<decimal> averageFuelConsumptionStart, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AverageFuelConsumptionEnd", DbType="Decimal(18,0)")] System.Nullable<decimal> averageFuelConsumptionEnd, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Color", DbType="Int")] System.Nullable<int> color, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CylenderNo", DbType="Int")] System.Nullable<int> cylenderNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ManufactureYearStart", DbType="Int")] System.Nullable<int> manufactureYearStart, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ManufactureYearEnd", DbType="Int")] System.Nullable<int> manufactureYearEnd, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ManufacturingCountry", DbType="Int")] System.Nullable<int> manufacturingCountry, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartOperationDateStart", DbType="Date")] System.Nullable<System.DateTime> startOperationDateStart, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartOperationDateEnd", DbType="Date")] System.Nullable<System.DateTime> startOperationDateEnd, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndOperationDateStart", DbType="Date")] System.Nullable<System.DateTime> endOperationDateStart, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndOperationDateEnd", DbType="Date")] System.Nullable<System.DateTime> endOperationDateEnd)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehcleId, plateNo, companyId, classId, licenseType, licenseNo, licenseExpiryDateStart, licenseExpiryDateEnd, inspectioDateStart, inspectioDateEnd, vehcleType, fueL, bodyNo, motorNo, cC, mainDriver, superVisorId, counterReadingStartSart, counterReadingStartEnd, currentReadingStart, currentReadingEnd, averageFuelConsumptionStart, averageFuelConsumptionEnd, color, cylenderNo, manufactureYearStart, manufactureYearEnd, manufacturingCountry, startOperationDateStart, startOperationDateEnd, endOperationDateStart, endOperationDateEnd);
			return ((ISingleResult<VehclesSelectAllResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.VehclesSelectAllFirst")]
		public ISingleResult<VehclesSelectAllFirstResult> VehclesSelectAllFirst(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VehcleId", DbType="Int")] System.Nullable<int> vehcleId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyId", DbType="Int")] System.Nullable<int> companyId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrandId", DbType="Int")] System.Nullable<int> brandId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ModelId", DbType="Int")] System.Nullable<int> modelId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassId", DbType="Int")] System.Nullable<int> classId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LicenseType", DbType="Int")] System.Nullable<int> licenseType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LicenseNo", DbType="NVarChar(20)")] string licenseNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LicenseExpiryDateStart", DbType="Date")] System.Nullable<System.DateTime> licenseExpiryDateStart, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LicenseExpiryDateEnd", DbType="Date")] System.Nullable<System.DateTime> licenseExpiryDateEnd, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InspectioDateStart", DbType="Date")] System.Nullable<System.DateTime> inspectioDateStart, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InspectioDateEnd", DbType="Date")] System.Nullable<System.DateTime> inspectioDateEnd, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SuperVisorId", DbType="NVarChar(100)")] string superVisorId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentReadingStart", DbType="Int")] System.Nullable<int> currentReadingStart, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentReadingEnd", DbType="Int")] System.Nullable<int> currentReadingEnd, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MainDriver", DbType="Int")] System.Nullable<int> mainDriver, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehcleId, companyId, brandId, modelId, classId, licenseType, licenseNo, licenseExpiryDateStart, licenseExpiryDateEnd, inspectioDateStart, inspectioDateEnd, superVisorId, currentReadingStart, currentReadingEnd, mainDriver, userId);
			return ((ISingleResult<VehclesSelectAllFirstResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.VehclesSelectAllSecond")]
		public ISingleResult<VehclesSelectAllSecondResult> VehclesSelectAllSecond(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VehcleId", DbType="Int")] System.Nullable<int> vehcleId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyId", DbType="Int")] System.Nullable<int> companyId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FueL", DbType="Int")] System.Nullable<int> fueL, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MotorNo", DbType="NVarChar(20)")] string motorNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BodyNo", DbType="NVarChar(20)")] string bodyNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CC", DbType="Int")] System.Nullable<int> cC, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CounterReadingStartSart", DbType="Int")] System.Nullable<int> counterReadingStartSart, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CounterReadingStartEnd", DbType="Int")] System.Nullable<int> counterReadingStartEnd, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AverageFuelConsumptionStart", DbType="Decimal(18,0)")] System.Nullable<decimal> averageFuelConsumptionStart, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AverageFuelConsumptionEnd", DbType="Decimal(18,0)")] System.Nullable<decimal> averageFuelConsumptionEnd, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Color", DbType="Int")] System.Nullable<int> color, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CylenderNo", DbType="Int")] System.Nullable<int> cylenderNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ManufactureYearStart", DbType="Int")] System.Nullable<int> manufactureYearStart, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ManufactureYearEnd", DbType="Int")] System.Nullable<int> manufactureYearEnd, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ManufacturingCountry", DbType="Int")] System.Nullable<int> manufacturingCountry, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartOperationDateStart", DbType="Date")] System.Nullable<System.DateTime> startOperationDateStart, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartOperationDateEnd", DbType="Date")] System.Nullable<System.DateTime> startOperationDateEnd, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndOperationDateStart", DbType="Date")] System.Nullable<System.DateTime> endOperationDateStart, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndOperationDateEnd", DbType="Date")] System.Nullable<System.DateTime> endOperationDateEnd, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsInActive", DbType="Bit")] System.Nullable<bool> isInActive, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehcleId, companyId, fueL, motorNo, bodyNo, cC, counterReadingStartSart, counterReadingStartEnd, averageFuelConsumptionStart, averageFuelConsumptionEnd, color, cylenderNo, manufactureYearStart, manufactureYearEnd, manufacturingCountry, startOperationDateStart, startOperationDateEnd, endOperationDateStart, endOperationDateEnd, isActive, isInActive, userId);
			return ((ISingleResult<VehclesSelectAllSecondResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Act.Alarms")]
	public partial class Alarm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AlarmId;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Type;
		
		private System.Nullable<int> _PlanId;
		
		private System.Nullable<int> _counter;
		
		private System.Nullable<int> _IsReaded;
		
		private EntityRef<PeriodicalPlan> _PeriodicalPlan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlarmIdChanging(int value);
    partial void OnAlarmIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnPlanIdChanging(System.Nullable<int> value);
    partial void OnPlanIdChanged();
    partial void OncounterChanging(System.Nullable<int> value);
    partial void OncounterChanged();
    partial void OnIsReadedChanging(System.Nullable<int> value);
    partial void OnIsReadedChanged();
    #endregion
		
		public Alarm()
		{
			this._PeriodicalPlan = default(EntityRef<PeriodicalPlan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlarmId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AlarmId
		{
			get
			{
				return this._AlarmId;
			}
			set
			{
				if ((this._AlarmId != value))
				{
					this.OnAlarmIdChanging(value);
					this.SendPropertyChanging();
					this._AlarmId = value;
					this.SendPropertyChanged("AlarmId");
					this.OnAlarmIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanId", DbType="Int")]
		public System.Nullable<int> PlanId
		{
			get
			{
				return this._PlanId;
			}
			set
			{
				if ((this._PlanId != value))
				{
					if (this._PeriodicalPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PlanId = value;
					this.SendPropertyChanged("PlanId");
					this.OnPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_counter", DbType="Int")]
		public System.Nullable<int> counter
		{
			get
			{
				return this._counter;
			}
			set
			{
				if ((this._counter != value))
				{
					this.OncounterChanging(value);
					this.SendPropertyChanging();
					this._counter = value;
					this.SendPropertyChanged("counter");
					this.OncounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReaded", DbType="Int")]
		public System.Nullable<int> IsReaded
		{
			get
			{
				return this._IsReaded;
			}
			set
			{
				if ((this._IsReaded != value))
				{
					this.OnIsReadedChanging(value);
					this.SendPropertyChanging();
					this._IsReaded = value;
					this.SendPropertyChanged("IsReaded");
					this.OnIsReadedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodicalPlan_Alarm", Storage="_PeriodicalPlan", ThisKey="PlanId", OtherKey="maintPlanId", IsForeignKey=true)]
		public PeriodicalPlan PeriodicalPlan
		{
			get
			{
				return this._PeriodicalPlan.Entity;
			}
			set
			{
				PeriodicalPlan previousValue = this._PeriodicalPlan.Entity;
				if (((previousValue != value) 
							|| (this._PeriodicalPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PeriodicalPlan.Entity = null;
						previousValue.Alarms.Remove(this);
					}
					this._PeriodicalPlan.Entity = value;
					if ((value != null))
					{
						value.Alarms.Add(this);
						this._PlanId = value.maintPlanId;
					}
					else
					{
						this._PlanId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PeriodicalPlan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Net.StaticIPAddressWithBranches")]
	public partial class StaticIPAddressWithBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CompanyID;
		
		private string _StaticIP;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private EntitySet<NetworkDevicesInformation> _NetworkDevicesInformations;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnStaticIPChanging(string value);
    partial void OnStaticIPChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
		
		public StaticIPAddressWithBranch()
		{
			this._NetworkDevicesInformations = new EntitySet<NetworkDevicesInformation>(new Action<NetworkDevicesInformation>(this.attach_NetworkDevicesInformations), new Action<NetworkDevicesInformation>(this.detach_NetworkDevicesInformations));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticIP", DbType="NVarChar(200)")]
		public string StaticIP
		{
			get
			{
				return this._StaticIP;
			}
			set
			{
				if ((this._StaticIP != value))
				{
					this.OnStaticIPChanging(value);
					this.SendPropertyChanging();
					this._StaticIP = value;
					this.SendPropertyChanged("StaticIP");
					this.OnStaticIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaticIPAddressWithBranch_NetworkDevicesInformation", Storage="_NetworkDevicesInformations", ThisKey="ID", OtherKey="HDID")]
		public EntitySet<NetworkDevicesInformation> NetworkDevicesInformations
		{
			get
			{
				return this._NetworkDevicesInformations;
			}
			set
			{
				this._NetworkDevicesInformations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_StaticIPAddressWithBranch", Storage="_Company", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.StaticIPAddressWithBranches.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.StaticIPAddressWithBranches.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NetworkDevicesInformations(NetworkDevicesInformation entity)
		{
			this.SendPropertyChanging();
			entity.StaticIPAddressWithBranch = this;
		}
		
		private void detach_NetworkDevicesInformations(NetworkDevicesInformation entity)
		{
			this.SendPropertyChanging();
			entity.StaticIPAddressWithBranch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Act.FollowUpCard")]
	public partial class FollowUpCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FollowUpCardId;
		
		private int _VehcleId;
		
		private int _DriverId;
		
		private System.DateTime _Date;
		
		private int _CounterReading;
		
		private int _distence;
		
		private string _Path;
		
		private string _Accompanigns;
		
		private string _Notes;
		
		private EntitySet<FuelSupply> _FuelSupplies;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Vehcle> _Vehcle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFollowUpCardIdChanging(int value);
    partial void OnFollowUpCardIdChanged();
    partial void OnVehcleIdChanging(int value);
    partial void OnVehcleIdChanged();
    partial void OnDriverIdChanging(int value);
    partial void OnDriverIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCounterReadingChanging(int value);
    partial void OnCounterReadingChanged();
    partial void OndistenceChanging(int value);
    partial void OndistenceChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnAccompanignsChanging(string value);
    partial void OnAccompanignsChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public FollowUpCard()
		{
			this._FuelSupplies = new EntitySet<FuelSupply>(new Action<FuelSupply>(this.attach_FuelSupplies), new Action<FuelSupply>(this.detach_FuelSupplies));
			this._Employee = default(EntityRef<Employee>);
			this._Vehcle = default(EntityRef<Vehcle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpCardId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FollowUpCardId
		{
			get
			{
				return this._FollowUpCardId;
			}
			set
			{
				if ((this._FollowUpCardId != value))
				{
					this.OnFollowUpCardIdChanging(value);
					this.SendPropertyChanging();
					this._FollowUpCardId = value;
					this.SendPropertyChanged("FollowUpCardId");
					this.OnFollowUpCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehcleId", DbType="Int NOT NULL")]
		public int VehcleId
		{
			get
			{
				return this._VehcleId;
			}
			set
			{
				if ((this._VehcleId != value))
				{
					if (this._Vehcle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehcleIdChanging(value);
					this.SendPropertyChanging();
					this._VehcleId = value;
					this.SendPropertyChanged("VehcleId");
					this.OnVehcleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverId", DbType="Int NOT NULL")]
		public int DriverId
		{
			get
			{
				return this._DriverId;
			}
			set
			{
				if ((this._DriverId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDriverIdChanging(value);
					this.SendPropertyChanging();
					this._DriverId = value;
					this.SendPropertyChanged("DriverId");
					this.OnDriverIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterReading", DbType="Int NOT NULL")]
		public int CounterReading
		{
			get
			{
				return this._CounterReading;
			}
			set
			{
				if ((this._CounterReading != value))
				{
					this.OnCounterReadingChanging(value);
					this.SendPropertyChanging();
					this._CounterReading = value;
					this.SendPropertyChanged("CounterReading");
					this.OnCounterReadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_distence", DbType="Int NOT NULL")]
		public int distence
		{
			get
			{
				return this._distence;
			}
			set
			{
				if ((this._distence != value))
				{
					this.OndistenceChanging(value);
					this.SendPropertyChanging();
					this._distence = value;
					this.SendPropertyChanged("distence");
					this.OndistenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(MAX)")]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accompanigns", DbType="NVarChar(MAX)")]
		public string Accompanigns
		{
			get
			{
				return this._Accompanigns;
			}
			set
			{
				if ((this._Accompanigns != value))
				{
					this.OnAccompanignsChanging(value);
					this.SendPropertyChanging();
					this._Accompanigns = value;
					this.SendPropertyChanged("Accompanigns");
					this.OnAccompanignsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FollowUpCard_FuelSupply", Storage="_FuelSupplies", ThisKey="FollowUpCardId", OtherKey="FollowUpCardId")]
		public EntitySet<FuelSupply> FuelSupplies
		{
			get
			{
				return this._FuelSupplies;
			}
			set
			{
				this._FuelSupplies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_FollowUpCard", Storage="_Employee", ThisKey="DriverId", OtherKey="EmployeeId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.FollowUpCards.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.FollowUpCards.Add(this);
						this._DriverId = value.EmployeeId;
					}
					else
					{
						this._DriverId = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehcle_FollowUpCard", Storage="_Vehcle", ThisKey="VehcleId", OtherKey="VehcleId", IsForeignKey=true)]
		public Vehcle Vehcle
		{
			get
			{
				return this._Vehcle.Entity;
			}
			set
			{
				Vehcle previousValue = this._Vehcle.Entity;
				if (((previousValue != value) 
							|| (this._Vehcle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehcle.Entity = null;
						previousValue.FollowUpCards.Remove(this);
					}
					this._Vehcle.Entity = value;
					if ((value != null))
					{
						value.FollowUpCards.Add(this);
						this._VehcleId = value.VehcleId;
					}
					else
					{
						this._VehcleId = default(int);
					}
					this.SendPropertyChanged("Vehcle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FuelSupplies(FuelSupply entity)
		{
			this.SendPropertyChanging();
			entity.FollowUpCard = this;
		}
		
		private void detach_FuelSupplies(FuelSupply entity)
		{
			this.SendPropertyChanging();
			entity.FollowUpCard = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Act.FuelCardsCustody")]
	public partial class FuelCardsCustody : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustodyID;
		
		private int _EmployeeId;
		
		private int _FuelCardId;
		
		private System.DateTime _Date;
		
		private System.Nullable<decimal> _Value;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<decimal> _Total;
		
		private System.Nullable<int> _CountOut;
		
		private string _Notes;
		
		private EntityRef<FuelCardsDefinition> _FuelCardsDefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustodyIDChanging(int value);
    partial void OnCustodyIDChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnFuelCardIdChanging(int value);
    partial void OnFuelCardIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnValueChanging(System.Nullable<decimal> value);
    partial void OnValueChanged();
    partial void OnCountChanging(System.Nullable<int> value);
    partial void OnCountChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnCountOutChanging(System.Nullable<int> value);
    partial void OnCountOutChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public FuelCardsCustody()
		{
			this._FuelCardsDefinition = default(EntityRef<FuelCardsDefinition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustodyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustodyID
		{
			get
			{
				return this._CustodyID;
			}
			set
			{
				if ((this._CustodyID != value))
				{
					this.OnCustodyIDChanging(value);
					this.SendPropertyChanging();
					this._CustodyID = value;
					this.SendPropertyChanged("CustodyID");
					this.OnCustodyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelCardId", DbType="Int NOT NULL")]
		public int FuelCardId
		{
			get
			{
				return this._FuelCardId;
			}
			set
			{
				if ((this._FuelCardId != value))
				{
					if (this._FuelCardsDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFuelCardIdChanging(value);
					this.SendPropertyChanging();
					this._FuelCardId = value;
					this.SendPropertyChanged("FuelCardId");
					this.OnFuelCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountOut", DbType="Int")]
		public System.Nullable<int> CountOut
		{
			get
			{
				return this._CountOut;
			}
			set
			{
				if ((this._CountOut != value))
				{
					this.OnCountOutChanging(value);
					this.SendPropertyChanging();
					this._CountOut = value;
					this.SendPropertyChanged("CountOut");
					this.OnCountOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FuelCardsDefinition_FuelCardsCustody", Storage="_FuelCardsDefinition", ThisKey="FuelCardId", OtherKey="FuelCardId", IsForeignKey=true)]
		public FuelCardsDefinition FuelCardsDefinition
		{
			get
			{
				return this._FuelCardsDefinition.Entity;
			}
			set
			{
				FuelCardsDefinition previousValue = this._FuelCardsDefinition.Entity;
				if (((previousValue != value) 
							|| (this._FuelCardsDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FuelCardsDefinition.Entity = null;
						previousValue.FuelCardsCustodies.Remove(this);
					}
					this._FuelCardsDefinition.Entity = value;
					if ((value != null))
					{
						value.FuelCardsCustodies.Add(this);
						this._FuelCardId = value.FuelCardId;
					}
					else
					{
						this._FuelCardId = default(int);
					}
					this.SendPropertyChanged("FuelCardsDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Act.FuelSupply")]
	public partial class FuelSupply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FuelSupplyId;
		
		private int _FollowUpCardId;
		
		private int _FuelCardId;
		
		private int _EmployeeId;
		
		private int _Count;
		
		private decimal _Value;
		
		private decimal _Total;
		
		private EntityRef<FollowUpCard> _FollowUpCard;
		
		private EntityRef<FuelCardsDefinition> _FuelCardsDefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFuelSupplyIdChanging(int value);
    partial void OnFuelSupplyIdChanged();
    partial void OnFollowUpCardIdChanging(int value);
    partial void OnFollowUpCardIdChanged();
    partial void OnFuelCardIdChanging(int value);
    partial void OnFuelCardIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnValueChanging(decimal value);
    partial void OnValueChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    #endregion
		
		public FuelSupply()
		{
			this._FollowUpCard = default(EntityRef<FollowUpCard>);
			this._FuelCardsDefinition = default(EntityRef<FuelCardsDefinition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelSupplyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FuelSupplyId
		{
			get
			{
				return this._FuelSupplyId;
			}
			set
			{
				if ((this._FuelSupplyId != value))
				{
					this.OnFuelSupplyIdChanging(value);
					this.SendPropertyChanging();
					this._FuelSupplyId = value;
					this.SendPropertyChanged("FuelSupplyId");
					this.OnFuelSupplyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpCardId", DbType="Int NOT NULL")]
		public int FollowUpCardId
		{
			get
			{
				return this._FollowUpCardId;
			}
			set
			{
				if ((this._FollowUpCardId != value))
				{
					if (this._FollowUpCard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFollowUpCardIdChanging(value);
					this.SendPropertyChanging();
					this._FollowUpCardId = value;
					this.SendPropertyChanged("FollowUpCardId");
					this.OnFollowUpCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelCardId", DbType="Int NOT NULL")]
		public int FuelCardId
		{
			get
			{
				return this._FuelCardId;
			}
			set
			{
				if ((this._FuelCardId != value))
				{
					if (this._FuelCardsDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFuelCardIdChanging(value);
					this.SendPropertyChanging();
					this._FuelCardId = value;
					this.SendPropertyChanged("FuelCardId");
					this.OnFuelCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Decimal(18,2) NOT NULL")]
		public decimal Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(18,2) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FollowUpCard_FuelSupply", Storage="_FollowUpCard", ThisKey="FollowUpCardId", OtherKey="FollowUpCardId", IsForeignKey=true)]
		public FollowUpCard FollowUpCard
		{
			get
			{
				return this._FollowUpCard.Entity;
			}
			set
			{
				FollowUpCard previousValue = this._FollowUpCard.Entity;
				if (((previousValue != value) 
							|| (this._FollowUpCard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FollowUpCard.Entity = null;
						previousValue.FuelSupplies.Remove(this);
					}
					this._FollowUpCard.Entity = value;
					if ((value != null))
					{
						value.FuelSupplies.Add(this);
						this._FollowUpCardId = value.FollowUpCardId;
					}
					else
					{
						this._FollowUpCardId = default(int);
					}
					this.SendPropertyChanged("FollowUpCard");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FuelCardsDefinition_FuelSupply", Storage="_FuelCardsDefinition", ThisKey="FuelCardId", OtherKey="FuelCardId", IsForeignKey=true)]
		public FuelCardsDefinition FuelCardsDefinition
		{
			get
			{
				return this._FuelCardsDefinition.Entity;
			}
			set
			{
				FuelCardsDefinition previousValue = this._FuelCardsDefinition.Entity;
				if (((previousValue != value) 
							|| (this._FuelCardsDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FuelCardsDefinition.Entity = null;
						previousValue.FuelSupplies.Remove(this);
					}
					this._FuelCardsDefinition.Entity = value;
					if ((value != null))
					{
						value.FuelSupplies.Add(this);
						this._FuelCardId = value.FuelCardId;
					}
					else
					{
						this._FuelCardId = default(int);
					}
					this.SendPropertyChanged("FuelCardsDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Act.PeriodicalPlanExecDetails")]
	public partial class PeriodicalPlanExecDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PeriodicalPlanExecDetailId;
		
		private int _PeriodicalPlanExcutionId;
		
		private int _maintPlanDetailId;
		
		private System.Nullable<int> _SparId;
		
		private System.Nullable<int> _EmployeeId;
		
		private System.Nullable<decimal> _SparCost;
		
		private System.Nullable<decimal> _SparCount;
		
		private System.Nullable<decimal> _SparTotal;
		
		private System.Nullable<decimal> _LaborCost;
		
		private System.Nullable<decimal> _TotalCost;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<PeriodicPlanDetail> _PeriodicPlanDetail;
		
		private EntityRef<SparePart> _SparePart;
		
		private EntityRef<PeriodicalPlanExecution> _PeriodicalPlanExecution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPeriodicalPlanExecDetailIdChanging(int value);
    partial void OnPeriodicalPlanExecDetailIdChanged();
    partial void OnPeriodicalPlanExcutionIdChanging(int value);
    partial void OnPeriodicalPlanExcutionIdChanged();
    partial void OnmaintPlanDetailIdChanging(int value);
    partial void OnmaintPlanDetailIdChanged();
    partial void OnSparIdChanging(System.Nullable<int> value);
    partial void OnSparIdChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnSparCostChanging(System.Nullable<decimal> value);
    partial void OnSparCostChanged();
    partial void OnSparCountChanging(System.Nullable<decimal> value);
    partial void OnSparCountChanged();
    partial void OnSparTotalChanging(System.Nullable<decimal> value);
    partial void OnSparTotalChanged();
    partial void OnLaborCostChanging(System.Nullable<decimal> value);
    partial void OnLaborCostChanged();
    partial void OnTotalCostChanging(System.Nullable<decimal> value);
    partial void OnTotalCostChanged();
    #endregion
		
		public PeriodicalPlanExecDetail()
		{
			this._Employee = default(EntityRef<Employee>);
			this._PeriodicPlanDetail = default(EntityRef<PeriodicPlanDetail>);
			this._SparePart = default(EntityRef<SparePart>);
			this._PeriodicalPlanExecution = default(EntityRef<PeriodicalPlanExecution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicalPlanExecDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PeriodicalPlanExecDetailId
		{
			get
			{
				return this._PeriodicalPlanExecDetailId;
			}
			set
			{
				if ((this._PeriodicalPlanExecDetailId != value))
				{
					this.OnPeriodicalPlanExecDetailIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodicalPlanExecDetailId = value;
					this.SendPropertyChanged("PeriodicalPlanExecDetailId");
					this.OnPeriodicalPlanExecDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicalPlanExcutionId", DbType="Int NOT NULL")]
		public int PeriodicalPlanExcutionId
		{
			get
			{
				return this._PeriodicalPlanExcutionId;
			}
			set
			{
				if ((this._PeriodicalPlanExcutionId != value))
				{
					if (this._PeriodicalPlanExecution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodicalPlanExcutionIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodicalPlanExcutionId = value;
					this.SendPropertyChanged("PeriodicalPlanExcutionId");
					this.OnPeriodicalPlanExcutionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maintPlanDetailId", DbType="Int NOT NULL")]
		public int maintPlanDetailId
		{
			get
			{
				return this._maintPlanDetailId;
			}
			set
			{
				if ((this._maintPlanDetailId != value))
				{
					if (this._PeriodicPlanDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaintPlanDetailIdChanging(value);
					this.SendPropertyChanging();
					this._maintPlanDetailId = value;
					this.SendPropertyChanged("maintPlanDetailId");
					this.OnmaintPlanDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SparId", DbType="Int")]
		public System.Nullable<int> SparId
		{
			get
			{
				return this._SparId;
			}
			set
			{
				if ((this._SparId != value))
				{
					if (this._SparePart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSparIdChanging(value);
					this.SendPropertyChanging();
					this._SparId = value;
					this.SendPropertyChanged("SparId");
					this.OnSparIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SparCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SparCost
		{
			get
			{
				return this._SparCost;
			}
			set
			{
				if ((this._SparCost != value))
				{
					this.OnSparCostChanging(value);
					this.SendPropertyChanging();
					this._SparCost = value;
					this.SendPropertyChanged("SparCost");
					this.OnSparCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SparCount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SparCount
		{
			get
			{
				return this._SparCount;
			}
			set
			{
				if ((this._SparCount != value))
				{
					this.OnSparCountChanging(value);
					this.SendPropertyChanging();
					this._SparCount = value;
					this.SendPropertyChanged("SparCount");
					this.OnSparCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SparTotal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SparTotal
		{
			get
			{
				return this._SparTotal;
			}
			set
			{
				if ((this._SparTotal != value))
				{
					this.OnSparTotalChanging(value);
					this.SendPropertyChanging();
					this._SparTotal = value;
					this.SendPropertyChanged("SparTotal");
					this.OnSparTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaborCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LaborCost
		{
			get
			{
				return this._LaborCost;
			}
			set
			{
				if ((this._LaborCost != value))
				{
					this.OnLaborCostChanging(value);
					this.SendPropertyChanging();
					this._LaborCost = value;
					this.SendPropertyChanged("LaborCost");
					this.OnLaborCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this.OnTotalCostChanging(value);
					this.SendPropertyChanging();
					this._TotalCost = value;
					this.SendPropertyChanged("TotalCost");
					this.OnTotalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PeriodicalPlanExecDetail", Storage="_Employee", ThisKey="EmployeeId", OtherKey="EmployeeId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.PeriodicalPlanExecDetails.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.PeriodicalPlanExecDetails.Add(this);
						this._EmployeeId = value.EmployeeId;
					}
					else
					{
						this._EmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodicPlanDetail_PeriodicalPlanExecDetail", Storage="_PeriodicPlanDetail", ThisKey="maintPlanDetailId", OtherKey="maintPlanDetailId", IsForeignKey=true)]
		public PeriodicPlanDetail PeriodicPlanDetail
		{
			get
			{
				return this._PeriodicPlanDetail.Entity;
			}
			set
			{
				PeriodicPlanDetail previousValue = this._PeriodicPlanDetail.Entity;
				if (((previousValue != value) 
							|| (this._PeriodicPlanDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PeriodicPlanDetail.Entity = null;
						previousValue.PeriodicalPlanExecDetails.Remove(this);
					}
					this._PeriodicPlanDetail.Entity = value;
					if ((value != null))
					{
						value.PeriodicalPlanExecDetails.Add(this);
						this._maintPlanDetailId = value.maintPlanDetailId;
					}
					else
					{
						this._maintPlanDetailId = default(int);
					}
					this.SendPropertyChanged("PeriodicPlanDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SparePart_PeriodicalPlanExecDetail", Storage="_SparePart", ThisKey="SparId", OtherKey="SpareId", IsForeignKey=true)]
		public SparePart SparePart
		{
			get
			{
				return this._SparePart.Entity;
			}
			set
			{
				SparePart previousValue = this._SparePart.Entity;
				if (((previousValue != value) 
							|| (this._SparePart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SparePart.Entity = null;
						previousValue.PeriodicalPlanExecDetails.Remove(this);
					}
					this._SparePart.Entity = value;
					if ((value != null))
					{
						value.PeriodicalPlanExecDetails.Add(this);
						this._SparId = value.SpareId;
					}
					else
					{
						this._SparId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SparePart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodicalPlanExecution_PeriodicalPlanExecDetail", Storage="_PeriodicalPlanExecution", ThisKey="PeriodicalPlanExcutionId", OtherKey="PeriodicalPlanExcutionId", IsForeignKey=true)]
		public PeriodicalPlanExecution PeriodicalPlanExecution
		{
			get
			{
				return this._PeriodicalPlanExecution.Entity;
			}
			set
			{
				PeriodicalPlanExecution previousValue = this._PeriodicalPlanExecution.Entity;
				if (((previousValue != value) 
							|| (this._PeriodicalPlanExecution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PeriodicalPlanExecution.Entity = null;
						previousValue.PeriodicalPlanExecDetails.Remove(this);
					}
					this._PeriodicalPlanExecution.Entity = value;
					if ((value != null))
					{
						value.PeriodicalPlanExecDetails.Add(this);
						this._PeriodicalPlanExcutionId = value.PeriodicalPlanExcutionId;
					}
					else
					{
						this._PeriodicalPlanExcutionId = default(int);
					}
					this.SendPropertyChanged("PeriodicalPlanExecution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Act.StoppedCar")]
	public partial class StoppedCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StopId;
		
		private int _VaehcleId;
		
		private System.DateTime _StopDate;
		
		private string _StopReason;
		
		private System.Nullable<System.DateTime> _ReoperateDate;
		
		private EntityRef<Vehcle> _Vehcle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStopIdChanging(int value);
    partial void OnStopIdChanged();
    partial void OnVaehcleIdChanging(int value);
    partial void OnVaehcleIdChanged();
    partial void OnStopDateChanging(System.DateTime value);
    partial void OnStopDateChanged();
    partial void OnStopReasonChanging(string value);
    partial void OnStopReasonChanged();
    partial void OnReoperateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReoperateDateChanged();
    #endregion
		
		public StoppedCar()
		{
			this._Vehcle = default(EntityRef<Vehcle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StopId
		{
			get
			{
				return this._StopId;
			}
			set
			{
				if ((this._StopId != value))
				{
					this.OnStopIdChanging(value);
					this.SendPropertyChanging();
					this._StopId = value;
					this.SendPropertyChanged("StopId");
					this.OnStopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VaehcleId", DbType="Int NOT NULL")]
		public int VaehcleId
		{
			get
			{
				return this._VaehcleId;
			}
			set
			{
				if ((this._VaehcleId != value))
				{
					if (this._Vehcle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVaehcleIdChanging(value);
					this.SendPropertyChanging();
					this._VaehcleId = value;
					this.SendPropertyChanged("VaehcleId");
					this.OnVaehcleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopDate", DbType="Date NOT NULL")]
		public System.DateTime StopDate
		{
			get
			{
				return this._StopDate;
			}
			set
			{
				if ((this._StopDate != value))
				{
					this.OnStopDateChanging(value);
					this.SendPropertyChanging();
					this._StopDate = value;
					this.SendPropertyChanged("StopDate");
					this.OnStopDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopReason", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string StopReason
		{
			get
			{
				return this._StopReason;
			}
			set
			{
				if ((this._StopReason != value))
				{
					this.OnStopReasonChanging(value);
					this.SendPropertyChanging();
					this._StopReason = value;
					this.SendPropertyChanged("StopReason");
					this.OnStopReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReoperateDate", DbType="Date")]
		public System.Nullable<System.DateTime> ReoperateDate
		{
			get
			{
				return this._ReoperateDate;
			}
			set
			{
				if ((this._ReoperateDate != value))
				{
					this.OnReoperateDateChanging(value);
					this.SendPropertyChanging();
					this._ReoperateDate = value;
					this.SendPropertyChanged("ReoperateDate");
					this.OnReoperateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehcle_StoppedCar", Storage="_Vehcle", ThisKey="VaehcleId", OtherKey="VehcleId", IsForeignKey=true)]
		public Vehcle Vehcle
		{
			get
			{
				return this._Vehcle.Entity;
			}
			set
			{
				Vehcle previousValue = this._Vehcle.Entity;
				if (((previousValue != value) 
							|| (this._Vehcle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehcle.Entity = null;
						previousValue.StoppedCars.Remove(this);
					}
					this._Vehcle.Entity = value;
					if ((value != null))
					{
						value.StoppedCars.Add(this);
						this._VaehcleId = value.VehcleId;
					}
					else
					{
						this._VaehcleId = default(int);
					}
					this.SendPropertyChanged("Vehcle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BLD.Buidings")]
	public partial class Buiding : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuildingId;
		
		private string _BuildingName;
		
		private System.Nullable<int> _CompanyId;
		
		private System.Nullable<int> _StreetId;
		
		private string _PieceNo;
		
		private string _NorthBorder;
		
		private string _SouthBorder;
		
		private string _EasternBorder;
		
		private string _WesternBorder;
		
		private string _BuildingLicinseNo;
		
		private System.Nullable<int> _UsageId;
		
		private string _Area;
		
		private System.Nullable<int> _FloorNo;
		
		private System.Nullable<bool> _Water;
		
		private System.Nullable<bool> _Electricity;
		
		private System.Nullable<bool> _Gas;
		
		private System.Nullable<int> _BuildingTypeId;
		
		private System.Nullable<int> _OwnerShipId;
		
		private string _Notes;
		
		private EntitySet<BuildingMaint> _BuildingMaints;
		
		private EntitySet<BuildPerExecPlan> _BuildPerExecPlans;
		
		private EntitySet<PeriodicalPlanToBuilding> _PeriodicalPlanToBuildings;
		
		private EntityRef<Street> _Street;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<ConfigDetail> _ConfigDetail;
		
		private EntityRef<ConfigDetail> _ConfigDetail1;
		
		private EntityRef<ConfigDetail> _ConfigDetail2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuildingIdChanging(int value);
    partial void OnBuildingIdChanged();
    partial void OnBuildingNameChanging(string value);
    partial void OnBuildingNameChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    partial void OnStreetIdChanging(System.Nullable<int> value);
    partial void OnStreetIdChanged();
    partial void OnPieceNoChanging(string value);
    partial void OnPieceNoChanged();
    partial void OnNorthBorderChanging(string value);
    partial void OnNorthBorderChanged();
    partial void OnSouthBorderChanging(string value);
    partial void OnSouthBorderChanged();
    partial void OnEasternBorderChanging(string value);
    partial void OnEasternBorderChanged();
    partial void OnWesternBorderChanging(string value);
    partial void OnWesternBorderChanged();
    partial void OnBuildingLicinseNoChanging(string value);
    partial void OnBuildingLicinseNoChanged();
    partial void OnUsageIdChanging(System.Nullable<int> value);
    partial void OnUsageIdChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnFloorNoChanging(System.Nullable<int> value);
    partial void OnFloorNoChanged();
    partial void OnWaterChanging(System.Nullable<bool> value);
    partial void OnWaterChanged();
    partial void OnElectricityChanging(System.Nullable<bool> value);
    partial void OnElectricityChanged();
    partial void OnGasChanging(System.Nullable<bool> value);
    partial void OnGasChanged();
    partial void OnBuildingTypeIdChanging(System.Nullable<int> value);
    partial void OnBuildingTypeIdChanged();
    partial void OnOwnerShipIdChanging(System.Nullable<int> value);
    partial void OnOwnerShipIdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Buiding()
		{
			this._BuildingMaints = new EntitySet<BuildingMaint>(new Action<BuildingMaint>(this.attach_BuildingMaints), new Action<BuildingMaint>(this.detach_BuildingMaints));
			this._BuildPerExecPlans = new EntitySet<BuildPerExecPlan>(new Action<BuildPerExecPlan>(this.attach_BuildPerExecPlans), new Action<BuildPerExecPlan>(this.detach_BuildPerExecPlans));
			this._PeriodicalPlanToBuildings = new EntitySet<PeriodicalPlanToBuilding>(new Action<PeriodicalPlanToBuilding>(this.attach_PeriodicalPlanToBuildings), new Action<PeriodicalPlanToBuilding>(this.detach_PeriodicalPlanToBuildings));
			this._Street = default(EntityRef<Street>);
			this._Company = default(EntityRef<Company>);
			this._ConfigDetail = default(EntityRef<ConfigDetail>);
			this._ConfigDetail1 = default(EntityRef<ConfigDetail>);
			this._ConfigDetail2 = default(EntityRef<ConfigDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BuildingId
		{
			get
			{
				return this._BuildingId;
			}
			set
			{
				if ((this._BuildingId != value))
				{
					this.OnBuildingIdChanging(value);
					this.SendPropertyChanging();
					this._BuildingId = value;
					this.SendPropertyChanged("BuildingId");
					this.OnBuildingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BuildingName
		{
			get
			{
				return this._BuildingName;
			}
			set
			{
				if ((this._BuildingName != value))
				{
					this.OnBuildingNameChanging(value);
					this.SendPropertyChanging();
					this._BuildingName = value;
					this.SendPropertyChanged("BuildingName");
					this.OnBuildingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetId", DbType="Int")]
		public System.Nullable<int> StreetId
		{
			get
			{
				return this._StreetId;
			}
			set
			{
				if ((this._StreetId != value))
				{
					if (this._Street.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStreetIdChanging(value);
					this.SendPropertyChanging();
					this._StreetId = value;
					this.SendPropertyChanged("StreetId");
					this.OnStreetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PieceNo", DbType="NVarChar(50)")]
		public string PieceNo
		{
			get
			{
				return this._PieceNo;
			}
			set
			{
				if ((this._PieceNo != value))
				{
					this.OnPieceNoChanging(value);
					this.SendPropertyChanging();
					this._PieceNo = value;
					this.SendPropertyChanged("PieceNo");
					this.OnPieceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NorthBorder", DbType="NVarChar(MAX)")]
		public string NorthBorder
		{
			get
			{
				return this._NorthBorder;
			}
			set
			{
				if ((this._NorthBorder != value))
				{
					this.OnNorthBorderChanging(value);
					this.SendPropertyChanging();
					this._NorthBorder = value;
					this.SendPropertyChanged("NorthBorder");
					this.OnNorthBorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SouthBorder", DbType="NVarChar(MAX)")]
		public string SouthBorder
		{
			get
			{
				return this._SouthBorder;
			}
			set
			{
				if ((this._SouthBorder != value))
				{
					this.OnSouthBorderChanging(value);
					this.SendPropertyChanging();
					this._SouthBorder = value;
					this.SendPropertyChanged("SouthBorder");
					this.OnSouthBorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EasternBorder", DbType="NVarChar(MAX)")]
		public string EasternBorder
		{
			get
			{
				return this._EasternBorder;
			}
			set
			{
				if ((this._EasternBorder != value))
				{
					this.OnEasternBorderChanging(value);
					this.SendPropertyChanging();
					this._EasternBorder = value;
					this.SendPropertyChanged("EasternBorder");
					this.OnEasternBorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WesternBorder", DbType="NVarChar(MAX)")]
		public string WesternBorder
		{
			get
			{
				return this._WesternBorder;
			}
			set
			{
				if ((this._WesternBorder != value))
				{
					this.OnWesternBorderChanging(value);
					this.SendPropertyChanging();
					this._WesternBorder = value;
					this.SendPropertyChanged("WesternBorder");
					this.OnWesternBorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingLicinseNo", DbType="NVarChar(50)")]
		public string BuildingLicinseNo
		{
			get
			{
				return this._BuildingLicinseNo;
			}
			set
			{
				if ((this._BuildingLicinseNo != value))
				{
					this.OnBuildingLicinseNoChanging(value);
					this.SendPropertyChanging();
					this._BuildingLicinseNo = value;
					this.SendPropertyChanged("BuildingLicinseNo");
					this.OnBuildingLicinseNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsageId", DbType="Int")]
		public System.Nullable<int> UsageId
		{
			get
			{
				return this._UsageId;
			}
			set
			{
				if ((this._UsageId != value))
				{
					if (this._ConfigDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsageIdChanging(value);
					this.SendPropertyChanging();
					this._UsageId = value;
					this.SendPropertyChanged("UsageId");
					this.OnUsageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NChar(10)")]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorNo", DbType="Int")]
		public System.Nullable<int> FloorNo
		{
			get
			{
				return this._FloorNo;
			}
			set
			{
				if ((this._FloorNo != value))
				{
					this.OnFloorNoChanging(value);
					this.SendPropertyChanging();
					this._FloorNo = value;
					this.SendPropertyChanged("FloorNo");
					this.OnFloorNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Water", DbType="Bit")]
		public System.Nullable<bool> Water
		{
			get
			{
				return this._Water;
			}
			set
			{
				if ((this._Water != value))
				{
					this.OnWaterChanging(value);
					this.SendPropertyChanging();
					this._Water = value;
					this.SendPropertyChanged("Water");
					this.OnWaterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Electricity", DbType="Bit")]
		public System.Nullable<bool> Electricity
		{
			get
			{
				return this._Electricity;
			}
			set
			{
				if ((this._Electricity != value))
				{
					this.OnElectricityChanging(value);
					this.SendPropertyChanging();
					this._Electricity = value;
					this.SendPropertyChanged("Electricity");
					this.OnElectricityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gas", DbType="Bit")]
		public System.Nullable<bool> Gas
		{
			get
			{
				return this._Gas;
			}
			set
			{
				if ((this._Gas != value))
				{
					this.OnGasChanging(value);
					this.SendPropertyChanging();
					this._Gas = value;
					this.SendPropertyChanged("Gas");
					this.OnGasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingTypeId", DbType="Int")]
		public System.Nullable<int> BuildingTypeId
		{
			get
			{
				return this._BuildingTypeId;
			}
			set
			{
				if ((this._BuildingTypeId != value))
				{
					if (this._ConfigDetail1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuildingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BuildingTypeId = value;
					this.SendPropertyChanged("BuildingTypeId");
					this.OnBuildingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerShipId", DbType="Int")]
		public System.Nullable<int> OwnerShipId
		{
			get
			{
				return this._OwnerShipId;
			}
			set
			{
				if ((this._OwnerShipId != value))
				{
					if (this._ConfigDetail2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerShipIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerShipId = value;
					this.SendPropertyChanged("OwnerShipId");
					this.OnOwnerShipIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buiding_BuildingMaint", Storage="_BuildingMaints", ThisKey="BuildingId", OtherKey="BuildingId")]
		public EntitySet<BuildingMaint> BuildingMaints
		{
			get
			{
				return this._BuildingMaints;
			}
			set
			{
				this._BuildingMaints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buiding_BuildPerExecPlan", Storage="_BuildPerExecPlans", ThisKey="BuildingId", OtherKey="BuildingId")]
		public EntitySet<BuildPerExecPlan> BuildPerExecPlans
		{
			get
			{
				return this._BuildPerExecPlans;
			}
			set
			{
				this._BuildPerExecPlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buiding_PeriodicalPlanToBuilding", Storage="_PeriodicalPlanToBuildings", ThisKey="BuildingId", OtherKey="BuildingId")]
		public EntitySet<PeriodicalPlanToBuilding> PeriodicalPlanToBuildings
		{
			get
			{
				return this._PeriodicalPlanToBuildings;
			}
			set
			{
				this._PeriodicalPlanToBuildings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Street_Buiding", Storage="_Street", ThisKey="StreetId", OtherKey="StreetId", IsForeignKey=true)]
		public Street Street
		{
			get
			{
				return this._Street.Entity;
			}
			set
			{
				Street previousValue = this._Street.Entity;
				if (((previousValue != value) 
							|| (this._Street.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Street.Entity = null;
						previousValue.Buidings.Remove(this);
					}
					this._Street.Entity = value;
					if ((value != null))
					{
						value.Buidings.Add(this);
						this._StreetId = value.StreetId;
					}
					else
					{
						this._StreetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Street");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Buiding", Storage="_Company", ThisKey="CompanyId", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Buidings.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Buidings.Add(this);
						this._CompanyId = value.ID;
					}
					else
					{
						this._CompanyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Buiding", Storage="_ConfigDetail", ThisKey="UsageId", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail
		{
			get
			{
				return this._ConfigDetail.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail.Entity = null;
						previousValue.Buidings.Remove(this);
					}
					this._ConfigDetail.Entity = value;
					if ((value != null))
					{
						value.Buidings.Add(this);
						this._UsageId = value.ConfigDetailId;
					}
					else
					{
						this._UsageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConfigDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Buiding1", Storage="_ConfigDetail1", ThisKey="BuildingTypeId", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail1
		{
			get
			{
				return this._ConfigDetail1.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail1.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail1.Entity = null;
						previousValue.Buidings1.Remove(this);
					}
					this._ConfigDetail1.Entity = value;
					if ((value != null))
					{
						value.Buidings1.Add(this);
						this._BuildingTypeId = value.ConfigDetailId;
					}
					else
					{
						this._BuildingTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConfigDetail1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Buiding2", Storage="_ConfigDetail2", ThisKey="OwnerShipId", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail2
		{
			get
			{
				return this._ConfigDetail2.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail2.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail2.Entity = null;
						previousValue.Buidings2.Remove(this);
					}
					this._ConfigDetail2.Entity = value;
					if ((value != null))
					{
						value.Buidings2.Add(this);
						this._OwnerShipId = value.ConfigDetailId;
					}
					else
					{
						this._OwnerShipId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConfigDetail2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BuildingMaints(BuildingMaint entity)
		{
			this.SendPropertyChanging();
			entity.Buiding = this;
		}
		
		private void detach_BuildingMaints(BuildingMaint entity)
		{
			this.SendPropertyChanging();
			entity.Buiding = null;
		}
		
		private void attach_BuildPerExecPlans(BuildPerExecPlan entity)
		{
			this.SendPropertyChanging();
			entity.Buiding = this;
		}
		
		private void detach_BuildPerExecPlans(BuildPerExecPlan entity)
		{
			this.SendPropertyChanging();
			entity.Buiding = null;
		}
		
		private void attach_PeriodicalPlanToBuildings(PeriodicalPlanToBuilding entity)
		{
			this.SendPropertyChanging();
			entity.Buiding = this;
		}
		
		private void detach_PeriodicalPlanToBuildings(PeriodicalPlanToBuilding entity)
		{
			this.SendPropertyChanging();
			entity.Buiding = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BLD.BuildingMaint")]
	public partial class BuildingMaint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuildingMaintId;
		
		private int _BuildingId;
		
		private int _WorkId;
		
		private System.DateTime _MaintDate;
		
		private string _Defect;
		
		private string _Procedure;
		
		private string _Notes;
		
		private EntityRef<Buiding> _Buiding;
		
		private EntityRef<ConfigDetail> _ConfigDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuildingMaintIdChanging(int value);
    partial void OnBuildingMaintIdChanged();
    partial void OnBuildingIdChanging(int value);
    partial void OnBuildingIdChanged();
    partial void OnWorkIdChanging(int value);
    partial void OnWorkIdChanged();
    partial void OnMaintDateChanging(System.DateTime value);
    partial void OnMaintDateChanged();
    partial void OnDefectChanging(string value);
    partial void OnDefectChanged();
    partial void OnProcedureChanging(string value);
    partial void OnProcedureChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public BuildingMaint()
		{
			this._Buiding = default(EntityRef<Buiding>);
			this._ConfigDetail = default(EntityRef<ConfigDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingMaintId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BuildingMaintId
		{
			get
			{
				return this._BuildingMaintId;
			}
			set
			{
				if ((this._BuildingMaintId != value))
				{
					this.OnBuildingMaintIdChanging(value);
					this.SendPropertyChanging();
					this._BuildingMaintId = value;
					this.SendPropertyChanged("BuildingMaintId");
					this.OnBuildingMaintIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingId", DbType="Int NOT NULL")]
		public int BuildingId
		{
			get
			{
				return this._BuildingId;
			}
			set
			{
				if ((this._BuildingId != value))
				{
					if (this._Buiding.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuildingIdChanging(value);
					this.SendPropertyChanging();
					this._BuildingId = value;
					this.SendPropertyChanged("BuildingId");
					this.OnBuildingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkId", DbType="Int NOT NULL")]
		public int WorkId
		{
			get
			{
				return this._WorkId;
			}
			set
			{
				if ((this._WorkId != value))
				{
					if (this._ConfigDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkIdChanging(value);
					this.SendPropertyChanging();
					this._WorkId = value;
					this.SendPropertyChanged("WorkId");
					this.OnWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintDate", DbType="Date NOT NULL")]
		public System.DateTime MaintDate
		{
			get
			{
				return this._MaintDate;
			}
			set
			{
				if ((this._MaintDate != value))
				{
					this.OnMaintDateChanging(value);
					this.SendPropertyChanging();
					this._MaintDate = value;
					this.SendPropertyChanged("MaintDate");
					this.OnMaintDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Defect", DbType="NVarChar(MAX)")]
		public string Defect
		{
			get
			{
				return this._Defect;
			}
			set
			{
				if ((this._Defect != value))
				{
					this.OnDefectChanging(value);
					this.SendPropertyChanging();
					this._Defect = value;
					this.SendPropertyChanged("Defect");
					this.OnDefectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Procedure]", Storage="_Procedure", DbType="NVarChar(MAX)")]
		public string Procedure
		{
			get
			{
				return this._Procedure;
			}
			set
			{
				if ((this._Procedure != value))
				{
					this.OnProcedureChanging(value);
					this.SendPropertyChanging();
					this._Procedure = value;
					this.SendPropertyChanged("Procedure");
					this.OnProcedureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buiding_BuildingMaint", Storage="_Buiding", ThisKey="BuildingId", OtherKey="BuildingId", IsForeignKey=true)]
		public Buiding Buiding
		{
			get
			{
				return this._Buiding.Entity;
			}
			set
			{
				Buiding previousValue = this._Buiding.Entity;
				if (((previousValue != value) 
							|| (this._Buiding.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buiding.Entity = null;
						previousValue.BuildingMaints.Remove(this);
					}
					this._Buiding.Entity = value;
					if ((value != null))
					{
						value.BuildingMaints.Add(this);
						this._BuildingId = value.BuildingId;
					}
					else
					{
						this._BuildingId = default(int);
					}
					this.SendPropertyChanged("Buiding");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_BuildingMaint", Storage="_ConfigDetail", ThisKey="WorkId", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail
		{
			get
			{
				return this._ConfigDetail.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail.Entity = null;
						previousValue.BuildingMaints.Remove(this);
					}
					this._ConfigDetail.Entity = value;
					if ((value != null))
					{
						value.BuildingMaints.Add(this);
						this._WorkId = value.ConfigDetailId;
					}
					else
					{
						this._WorkId = default(int);
					}
					this.SendPropertyChanged("ConfigDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BLD.BuildingMaintDetail")]
	public partial class BuildingMaintDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuildingMaintDetailId;
		
		private int _BuildingMaintId;
		
		private int _MaterialId;
		
		private System.Nullable<decimal> _MaterialCost;
		
		private decimal _MaterialCount;
		
		private System.Nullable<decimal> _MaterialTotal;
		
		private System.Nullable<decimal> _LabourCost;
		
		private System.Nullable<decimal> _TotalCost;
		
		private EntityRef<Material> _Material;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuildingMaintDetailIdChanging(int value);
    partial void OnBuildingMaintDetailIdChanged();
    partial void OnBuildingMaintIdChanging(int value);
    partial void OnBuildingMaintIdChanged();
    partial void OnMaterialIdChanging(int value);
    partial void OnMaterialIdChanged();
    partial void OnMaterialCostChanging(System.Nullable<decimal> value);
    partial void OnMaterialCostChanged();
    partial void OnMaterialCountChanging(decimal value);
    partial void OnMaterialCountChanged();
    partial void OnMaterialTotalChanging(System.Nullable<decimal> value);
    partial void OnMaterialTotalChanged();
    partial void OnLabourCostChanging(System.Nullable<decimal> value);
    partial void OnLabourCostChanged();
    partial void OnTotalCostChanging(System.Nullable<decimal> value);
    partial void OnTotalCostChanged();
    #endregion
		
		public BuildingMaintDetail()
		{
			this._Material = default(EntityRef<Material>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingMaintDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BuildingMaintDetailId
		{
			get
			{
				return this._BuildingMaintDetailId;
			}
			set
			{
				if ((this._BuildingMaintDetailId != value))
				{
					this.OnBuildingMaintDetailIdChanging(value);
					this.SendPropertyChanging();
					this._BuildingMaintDetailId = value;
					this.SendPropertyChanged("BuildingMaintDetailId");
					this.OnBuildingMaintDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingMaintId", DbType="Int NOT NULL")]
		public int BuildingMaintId
		{
			get
			{
				return this._BuildingMaintId;
			}
			set
			{
				if ((this._BuildingMaintId != value))
				{
					this.OnBuildingMaintIdChanging(value);
					this.SendPropertyChanging();
					this._BuildingMaintId = value;
					this.SendPropertyChanged("BuildingMaintId");
					this.OnBuildingMaintIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="Int NOT NULL")]
		public int MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					if (this._Material.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MaterialCost
		{
			get
			{
				return this._MaterialCost;
			}
			set
			{
				if ((this._MaterialCost != value))
				{
					this.OnMaterialCostChanging(value);
					this.SendPropertyChanging();
					this._MaterialCost = value;
					this.SendPropertyChanged("MaterialCost");
					this.OnMaterialCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCount", DbType="Decimal(18,2) NOT NULL")]
		public decimal MaterialCount
		{
			get
			{
				return this._MaterialCount;
			}
			set
			{
				if ((this._MaterialCount != value))
				{
					this.OnMaterialCountChanging(value);
					this.SendPropertyChanging();
					this._MaterialCount = value;
					this.SendPropertyChanged("MaterialCount");
					this.OnMaterialCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialTotal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MaterialTotal
		{
			get
			{
				return this._MaterialTotal;
			}
			set
			{
				if ((this._MaterialTotal != value))
				{
					this.OnMaterialTotalChanging(value);
					this.SendPropertyChanging();
					this._MaterialTotal = value;
					this.SendPropertyChanged("MaterialTotal");
					this.OnMaterialTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabourCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LabourCost
		{
			get
			{
				return this._LabourCost;
			}
			set
			{
				if ((this._LabourCost != value))
				{
					this.OnLabourCostChanging(value);
					this.SendPropertyChanging();
					this._LabourCost = value;
					this.SendPropertyChanged("LabourCost");
					this.OnLabourCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this.OnTotalCostChanging(value);
					this.SendPropertyChanging();
					this._TotalCost = value;
					this.SendPropertyChanged("TotalCost");
					this.OnTotalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_BuildingMaintDetail", Storage="_Material", ThisKey="MaterialId", OtherKey="MaterialId", IsForeignKey=true)]
		public Material Material
		{
			get
			{
				return this._Material.Entity;
			}
			set
			{
				Material previousValue = this._Material.Entity;
				if (((previousValue != value) 
							|| (this._Material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Material.Entity = null;
						previousValue.BuildingMaintDetails.Remove(this);
					}
					this._Material.Entity = value;
					if ((value != null))
					{
						value.BuildingMaintDetails.Add(this);
						this._MaterialId = value.MaterialId;
					}
					else
					{
						this._MaterialId = default(int);
					}
					this.SendPropertyChanged("Material");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BLD.BuildingPlan")]
	public partial class BuildingPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanId;
		
		private string _PlanName;
		
		private int _EveryWhileMon;
		
		private string _PlanDescription;
		
		private EntitySet<BuildPerExecPlan> _BuildPerExecPlans;
		
		private EntitySet<PeriodicalPlanToBuilding> _PeriodicalPlanToBuildings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanIdChanging(int value);
    partial void OnPlanIdChanged();
    partial void OnPlanNameChanging(string value);
    partial void OnPlanNameChanged();
    partial void OnEveryWhileMonChanging(int value);
    partial void OnEveryWhileMonChanged();
    partial void OnPlanDescriptionChanging(string value);
    partial void OnPlanDescriptionChanged();
    #endregion
		
		public BuildingPlan()
		{
			this._BuildPerExecPlans = new EntitySet<BuildPerExecPlan>(new Action<BuildPerExecPlan>(this.attach_BuildPerExecPlans), new Action<BuildPerExecPlan>(this.detach_BuildPerExecPlans));
			this._PeriodicalPlanToBuildings = new EntitySet<PeriodicalPlanToBuilding>(new Action<PeriodicalPlanToBuilding>(this.attach_PeriodicalPlanToBuildings), new Action<PeriodicalPlanToBuilding>(this.detach_PeriodicalPlanToBuildings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PlanId
		{
			get
			{
				return this._PlanId;
			}
			set
			{
				if ((this._PlanId != value))
				{
					this.OnPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PlanId = value;
					this.SendPropertyChanged("PlanId");
					this.OnPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PlanName
		{
			get
			{
				return this._PlanName;
			}
			set
			{
				if ((this._PlanName != value))
				{
					this.OnPlanNameChanging(value);
					this.SendPropertyChanging();
					this._PlanName = value;
					this.SendPropertyChanged("PlanName");
					this.OnPlanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EveryWhileMon", DbType="Int NOT NULL")]
		public int EveryWhileMon
		{
			get
			{
				return this._EveryWhileMon;
			}
			set
			{
				if ((this._EveryWhileMon != value))
				{
					this.OnEveryWhileMonChanging(value);
					this.SendPropertyChanging();
					this._EveryWhileMon = value;
					this.SendPropertyChanged("EveryWhileMon");
					this.OnEveryWhileMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanDescription", DbType="NVarChar(MAX)")]
		public string PlanDescription
		{
			get
			{
				return this._PlanDescription;
			}
			set
			{
				if ((this._PlanDescription != value))
				{
					this.OnPlanDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PlanDescription = value;
					this.SendPropertyChanged("PlanDescription");
					this.OnPlanDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuildingPlan_BuildPerExecPlan", Storage="_BuildPerExecPlans", ThisKey="PlanId", OtherKey="PlanId")]
		public EntitySet<BuildPerExecPlan> BuildPerExecPlans
		{
			get
			{
				return this._BuildPerExecPlans;
			}
			set
			{
				this._BuildPerExecPlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuildingPlan_PeriodicalPlanToBuilding", Storage="_PeriodicalPlanToBuildings", ThisKey="PlanId", OtherKey="PlanId")]
		public EntitySet<PeriodicalPlanToBuilding> PeriodicalPlanToBuildings
		{
			get
			{
				return this._PeriodicalPlanToBuildings;
			}
			set
			{
				this._PeriodicalPlanToBuildings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BuildPerExecPlans(BuildPerExecPlan entity)
		{
			this.SendPropertyChanging();
			entity.BuildingPlan = this;
		}
		
		private void detach_BuildPerExecPlans(BuildPerExecPlan entity)
		{
			this.SendPropertyChanging();
			entity.BuildingPlan = null;
		}
		
		private void attach_PeriodicalPlanToBuildings(PeriodicalPlanToBuilding entity)
		{
			this.SendPropertyChanging();
			entity.BuildingPlan = this;
		}
		
		private void detach_PeriodicalPlanToBuildings(PeriodicalPlanToBuilding entity)
		{
			this.SendPropertyChanging();
			entity.BuildingPlan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BLD.BuildingPlanDetail")]
	public partial class BuildingPlanDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuildingPlanDetail1;
		
		private int _PlanId;
		
		private int _WorkId;
		
		private string _Description;
		
		private EntityRef<ConfigDetail> _ConfigDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuildingPlanDetail1Changing(int value);
    partial void OnBuildingPlanDetail1Changed();
    partial void OnPlanIdChanging(int value);
    partial void OnPlanIdChanged();
    partial void OnWorkIdChanging(int value);
    partial void OnWorkIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public BuildingPlanDetail()
		{
			this._ConfigDetail = default(EntityRef<ConfigDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="BuildingPlanDetail", Storage="_BuildingPlanDetail1", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BuildingPlanDetail1
		{
			get
			{
				return this._BuildingPlanDetail1;
			}
			set
			{
				if ((this._BuildingPlanDetail1 != value))
				{
					this.OnBuildingPlanDetail1Changing(value);
					this.SendPropertyChanging();
					this._BuildingPlanDetail1 = value;
					this.SendPropertyChanged("BuildingPlanDetail1");
					this.OnBuildingPlanDetail1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanId", DbType="Int NOT NULL")]
		public int PlanId
		{
			get
			{
				return this._PlanId;
			}
			set
			{
				if ((this._PlanId != value))
				{
					this.OnPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PlanId = value;
					this.SendPropertyChanged("PlanId");
					this.OnPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkId", DbType="Int NOT NULL")]
		public int WorkId
		{
			get
			{
				return this._WorkId;
			}
			set
			{
				if ((this._WorkId != value))
				{
					if (this._ConfigDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkIdChanging(value);
					this.SendPropertyChanging();
					this._WorkId = value;
					this.SendPropertyChanged("WorkId");
					this.OnWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_BuildingPlanDetail", Storage="_ConfigDetail", ThisKey="WorkId", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail
		{
			get
			{
				return this._ConfigDetail.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail.Entity = null;
						previousValue.BuildingPlanDetails.Remove(this);
					}
					this._ConfigDetail.Entity = value;
					if ((value != null))
					{
						value.BuildingPlanDetails.Add(this);
						this._WorkId = value.ConfigDetailId;
					}
					else
					{
						this._WorkId = default(int);
					}
					this.SendPropertyChanged("ConfigDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BLD.BuildPerExecPlan")]
	public partial class BuildPerExecPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PerioicalPlanId;
		
		private int _BuildingId;
		
		private int _PlanId;
		
		private System.DateTime _Date;
		
		private string _Notes;
		
		private EntityRef<Buiding> _Buiding;
		
		private EntityRef<BuildingPlan> _BuildingPlan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPerioicalPlanIdChanging(int value);
    partial void OnPerioicalPlanIdChanged();
    partial void OnBuildingIdChanging(int value);
    partial void OnBuildingIdChanged();
    partial void OnPlanIdChanging(int value);
    partial void OnPlanIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public BuildPerExecPlan()
		{
			this._Buiding = default(EntityRef<Buiding>);
			this._BuildingPlan = default(EntityRef<BuildingPlan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerioicalPlanId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PerioicalPlanId
		{
			get
			{
				return this._PerioicalPlanId;
			}
			set
			{
				if ((this._PerioicalPlanId != value))
				{
					this.OnPerioicalPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PerioicalPlanId = value;
					this.SendPropertyChanged("PerioicalPlanId");
					this.OnPerioicalPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingId", DbType="Int NOT NULL")]
		public int BuildingId
		{
			get
			{
				return this._BuildingId;
			}
			set
			{
				if ((this._BuildingId != value))
				{
					if (this._Buiding.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuildingIdChanging(value);
					this.SendPropertyChanging();
					this._BuildingId = value;
					this.SendPropertyChanged("BuildingId");
					this.OnBuildingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanId", DbType="Int NOT NULL")]
		public int PlanId
		{
			get
			{
				return this._PlanId;
			}
			set
			{
				if ((this._PlanId != value))
				{
					if (this._BuildingPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PlanId = value;
					this.SendPropertyChanged("PlanId");
					this.OnPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buiding_BuildPerExecPlan", Storage="_Buiding", ThisKey="BuildingId", OtherKey="BuildingId", IsForeignKey=true)]
		public Buiding Buiding
		{
			get
			{
				return this._Buiding.Entity;
			}
			set
			{
				Buiding previousValue = this._Buiding.Entity;
				if (((previousValue != value) 
							|| (this._Buiding.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buiding.Entity = null;
						previousValue.BuildPerExecPlans.Remove(this);
					}
					this._Buiding.Entity = value;
					if ((value != null))
					{
						value.BuildPerExecPlans.Add(this);
						this._BuildingId = value.BuildingId;
					}
					else
					{
						this._BuildingId = default(int);
					}
					this.SendPropertyChanged("Buiding");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuildingPlan_BuildPerExecPlan", Storage="_BuildingPlan", ThisKey="PlanId", OtherKey="PlanId", IsForeignKey=true)]
		public BuildingPlan BuildingPlan
		{
			get
			{
				return this._BuildingPlan.Entity;
			}
			set
			{
				BuildingPlan previousValue = this._BuildingPlan.Entity;
				if (((previousValue != value) 
							|| (this._BuildingPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BuildingPlan.Entity = null;
						previousValue.BuildPerExecPlans.Remove(this);
					}
					this._BuildingPlan.Entity = value;
					if ((value != null))
					{
						value.BuildPerExecPlans.Add(this);
						this._PlanId = value.PlanId;
					}
					else
					{
						this._PlanId = default(int);
					}
					this.SendPropertyChanged("BuildingPlan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BLD.BuildPerExecPlanDetail")]
	public partial class BuildPerExecPlanDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PeriodicalPlanDetailId;
		
		private int _PerioicalPlanId;
		
		private int _WorkId;
		
		private int _MaterialId;
		
		private decimal _MaterialCost;
		
		private decimal _MaterialCount;
		
		private decimal _MaterialTotal;
		
		private decimal _LabourCost;
		
		private decimal _TotalCost;
		
		private EntityRef<Material> _Material;
		
		private EntityRef<ConfigDetail> _ConfigDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPeriodicalPlanDetailIdChanging(int value);
    partial void OnPeriodicalPlanDetailIdChanged();
    partial void OnPerioicalPlanIdChanging(int value);
    partial void OnPerioicalPlanIdChanged();
    partial void OnWorkIdChanging(int value);
    partial void OnWorkIdChanged();
    partial void OnMaterialIdChanging(int value);
    partial void OnMaterialIdChanged();
    partial void OnMaterialCostChanging(decimal value);
    partial void OnMaterialCostChanged();
    partial void OnMaterialCountChanging(decimal value);
    partial void OnMaterialCountChanged();
    partial void OnMaterialTotalChanging(decimal value);
    partial void OnMaterialTotalChanged();
    partial void OnLabourCostChanging(decimal value);
    partial void OnLabourCostChanged();
    partial void OnTotalCostChanging(decimal value);
    partial void OnTotalCostChanged();
    #endregion
		
		public BuildPerExecPlanDetail()
		{
			this._Material = default(EntityRef<Material>);
			this._ConfigDetail = default(EntityRef<ConfigDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicalPlanDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PeriodicalPlanDetailId
		{
			get
			{
				return this._PeriodicalPlanDetailId;
			}
			set
			{
				if ((this._PeriodicalPlanDetailId != value))
				{
					this.OnPeriodicalPlanDetailIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodicalPlanDetailId = value;
					this.SendPropertyChanged("PeriodicalPlanDetailId");
					this.OnPeriodicalPlanDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerioicalPlanId", DbType="Int NOT NULL")]
		public int PerioicalPlanId
		{
			get
			{
				return this._PerioicalPlanId;
			}
			set
			{
				if ((this._PerioicalPlanId != value))
				{
					this.OnPerioicalPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PerioicalPlanId = value;
					this.SendPropertyChanged("PerioicalPlanId");
					this.OnPerioicalPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkId", DbType="Int NOT NULL")]
		public int WorkId
		{
			get
			{
				return this._WorkId;
			}
			set
			{
				if ((this._WorkId != value))
				{
					if (this._ConfigDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkIdChanging(value);
					this.SendPropertyChanging();
					this._WorkId = value;
					this.SendPropertyChanged("WorkId");
					this.OnWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="Int NOT NULL")]
		public int MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					if (this._Material.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCost", DbType="Decimal(18,2) NOT NULL")]
		public decimal MaterialCost
		{
			get
			{
				return this._MaterialCost;
			}
			set
			{
				if ((this._MaterialCost != value))
				{
					this.OnMaterialCostChanging(value);
					this.SendPropertyChanging();
					this._MaterialCost = value;
					this.SendPropertyChanged("MaterialCost");
					this.OnMaterialCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCount", DbType="Decimal(18,2) NOT NULL")]
		public decimal MaterialCount
		{
			get
			{
				return this._MaterialCount;
			}
			set
			{
				if ((this._MaterialCount != value))
				{
					this.OnMaterialCountChanging(value);
					this.SendPropertyChanging();
					this._MaterialCount = value;
					this.SendPropertyChanged("MaterialCount");
					this.OnMaterialCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialTotal", DbType="Decimal(18,2) NOT NULL")]
		public decimal MaterialTotal
		{
			get
			{
				return this._MaterialTotal;
			}
			set
			{
				if ((this._MaterialTotal != value))
				{
					this.OnMaterialTotalChanging(value);
					this.SendPropertyChanging();
					this._MaterialTotal = value;
					this.SendPropertyChanged("MaterialTotal");
					this.OnMaterialTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabourCost", DbType="Decimal(18,2) NOT NULL")]
		public decimal LabourCost
		{
			get
			{
				return this._LabourCost;
			}
			set
			{
				if ((this._LabourCost != value))
				{
					this.OnLabourCostChanging(value);
					this.SendPropertyChanging();
					this._LabourCost = value;
					this.SendPropertyChanged("LabourCost");
					this.OnLabourCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this.OnTotalCostChanging(value);
					this.SendPropertyChanging();
					this._TotalCost = value;
					this.SendPropertyChanged("TotalCost");
					this.OnTotalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_BuildPerExecPlanDetail", Storage="_Material", ThisKey="MaterialId", OtherKey="MaterialId", IsForeignKey=true)]
		public Material Material
		{
			get
			{
				return this._Material.Entity;
			}
			set
			{
				Material previousValue = this._Material.Entity;
				if (((previousValue != value) 
							|| (this._Material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Material.Entity = null;
						previousValue.BuildPerExecPlanDetails.Remove(this);
					}
					this._Material.Entity = value;
					if ((value != null))
					{
						value.BuildPerExecPlanDetails.Add(this);
						this._MaterialId = value.MaterialId;
					}
					else
					{
						this._MaterialId = default(int);
					}
					this.SendPropertyChanged("Material");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_BuildPerExecPlanDetail", Storage="_ConfigDetail", ThisKey="WorkId", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail
		{
			get
			{
				return this._ConfigDetail.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail.Entity = null;
						previousValue.BuildPerExecPlanDetails.Remove(this);
					}
					this._ConfigDetail.Entity = value;
					if ((value != null))
					{
						value.BuildPerExecPlanDetails.Add(this);
						this._WorkId = value.ConfigDetailId;
					}
					else
					{
						this._WorkId = default(int);
					}
					this.SendPropertyChanged("ConfigDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BLD.Districts")]
	public partial class District : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DistrictId;
		
		private string _DistrictName;
		
		private System.Nullable<int> _CityId;
		
		private EntitySet<Street> _Streets;
		
		private EntityRef<ConfigDetail> _ConfigDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistrictIdChanging(int value);
    partial void OnDistrictIdChanged();
    partial void OnDistrictNameChanging(string value);
    partial void OnDistrictNameChanged();
    partial void OnCityIdChanging(System.Nullable<int> value);
    partial void OnCityIdChanged();
    #endregion
		
		public District()
		{
			this._Streets = new EntitySet<Street>(new Action<Street>(this.attach_Streets), new Action<Street>(this.detach_Streets));
			this._ConfigDetail = default(EntityRef<ConfigDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="NVarChar(50)")]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this.OnDistrictNameChanging(value);
					this.SendPropertyChanging();
					this._DistrictName = value;
					this.SendPropertyChanged("DistrictName");
					this.OnDistrictNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int")]
		public System.Nullable<int> CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					if (this._ConfigDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_Street", Storage="_Streets", ThisKey="DistrictId", OtherKey="DistrictId")]
		public EntitySet<Street> Streets
		{
			get
			{
				return this._Streets;
			}
			set
			{
				this._Streets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_District", Storage="_ConfigDetail", ThisKey="CityId", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail
		{
			get
			{
				return this._ConfigDetail.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail.Entity = null;
						previousValue.Districts.Remove(this);
					}
					this._ConfigDetail.Entity = value;
					if ((value != null))
					{
						value.Districts.Add(this);
						this._CityId = value.ConfigDetailId;
					}
					else
					{
						this._CityId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConfigDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Streets(Street entity)
		{
			this.SendPropertyChanging();
			entity.District = this;
		}
		
		private void detach_Streets(Street entity)
		{
			this.SendPropertyChanging();
			entity.District = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BLD.PeriodicalPlanToBuilding")]
	public partial class PeriodicalPlanToBuilding : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PeriodicalPlanId;
		
		private int _BuildingId;
		
		private int _PlanId;
		
		private System.DateTime _NextPlanDate;
		
		private EntityRef<Buiding> _Buiding;
		
		private EntityRef<BuildingPlan> _BuildingPlan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPeriodicalPlanIdChanging(int value);
    partial void OnPeriodicalPlanIdChanged();
    partial void OnBuildingIdChanging(int value);
    partial void OnBuildingIdChanged();
    partial void OnPlanIdChanging(int value);
    partial void OnPlanIdChanged();
    partial void OnNextPlanDateChanging(System.DateTime value);
    partial void OnNextPlanDateChanged();
    #endregion
		
		public PeriodicalPlanToBuilding()
		{
			this._Buiding = default(EntityRef<Buiding>);
			this._BuildingPlan = default(EntityRef<BuildingPlan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicalPlanId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PeriodicalPlanId
		{
			get
			{
				return this._PeriodicalPlanId;
			}
			set
			{
				if ((this._PeriodicalPlanId != value))
				{
					this.OnPeriodicalPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodicalPlanId = value;
					this.SendPropertyChanged("PeriodicalPlanId");
					this.OnPeriodicalPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingId", DbType="Int NOT NULL")]
		public int BuildingId
		{
			get
			{
				return this._BuildingId;
			}
			set
			{
				if ((this._BuildingId != value))
				{
					if (this._Buiding.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuildingIdChanging(value);
					this.SendPropertyChanging();
					this._BuildingId = value;
					this.SendPropertyChanged("BuildingId");
					this.OnBuildingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanId", DbType="Int NOT NULL")]
		public int PlanId
		{
			get
			{
				return this._PlanId;
			}
			set
			{
				if ((this._PlanId != value))
				{
					if (this._BuildingPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PlanId = value;
					this.SendPropertyChanged("PlanId");
					this.OnPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextPlanDate", DbType="Date NOT NULL")]
		public System.DateTime NextPlanDate
		{
			get
			{
				return this._NextPlanDate;
			}
			set
			{
				if ((this._NextPlanDate != value))
				{
					this.OnNextPlanDateChanging(value);
					this.SendPropertyChanging();
					this._NextPlanDate = value;
					this.SendPropertyChanged("NextPlanDate");
					this.OnNextPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buiding_PeriodicalPlanToBuilding", Storage="_Buiding", ThisKey="BuildingId", OtherKey="BuildingId", IsForeignKey=true)]
		public Buiding Buiding
		{
			get
			{
				return this._Buiding.Entity;
			}
			set
			{
				Buiding previousValue = this._Buiding.Entity;
				if (((previousValue != value) 
							|| (this._Buiding.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buiding.Entity = null;
						previousValue.PeriodicalPlanToBuildings.Remove(this);
					}
					this._Buiding.Entity = value;
					if ((value != null))
					{
						value.PeriodicalPlanToBuildings.Add(this);
						this._BuildingId = value.BuildingId;
					}
					else
					{
						this._BuildingId = default(int);
					}
					this.SendPropertyChanged("Buiding");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuildingPlan_PeriodicalPlanToBuilding", Storage="_BuildingPlan", ThisKey="PlanId", OtherKey="PlanId", IsForeignKey=true)]
		public BuildingPlan BuildingPlan
		{
			get
			{
				return this._BuildingPlan.Entity;
			}
			set
			{
				BuildingPlan previousValue = this._BuildingPlan.Entity;
				if (((previousValue != value) 
							|| (this._BuildingPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BuildingPlan.Entity = null;
						previousValue.PeriodicalPlanToBuildings.Remove(this);
					}
					this._BuildingPlan.Entity = value;
					if ((value != null))
					{
						value.PeriodicalPlanToBuildings.Add(this);
						this._PlanId = value.PlanId;
					}
					else
					{
						this._PlanId = default(int);
					}
					this.SendPropertyChanged("BuildingPlan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BLD.Streets")]
	public partial class Street : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StreetId;
		
		private string _StreetName;
		
		private System.Nullable<int> _DistrictId;
		
		private EntitySet<Buiding> _Buidings;
		
		private EntityRef<District> _District;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStreetIdChanging(int value);
    partial void OnStreetIdChanged();
    partial void OnStreetNameChanging(string value);
    partial void OnStreetNameChanged();
    partial void OnDistrictIdChanging(System.Nullable<int> value);
    partial void OnDistrictIdChanged();
    #endregion
		
		public Street()
		{
			this._Buidings = new EntitySet<Buiding>(new Action<Buiding>(this.attach_Buidings), new Action<Buiding>(this.detach_Buidings));
			this._District = default(EntityRef<District>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StreetId
		{
			get
			{
				return this._StreetId;
			}
			set
			{
				if ((this._StreetId != value))
				{
					this.OnStreetIdChanging(value);
					this.SendPropertyChanging();
					this._StreetId = value;
					this.SendPropertyChanged("StreetId");
					this.OnStreetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetName", DbType="NVarChar(100)")]
		public string StreetName
		{
			get
			{
				return this._StreetName;
			}
			set
			{
				if ((this._StreetName != value))
				{
					this.OnStreetNameChanging(value);
					this.SendPropertyChanging();
					this._StreetName = value;
					this.SendPropertyChanged("StreetName");
					this.OnStreetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", DbType="Int")]
		public System.Nullable<int> DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					if (this._District.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Street_Buiding", Storage="_Buidings", ThisKey="StreetId", OtherKey="StreetId")]
		public EntitySet<Buiding> Buidings
		{
			get
			{
				return this._Buidings;
			}
			set
			{
				this._Buidings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_Street", Storage="_District", ThisKey="DistrictId", OtherKey="DistrictId", IsForeignKey=true)]
		public District District
		{
			get
			{
				return this._District.Entity;
			}
			set
			{
				District previousValue = this._District.Entity;
				if (((previousValue != value) 
							|| (this._District.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._District.Entity = null;
						previousValue.Streets.Remove(this);
					}
					this._District.Entity = value;
					if ((value != null))
					{
						value.Streets.Add(this);
						this._DistrictId = value.DistrictId;
					}
					else
					{
						this._DistrictId = default(Nullable<int>);
					}
					this.SendPropertyChanged("District");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buidings(Buiding entity)
		{
			this.SendPropertyChanging();
			entity.Street = this;
		}
		
		private void detach_Buidings(Buiding entity)
		{
			this.SendPropertyChanging();
			entity.Street = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buses")]
	public partial class Buse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PlateNumber;
		
		private string _BodyDesc;
		
		private System.Nullable<System.DateTime> _RenewDate;
		
		private string _OwnerName;
		
		private System.Nullable<int> _StudentsCount;
		
		private System.Nullable<int> _DriverID;
		
		private System.Nullable<int> _CompID;
		
		private System.Nullable<int> _model;
		
		private string _Serial;
		
		private System.Nullable<System.DateTime> _PeriodicalInspectionDateExpiry;
		
		private string _DocumentNo;
		
		private System.Nullable<int> _SuperVisorId;
		
		private EntityRef<Buse> _Buse2;
		
		private EntityRef<Buse> _Buse1;
		
		private EntityRef<Type> _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPlateNumberChanging(string value);
    partial void OnPlateNumberChanged();
    partial void OnBodyDescChanging(string value);
    partial void OnBodyDescChanged();
    partial void OnRenewDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRenewDateChanged();
    partial void OnOwnerNameChanging(string value);
    partial void OnOwnerNameChanged();
    partial void OnStudentsCountChanging(System.Nullable<int> value);
    partial void OnStudentsCountChanged();
    partial void OnDriverIDChanging(System.Nullable<int> value);
    partial void OnDriverIDChanged();
    partial void OnCompIDChanging(System.Nullable<int> value);
    partial void OnCompIDChanged();
    partial void OnmodelChanging(System.Nullable<int> value);
    partial void OnmodelChanged();
    partial void OnSerialChanging(string value);
    partial void OnSerialChanged();
    partial void OnPeriodicalInspectionDateExpiryChanging(System.Nullable<System.DateTime> value);
    partial void OnPeriodicalInspectionDateExpiryChanged();
    partial void OnDocumentNoChanging(string value);
    partial void OnDocumentNoChanged();
    partial void OnSuperVisorIdChanging(System.Nullable<int> value);
    partial void OnSuperVisorIdChanged();
    #endregion
		
		public Buse()
		{
			this._Buse2 = default(EntityRef<Buse>);
			this._Buse1 = default(EntityRef<Buse>);
			this._Type = default(EntityRef<Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Buse1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateNumber", DbType="NVarChar(150)")]
		public string PlateNumber
		{
			get
			{
				return this._PlateNumber;
			}
			set
			{
				if ((this._PlateNumber != value))
				{
					this.OnPlateNumberChanging(value);
					this.SendPropertyChanging();
					this._PlateNumber = value;
					this.SendPropertyChanged("PlateNumber");
					this.OnPlateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyDesc", DbType="NVarChar(300)")]
		public string BodyDesc
		{
			get
			{
				return this._BodyDesc;
			}
			set
			{
				if ((this._BodyDesc != value))
				{
					this.OnBodyDescChanging(value);
					this.SendPropertyChanging();
					this._BodyDesc = value;
					this.SendPropertyChanged("BodyDesc");
					this.OnBodyDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RenewDate", DbType="Date")]
		public System.Nullable<System.DateTime> RenewDate
		{
			get
			{
				return this._RenewDate;
			}
			set
			{
				if ((this._RenewDate != value))
				{
					this.OnRenewDateChanging(value);
					this.SendPropertyChanging();
					this._RenewDate = value;
					this.SendPropertyChanged("RenewDate");
					this.OnRenewDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerName", DbType="NVarChar(250)")]
		public string OwnerName
		{
			get
			{
				return this._OwnerName;
			}
			set
			{
				if ((this._OwnerName != value))
				{
					this.OnOwnerNameChanging(value);
					this.SendPropertyChanging();
					this._OwnerName = value;
					this.SendPropertyChanged("OwnerName");
					this.OnOwnerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentsCount", DbType="Int")]
		public System.Nullable<int> StudentsCount
		{
			get
			{
				return this._StudentsCount;
			}
			set
			{
				if ((this._StudentsCount != value))
				{
					this.OnStudentsCountChanging(value);
					this.SendPropertyChanging();
					this._StudentsCount = value;
					this.SendPropertyChanged("StudentsCount");
					this.OnStudentsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverID", DbType="Int")]
		public System.Nullable<int> DriverID
		{
			get
			{
				return this._DriverID;
			}
			set
			{
				if ((this._DriverID != value))
				{
					this.OnDriverIDChanging(value);
					this.SendPropertyChanging();
					this._DriverID = value;
					this.SendPropertyChanged("DriverID");
					this.OnDriverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompID", DbType="Int")]
		public System.Nullable<int> CompID
		{
			get
			{
				return this._CompID;
			}
			set
			{
				if ((this._CompID != value))
				{
					this.OnCompIDChanging(value);
					this.SendPropertyChanging();
					this._CompID = value;
					this.SendPropertyChanged("CompID");
					this.OnCompIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_model", DbType="Int")]
		public System.Nullable<int> model
		{
			get
			{
				return this._model;
			}
			set
			{
				if ((this._model != value))
				{
					if (this._Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmodelChanging(value);
					this.SendPropertyChanging();
					this._model = value;
					this.SendPropertyChanged("model");
					this.OnmodelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial", DbType="NVarChar(15)")]
		public string Serial
		{
			get
			{
				return this._Serial;
			}
			set
			{
				if ((this._Serial != value))
				{
					this.OnSerialChanging(value);
					this.SendPropertyChanging();
					this._Serial = value;
					this.SendPropertyChanged("Serial");
					this.OnSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicalInspectionDateExpiry", DbType="Date")]
		public System.Nullable<System.DateTime> PeriodicalInspectionDateExpiry
		{
			get
			{
				return this._PeriodicalInspectionDateExpiry;
			}
			set
			{
				if ((this._PeriodicalInspectionDateExpiry != value))
				{
					this.OnPeriodicalInspectionDateExpiryChanging(value);
					this.SendPropertyChanging();
					this._PeriodicalInspectionDateExpiry = value;
					this.SendPropertyChanged("PeriodicalInspectionDateExpiry");
					this.OnPeriodicalInspectionDateExpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNo", DbType="NVarChar(20)")]
		public string DocumentNo
		{
			get
			{
				return this._DocumentNo;
			}
			set
			{
				if ((this._DocumentNo != value))
				{
					this.OnDocumentNoChanging(value);
					this.SendPropertyChanging();
					this._DocumentNo = value;
					this.SendPropertyChanged("DocumentNo");
					this.OnDocumentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperVisorId", DbType="Int")]
		public System.Nullable<int> SuperVisorId
		{
			get
			{
				return this._SuperVisorId;
			}
			set
			{
				if ((this._SuperVisorId != value))
				{
					this.OnSuperVisorIdChanging(value);
					this.SendPropertyChanging();
					this._SuperVisorId = value;
					this.SendPropertyChanged("SuperVisorId");
					this.OnSuperVisorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buse_Buse", Storage="_Buse2", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Buse Buse2
		{
			get
			{
				return this._Buse2.Entity;
			}
			set
			{
				Buse previousValue = this._Buse2.Entity;
				if (((previousValue != value) 
							|| (this._Buse2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buse2.Entity = null;
						previousValue.Buse1 = null;
					}
					this._Buse2.Entity = value;
					if ((value != null))
					{
						value.Buse1 = this;
					}
					this.SendPropertyChanged("Buse2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buse_Buse", Storage="_Buse1", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Buse Buse1
		{
			get
			{
				return this._Buse1.Entity;
			}
			set
			{
				Buse previousValue = this._Buse1.Entity;
				if (((previousValue != value) 
							|| (this._Buse1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buse1.Entity = null;
						previousValue.Buse2 = null;
					}
					this._Buse1.Entity = value;
					if ((value != null))
					{
						value.Buse2 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Buse1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Buse", Storage="_Type", ThisKey="model", OtherKey="Id", IsForeignKey=true)]
		public Type Type
		{
			get
			{
				return this._Type.Entity;
			}
			set
			{
				Type previousValue = this._Type.Entity;
				if (((previousValue != value) 
							|| (this._Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Type.Entity = null;
						previousValue.Buses.Remove(this);
					}
					this._Type.Entity = value;
					if ((value != null))
					{
						value.Buses.Add(this);
						this._model = value.Id;
					}
					else
					{
						this._model = default(Nullable<int>);
					}
					this.SendPropertyChanged("Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusesServices")]
	public partial class BusesService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _BusID;
		
		private System.Nullable<int> _ServiceID;
		
		private System.Nullable<int> _UserID;
		
		private System.DateTime _CheckDate;
		
		private System.Nullable<int> _CheckKiloM;
		
		private string _Defects;
		
		private string _Prodedures;
		
		private string _Notes;
		
		private EntitySet<BusesServicesSpar> _BusesServicesSpars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBusIDChanging(System.Nullable<int> value);
    partial void OnBusIDChanged();
    partial void OnServiceIDChanging(System.Nullable<int> value);
    partial void OnServiceIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnCheckDateChanging(System.DateTime value);
    partial void OnCheckDateChanged();
    partial void OnCheckKiloMChanging(System.Nullable<int> value);
    partial void OnCheckKiloMChanged();
    partial void OnDefectsChanging(string value);
    partial void OnDefectsChanged();
    partial void OnProdeduresChanging(string value);
    partial void OnProdeduresChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public BusesService()
		{
			this._BusesServicesSpars = new EntitySet<BusesServicesSpar>(new Action<BusesServicesSpar>(this.attach_BusesServicesSpars), new Action<BusesServicesSpar>(this.detach_BusesServicesSpars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusID", DbType="Int")]
		public System.Nullable<int> BusID
		{
			get
			{
				return this._BusID;
			}
			set
			{
				if ((this._BusID != value))
				{
					this.OnBusIDChanging(value);
					this.SendPropertyChanging();
					this._BusID = value;
					this.SendPropertyChanged("BusID");
					this.OnBusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="Int")]
		public System.Nullable<int> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="Date NOT NULL")]
		public System.DateTime CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckKiloM", DbType="Int")]
		public System.Nullable<int> CheckKiloM
		{
			get
			{
				return this._CheckKiloM;
			}
			set
			{
				if ((this._CheckKiloM != value))
				{
					this.OnCheckKiloMChanging(value);
					this.SendPropertyChanging();
					this._CheckKiloM = value;
					this.SendPropertyChanged("CheckKiloM");
					this.OnCheckKiloMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Defects", DbType="NVarChar(MAX)")]
		public string Defects
		{
			get
			{
				return this._Defects;
			}
			set
			{
				if ((this._Defects != value))
				{
					this.OnDefectsChanging(value);
					this.SendPropertyChanging();
					this._Defects = value;
					this.SendPropertyChanged("Defects");
					this.OnDefectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prodedures", DbType="NVarChar(MAX)")]
		public string Prodedures
		{
			get
			{
				return this._Prodedures;
			}
			set
			{
				if ((this._Prodedures != value))
				{
					this.OnProdeduresChanging(value);
					this.SendPropertyChanging();
					this._Prodedures = value;
					this.SendPropertyChanged("Prodedures");
					this.OnProdeduresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusesService_BusesServicesSpar", Storage="_BusesServicesSpars", ThisKey="ID", OtherKey="BusesServicesId")]
		public EntitySet<BusesServicesSpar> BusesServicesSpars
		{
			get
			{
				return this._BusesServicesSpars;
			}
			set
			{
				this._BusesServicesSpars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BusesServicesSpars(BusesServicesSpar entity)
		{
			this.SendPropertyChanging();
			entity.BusesService = this;
		}
		
		private void detach_BusesServicesSpars(BusesServicesSpar entity)
		{
			this.SendPropertyChanging();
			entity.BusesService = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusesServicesSpars")]
	public partial class BusesServicesSpar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusServicesSparId;
		
		private int _BusesServicesId;
		
		private int _SpareId;
		
		private System.Nullable<int> _EmployeeId;
		
		private System.Nullable<decimal> _SparCost;
		
		private System.Nullable<decimal> _SparCount;
		
		private System.Nullable<decimal> _SparTotal;
		
		private System.Nullable<decimal> _LaborCost;
		
		private System.Nullable<decimal> _TotalCost;
		
		private string _Notes;
		
		private EntityRef<BusesService> _BusesService;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<SparePart> _SparePart;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusServicesSparIdChanging(int value);
    partial void OnBusServicesSparIdChanged();
    partial void OnBusesServicesIdChanging(int value);
    partial void OnBusesServicesIdChanged();
    partial void OnSpareIdChanging(int value);
    partial void OnSpareIdChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnSparCostChanging(System.Nullable<decimal> value);
    partial void OnSparCostChanged();
    partial void OnSparCountChanging(System.Nullable<decimal> value);
    partial void OnSparCountChanged();
    partial void OnSparTotalChanging(System.Nullable<decimal> value);
    partial void OnSparTotalChanged();
    partial void OnLaborCostChanging(System.Nullable<decimal> value);
    partial void OnLaborCostChanged();
    partial void OnTotalCostChanging(System.Nullable<decimal> value);
    partial void OnTotalCostChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public BusesServicesSpar()
		{
			this._BusesService = default(EntityRef<BusesService>);
			this._Employee = default(EntityRef<Employee>);
			this._SparePart = default(EntityRef<SparePart>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusServicesSparId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BusServicesSparId
		{
			get
			{
				return this._BusServicesSparId;
			}
			set
			{
				if ((this._BusServicesSparId != value))
				{
					this.OnBusServicesSparIdChanging(value);
					this.SendPropertyChanging();
					this._BusServicesSparId = value;
					this.SendPropertyChanged("BusServicesSparId");
					this.OnBusServicesSparIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusesServicesId", DbType="Int NOT NULL")]
		public int BusesServicesId
		{
			get
			{
				return this._BusesServicesId;
			}
			set
			{
				if ((this._BusesServicesId != value))
				{
					if (this._BusesService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusesServicesIdChanging(value);
					this.SendPropertyChanging();
					this._BusesServicesId = value;
					this.SendPropertyChanged("BusesServicesId");
					this.OnBusesServicesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpareId", DbType="Int NOT NULL")]
		public int SpareId
		{
			get
			{
				return this._SpareId;
			}
			set
			{
				if ((this._SpareId != value))
				{
					if (this._SparePart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpareIdChanging(value);
					this.SendPropertyChanging();
					this._SpareId = value;
					this.SendPropertyChanged("SpareId");
					this.OnSpareIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SparCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SparCost
		{
			get
			{
				return this._SparCost;
			}
			set
			{
				if ((this._SparCost != value))
				{
					this.OnSparCostChanging(value);
					this.SendPropertyChanging();
					this._SparCost = value;
					this.SendPropertyChanged("SparCost");
					this.OnSparCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SparCount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SparCount
		{
			get
			{
				return this._SparCount;
			}
			set
			{
				if ((this._SparCount != value))
				{
					this.OnSparCountChanging(value);
					this.SendPropertyChanging();
					this._SparCount = value;
					this.SendPropertyChanged("SparCount");
					this.OnSparCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SparTotal", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SparTotal
		{
			get
			{
				return this._SparTotal;
			}
			set
			{
				if ((this._SparTotal != value))
				{
					this.OnSparTotalChanging(value);
					this.SendPropertyChanging();
					this._SparTotal = value;
					this.SendPropertyChanged("SparTotal");
					this.OnSparTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaborCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LaborCost
		{
			get
			{
				return this._LaborCost;
			}
			set
			{
				if ((this._LaborCost != value))
				{
					this.OnLaborCostChanging(value);
					this.SendPropertyChanging();
					this._LaborCost = value;
					this.SendPropertyChanged("LaborCost");
					this.OnLaborCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this.OnTotalCostChanging(value);
					this.SendPropertyChanging();
					this._TotalCost = value;
					this.SendPropertyChanged("TotalCost");
					this.OnTotalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusesService_BusesServicesSpar", Storage="_BusesService", ThisKey="BusesServicesId", OtherKey="ID", IsForeignKey=true)]
		public BusesService BusesService
		{
			get
			{
				return this._BusesService.Entity;
			}
			set
			{
				BusesService previousValue = this._BusesService.Entity;
				if (((previousValue != value) 
							|| (this._BusesService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusesService.Entity = null;
						previousValue.BusesServicesSpars.Remove(this);
					}
					this._BusesService.Entity = value;
					if ((value != null))
					{
						value.BusesServicesSpars.Add(this);
						this._BusesServicesId = value.ID;
					}
					else
					{
						this._BusesServicesId = default(int);
					}
					this.SendPropertyChanged("BusesService");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_BusesServicesSpar", Storage="_Employee", ThisKey="EmployeeId", OtherKey="EmployeeId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.BusesServicesSpars.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.BusesServicesSpars.Add(this);
						this._EmployeeId = value.EmployeeId;
					}
					else
					{
						this._EmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SparePart_BusesServicesSpar", Storage="_SparePart", ThisKey="SpareId", OtherKey="SpareId", IsForeignKey=true)]
		public SparePart SparePart
		{
			get
			{
				return this._SparePart.Entity;
			}
			set
			{
				SparePart previousValue = this._SparePart.Entity;
				if (((previousValue != value) 
							|| (this._SparePart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SparePart.Entity = null;
						previousValue.BusesServicesSpars.Remove(this);
					}
					this._SparePart.Entity = value;
					if ((value != null))
					{
						value.BusesServicesSpars.Add(this);
						this._SpareId = value.SpareId;
					}
					else
					{
						this._SpareId = default(int);
					}
					this.SendPropertyChanged("SparePart");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COM")]
	public partial class COM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COMID;
		
		private System.Nullable<int> _ParentID;
		
		private string _COMName;
		
		private string _COMDescription;
		
		private string _COMAddress;
		
		private string _COMUrl;
		
		private System.Data.Linq.Binary _ComCard;
		
		private System.Data.Linq.Binary _COMLogo;
		
		private string _COMPhone;
		
		private string _COMFax;
		
		private bool _COMStatus;
		
		private string _DocFooter;
		
		private System.Nullable<int> _COM_ID;
		
		private string _Accountant_Name;
		
		private string _FM_Name;
		
		private string _GM_Name;
		
		private System.Nullable<bool> _Is_Multiple_owner;
		
		private System.Nullable<int> _Current_AccountID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOMIDChanging(int value);
    partial void OnCOMIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnCOMNameChanging(string value);
    partial void OnCOMNameChanged();
    partial void OnCOMDescriptionChanging(string value);
    partial void OnCOMDescriptionChanged();
    partial void OnCOMAddressChanging(string value);
    partial void OnCOMAddressChanged();
    partial void OnCOMUrlChanging(string value);
    partial void OnCOMUrlChanged();
    partial void OnComCardChanging(System.Data.Linq.Binary value);
    partial void OnComCardChanged();
    partial void OnCOMLogoChanging(System.Data.Linq.Binary value);
    partial void OnCOMLogoChanged();
    partial void OnCOMPhoneChanging(string value);
    partial void OnCOMPhoneChanged();
    partial void OnCOMFaxChanging(string value);
    partial void OnCOMFaxChanged();
    partial void OnCOMStatusChanging(bool value);
    partial void OnCOMStatusChanged();
    partial void OnDocFooterChanging(string value);
    partial void OnDocFooterChanged();
    partial void OnCOM_IDChanging(System.Nullable<int> value);
    partial void OnCOM_IDChanged();
    partial void OnAccountant_NameChanging(string value);
    partial void OnAccountant_NameChanged();
    partial void OnFM_NameChanging(string value);
    partial void OnFM_NameChanged();
    partial void OnGM_NameChanging(string value);
    partial void OnGM_NameChanged();
    partial void OnIs_Multiple_ownerChanging(System.Nullable<bool> value);
    partial void OnIs_Multiple_ownerChanged();
    partial void OnCurrent_AccountIDChanging(System.Nullable<int> value);
    partial void OnCurrent_AccountIDChanged();
    #endregion
		
		public COM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int COMID
		{
			get
			{
				return this._COMID;
			}
			set
			{
				if ((this._COMID != value))
				{
					this.OnCOMIDChanging(value);
					this.SendPropertyChanging();
					this._COMID = value;
					this.SendPropertyChanged("COMID");
					this.OnCOMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string COMName
		{
			get
			{
				return this._COMName;
			}
			set
			{
				if ((this._COMName != value))
				{
					this.OnCOMNameChanging(value);
					this.SendPropertyChanging();
					this._COMName = value;
					this.SendPropertyChanged("COMName");
					this.OnCOMNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMDescription", DbType="NVarChar(500)")]
		public string COMDescription
		{
			get
			{
				return this._COMDescription;
			}
			set
			{
				if ((this._COMDescription != value))
				{
					this.OnCOMDescriptionChanging(value);
					this.SendPropertyChanging();
					this._COMDescription = value;
					this.SendPropertyChanged("COMDescription");
					this.OnCOMDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMAddress", DbType="NVarChar(500)")]
		public string COMAddress
		{
			get
			{
				return this._COMAddress;
			}
			set
			{
				if ((this._COMAddress != value))
				{
					this.OnCOMAddressChanging(value);
					this.SendPropertyChanging();
					this._COMAddress = value;
					this.SendPropertyChanged("COMAddress");
					this.OnCOMAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMUrl", DbType="NVarChar(250)")]
		public string COMUrl
		{
			get
			{
				return this._COMUrl;
			}
			set
			{
				if ((this._COMUrl != value))
				{
					this.OnCOMUrlChanging(value);
					this.SendPropertyChanging();
					this._COMUrl = value;
					this.SendPropertyChanged("COMUrl");
					this.OnCOMUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComCard", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ComCard
		{
			get
			{
				return this._ComCard;
			}
			set
			{
				if ((this._ComCard != value))
				{
					this.OnComCardChanging(value);
					this.SendPropertyChanging();
					this._ComCard = value;
					this.SendPropertyChanged("ComCard");
					this.OnComCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMLogo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary COMLogo
		{
			get
			{
				return this._COMLogo;
			}
			set
			{
				if ((this._COMLogo != value))
				{
					this.OnCOMLogoChanging(value);
					this.SendPropertyChanging();
					this._COMLogo = value;
					this.SendPropertyChanged("COMLogo");
					this.OnCOMLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPhone", DbType="VarChar(50)")]
		public string COMPhone
		{
			get
			{
				return this._COMPhone;
			}
			set
			{
				if ((this._COMPhone != value))
				{
					this.OnCOMPhoneChanging(value);
					this.SendPropertyChanging();
					this._COMPhone = value;
					this.SendPropertyChanged("COMPhone");
					this.OnCOMPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMFax", DbType="VarChar(50)")]
		public string COMFax
		{
			get
			{
				return this._COMFax;
			}
			set
			{
				if ((this._COMFax != value))
				{
					this.OnCOMFaxChanging(value);
					this.SendPropertyChanging();
					this._COMFax = value;
					this.SendPropertyChanged("COMFax");
					this.OnCOMFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMStatus", DbType="Bit NOT NULL")]
		public bool COMStatus
		{
			get
			{
				return this._COMStatus;
			}
			set
			{
				if ((this._COMStatus != value))
				{
					this.OnCOMStatusChanging(value);
					this.SendPropertyChanging();
					this._COMStatus = value;
					this.SendPropertyChanged("COMStatus");
					this.OnCOMStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocFooter", DbType="NVarChar(500)")]
		public string DocFooter
		{
			get
			{
				return this._DocFooter;
			}
			set
			{
				if ((this._DocFooter != value))
				{
					this.OnDocFooterChanging(value);
					this.SendPropertyChanging();
					this._DocFooter = value;
					this.SendPropertyChanged("DocFooter");
					this.OnDocFooterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COM_ID", DbType="Int")]
		public System.Nullable<int> COM_ID
		{
			get
			{
				return this._COM_ID;
			}
			set
			{
				if ((this._COM_ID != value))
				{
					this.OnCOM_IDChanging(value);
					this.SendPropertyChanging();
					this._COM_ID = value;
					this.SendPropertyChanged("COM_ID");
					this.OnCOM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accountant_Name", DbType="NVarChar(250)")]
		public string Accountant_Name
		{
			get
			{
				return this._Accountant_Name;
			}
			set
			{
				if ((this._Accountant_Name != value))
				{
					this.OnAccountant_NameChanging(value);
					this.SendPropertyChanging();
					this._Accountant_Name = value;
					this.SendPropertyChanged("Accountant_Name");
					this.OnAccountant_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FM_Name", DbType="NVarChar(250)")]
		public string FM_Name
		{
			get
			{
				return this._FM_Name;
			}
			set
			{
				if ((this._FM_Name != value))
				{
					this.OnFM_NameChanging(value);
					this.SendPropertyChanging();
					this._FM_Name = value;
					this.SendPropertyChanged("FM_Name");
					this.OnFM_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GM_Name", DbType="NVarChar(250)")]
		public string GM_Name
		{
			get
			{
				return this._GM_Name;
			}
			set
			{
				if ((this._GM_Name != value))
				{
					this.OnGM_NameChanging(value);
					this.SendPropertyChanging();
					this._GM_Name = value;
					this.SendPropertyChanged("GM_Name");
					this.OnGM_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Multiple_owner", DbType="Bit")]
		public System.Nullable<bool> Is_Multiple_owner
		{
			get
			{
				return this._Is_Multiple_owner;
			}
			set
			{
				if ((this._Is_Multiple_owner != value))
				{
					this.OnIs_Multiple_ownerChanging(value);
					this.SendPropertyChanging();
					this._Is_Multiple_owner = value;
					this.SendPropertyChanged("Is_Multiple_owner");
					this.OnIs_Multiple_ownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Current_AccountID", DbType="Int")]
		public System.Nullable<int> Current_AccountID
		{
			get
			{
				return this._Current_AccountID;
			}
			set
			{
				if ((this._Current_AccountID != value))
				{
					this.OnCurrent_AccountIDChanging(value);
					this.SendPropertyChanging();
					this._Current_AccountID = value;
					this.SendPropertyChanged("Current_AccountID");
					this.OnCurrent_AccountIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Companies")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CompName;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<int> _HrId;
		
		private EntitySet<StaticIPAddressWithBranch> _StaticIPAddressWithBranches;
		
		private EntitySet<Buiding> _Buidings;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<Vehcle> _Vehcles;
		
		private EntitySet<UserCompany> _UserCompanies;
		
		private EntitySet<MaintRequest> _MaintRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompNameChanging(string value);
    partial void OnCompNameChanged();
    partial void OnSchoolIDChanging(System.Nullable<int> value);
    partial void OnSchoolIDChanged();
    partial void OnHrIdChanging(System.Nullable<int> value);
    partial void OnHrIdChanged();
    #endregion
		
		public Company()
		{
			this._StaticIPAddressWithBranches = new EntitySet<StaticIPAddressWithBranch>(new Action<StaticIPAddressWithBranch>(this.attach_StaticIPAddressWithBranches), new Action<StaticIPAddressWithBranch>(this.detach_StaticIPAddressWithBranches));
			this._Buidings = new EntitySet<Buiding>(new Action<Buiding>(this.attach_Buidings), new Action<Buiding>(this.detach_Buidings));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._Vehcles = new EntitySet<Vehcle>(new Action<Vehcle>(this.attach_Vehcles), new Action<Vehcle>(this.detach_Vehcles));
			this._UserCompanies = new EntitySet<UserCompany>(new Action<UserCompany>(this.attach_UserCompanies), new Action<UserCompany>(this.detach_UserCompanies));
			this._MaintRequests = new EntitySet<MaintRequest>(new Action<MaintRequest>(this.attach_MaintRequests), new Action<MaintRequest>(this.detach_MaintRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="NVarChar(150)")]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this.OnCompNameChanging(value);
					this.SendPropertyChanging();
					this._CompName = value;
					this.SendPropertyChanged("CompName");
					this.OnCompNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HrId", DbType="Int")]
		public System.Nullable<int> HrId
		{
			get
			{
				return this._HrId;
			}
			set
			{
				if ((this._HrId != value))
				{
					this.OnHrIdChanging(value);
					this.SendPropertyChanging();
					this._HrId = value;
					this.SendPropertyChanged("HrId");
					this.OnHrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_StaticIPAddressWithBranch", Storage="_StaticIPAddressWithBranches", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<StaticIPAddressWithBranch> StaticIPAddressWithBranches
		{
			get
			{
				return this._StaticIPAddressWithBranches;
			}
			set
			{
				this._StaticIPAddressWithBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Buiding", Storage="_Buidings", ThisKey="ID", OtherKey="CompanyId")]
		public EntitySet<Buiding> Buidings
		{
			get
			{
				return this._Buidings;
			}
			set
			{
				this._Buidings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Employee", Storage="_Employees", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Vehcle", Storage="_Vehcles", ThisKey="ID", OtherKey="CompanyId")]
		public EntitySet<Vehcle> Vehcles
		{
			get
			{
				return this._Vehcles;
			}
			set
			{
				this._Vehcles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_UserCompany", Storage="_UserCompanies", ThisKey="ID", OtherKey="CompID")]
		public EntitySet<UserCompany> UserCompanies
		{
			get
			{
				return this._UserCompanies;
			}
			set
			{
				this._UserCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_MaintRequest", Storage="_MaintRequests", ThisKey="ID", OtherKey="CompanyId")]
		public EntitySet<MaintRequest> MaintRequests
		{
			get
			{
				return this._MaintRequests;
			}
			set
			{
				this._MaintRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StaticIPAddressWithBranches(StaticIPAddressWithBranch entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_StaticIPAddressWithBranches(StaticIPAddressWithBranch entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Buidings(Buiding entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Buidings(Buiding entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Vehcles(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Vehcles(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_UserCompanies(UserCompany entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_UserCompanies(UserCompany entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_MaintRequests(MaintRequest entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_MaintRequests(MaintRequest entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Con_Company")]
	public partial class Con_Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CON_ID;
		
		private System.Nullable<int> _ComID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCON_IDChanging(System.Nullable<int> value);
    partial void OnCON_IDChanged();
    partial void OnComIDChanging(System.Nullable<int> value);
    partial void OnComIDChanged();
    #endregion
		
		public Con_Company()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CON_ID", DbType="Int")]
		public System.Nullable<int> CON_ID
		{
			get
			{
				return this._CON_ID;
			}
			set
			{
				if ((this._CON_ID != value))
				{
					this.OnCON_IDChanging(value);
					this.SendPropertyChanging();
					this._CON_ID = value;
					this.SendPropertyChanged("CON_ID");
					this.OnCON_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComID", DbType="Int")]
		public System.Nullable<int> ComID
		{
			get
			{
				return this._ComID;
			}
			set
			{
				if ((this._ComID != value))
				{
					this.OnComIDChanging(value);
					this.SendPropertyChanging();
					this._ComID = value;
					this.SendPropertyChanged("ComID");
					this.OnComIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Drivers")]
	public partial class Driver : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DriverName;
		
		private string _Mobile;
		
		private System.Nullable<int> _CompID;
		
		private System.Nullable<System.DateTime> _LicenseExpiryDate;
		
		private string _LicenseNo;
		
		private string _AccommodationNo;
		
		private System.Nullable<int> _LastBus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDriverNameChanging(string value);
    partial void OnDriverNameChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnCompIDChanging(System.Nullable<int> value);
    partial void OnCompIDChanged();
    partial void OnLicenseExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLicenseExpiryDateChanged();
    partial void OnLicenseNoChanging(string value);
    partial void OnLicenseNoChanged();
    partial void OnAccommodationNoChanging(string value);
    partial void OnAccommodationNoChanged();
    partial void OnLastBusChanging(System.Nullable<int> value);
    partial void OnLastBusChanged();
    #endregion
		
		public Driver()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverName", DbType="NVarChar(150)")]
		public string DriverName
		{
			get
			{
				return this._DriverName;
			}
			set
			{
				if ((this._DriverName != value))
				{
					this.OnDriverNameChanging(value);
					this.SendPropertyChanging();
					this._DriverName = value;
					this.SendPropertyChanged("DriverName");
					this.OnDriverNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompID", DbType="Int")]
		public System.Nullable<int> CompID
		{
			get
			{
				return this._CompID;
			}
			set
			{
				if ((this._CompID != value))
				{
					this.OnCompIDChanging(value);
					this.SendPropertyChanging();
					this._CompID = value;
					this.SendPropertyChanged("CompID");
					this.OnCompIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseExpiryDate", DbType="Date")]
		public System.Nullable<System.DateTime> LicenseExpiryDate
		{
			get
			{
				return this._LicenseExpiryDate;
			}
			set
			{
				if ((this._LicenseExpiryDate != value))
				{
					this.OnLicenseExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._LicenseExpiryDate = value;
					this.SendPropertyChanged("LicenseExpiryDate");
					this.OnLicenseExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNo", DbType="NVarChar(20)")]
		public string LicenseNo
		{
			get
			{
				return this._LicenseNo;
			}
			set
			{
				if ((this._LicenseNo != value))
				{
					this.OnLicenseNoChanging(value);
					this.SendPropertyChanging();
					this._LicenseNo = value;
					this.SendPropertyChanged("LicenseNo");
					this.OnLicenseNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccommodationNo", DbType="NVarChar(20)")]
		public string AccommodationNo
		{
			get
			{
				return this._AccommodationNo;
			}
			set
			{
				if ((this._AccommodationNo != value))
				{
					this.OnAccommodationNoChanging(value);
					this.SendPropertyChanging();
					this._AccommodationNo = value;
					this.SendPropertyChanged("AccommodationNo");
					this.OnAccommodationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastBus", DbType="Int")]
		public System.Nullable<int> LastBus
		{
			get
			{
				return this._LastBus;
			}
			set
			{
				if ((this._LastBus != value))
				{
					this.OnLastBusChanging(value);
					this.SendPropertyChanging();
					this._LastBus = value;
					this.SendPropertyChanged("LastBus");
					this.OnLastBusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupPermission")]
	public partial class GroupPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _Group_ID;
		
		private int _Page_ID;
		
		private System.Nullable<bool> _Display;
		
		private System.Nullable<bool> _InsertA;
		
		private System.Nullable<bool> _UpdateA;
		
		private System.Nullable<bool> _DeleteA;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnGroup_IDChanging(int value);
    partial void OnGroup_IDChanged();
    partial void OnPage_IDChanging(int value);
    partial void OnPage_IDChanged();
    partial void OnDisplayChanging(System.Nullable<bool> value);
    partial void OnDisplayChanged();
    partial void OnInsertAChanging(System.Nullable<bool> value);
    partial void OnInsertAChanged();
    partial void OnUpdateAChanging(System.Nullable<bool> value);
    partial void OnUpdateAChanged();
    partial void OnDeleteAChanging(System.Nullable<bool> value);
    partial void OnDeleteAChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public GroupPermission()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_ID", DbType="Int NOT NULL")]
		public int Group_ID
		{
			get
			{
				return this._Group_ID;
			}
			set
			{
				if ((this._Group_ID != value))
				{
					this.OnGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._Group_ID = value;
					this.SendPropertyChanged("Group_ID");
					this.OnGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_ID", DbType="Int NOT NULL")]
		public int Page_ID
		{
			get
			{
				return this._Page_ID;
			}
			set
			{
				if ((this._Page_ID != value))
				{
					this.OnPage_IDChanging(value);
					this.SendPropertyChanging();
					this._Page_ID = value;
					this.SendPropertyChanged("Page_ID");
					this.OnPage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display", DbType="Bit")]
		public System.Nullable<bool> Display
		{
			get
			{
				return this._Display;
			}
			set
			{
				if ((this._Display != value))
				{
					this.OnDisplayChanging(value);
					this.SendPropertyChanging();
					this._Display = value;
					this.SendPropertyChanged("Display");
					this.OnDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertA", DbType="Bit")]
		public System.Nullable<bool> InsertA
		{
			get
			{
				return this._InsertA;
			}
			set
			{
				if ((this._InsertA != value))
				{
					this.OnInsertAChanging(value);
					this.SendPropertyChanging();
					this._InsertA = value;
					this.SendPropertyChanged("InsertA");
					this.OnInsertAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateA", DbType="Bit")]
		public System.Nullable<bool> UpdateA
		{
			get
			{
				return this._UpdateA;
			}
			set
			{
				if ((this._UpdateA != value))
				{
					this.OnUpdateAChanging(value);
					this.SendPropertyChanging();
					this._UpdateA = value;
					this.SendPropertyChanged("UpdateA");
					this.OnUpdateAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteA", DbType="Bit")]
		public System.Nullable<bool> DeleteA
		{
			get
			{
				return this._DeleteA;
			}
			set
			{
				if ((this._DeleteA != value))
				{
					this.OnDeleteAChanging(value);
					this.SendPropertyChanging();
					this._DeleteA = value;
					this.SendPropertyChanged("DeleteA");
					this.OnDeleteAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Groups")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _School_ID;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSchool_IDChanging(System.Nullable<int> value);
    partial void OnSchool_IDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Group()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_School_ID", DbType="Int")]
		public System.Nullable<int> School_ID
		{
			get
			{
				return this._School_ID;
			}
			set
			{
				if ((this._School_ID != value))
				{
					this.OnSchool_IDChanging(value);
					this.SendPropertyChanging();
					this._School_ID = value;
					this.SendPropertyChanged("School_ID");
					this.OnSchool_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaintReqComment")]
	public partial class MaintReqComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaintReqCommentId;
		
		private int _MaintReqId;
		
		private int _UserId;
		
		private string _Name;
		
		private string _Message;
		
		private EntityRef<MaintRequest> _MaintRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaintReqCommentIdChanging(int value);
    partial void OnMaintReqCommentIdChanged();
    partial void OnMaintReqIdChanging(int value);
    partial void OnMaintReqIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
		
		public MaintReqComment()
		{
			this._MaintRequest = default(EntityRef<MaintRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintReqCommentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaintReqCommentId
		{
			get
			{
				return this._MaintReqCommentId;
			}
			set
			{
				if ((this._MaintReqCommentId != value))
				{
					this.OnMaintReqCommentIdChanging(value);
					this.SendPropertyChanging();
					this._MaintReqCommentId = value;
					this.SendPropertyChanged("MaintReqCommentId");
					this.OnMaintReqCommentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintReqId", DbType="Int NOT NULL")]
		public int MaintReqId
		{
			get
			{
				return this._MaintReqId;
			}
			set
			{
				if ((this._MaintReqId != value))
				{
					if (this._MaintRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaintReqIdChanging(value);
					this.SendPropertyChanging();
					this._MaintReqId = value;
					this.SendPropertyChanged("MaintReqId");
					this.OnMaintReqIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaintRequest_MaintReqComment", Storage="_MaintRequest", ThisKey="MaintReqId", OtherKey="MaintReqId", IsForeignKey=true)]
		public MaintRequest MaintRequest
		{
			get
			{
				return this._MaintRequest.Entity;
			}
			set
			{
				MaintRequest previousValue = this._MaintRequest.Entity;
				if (((previousValue != value) 
							|| (this._MaintRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaintRequest.Entity = null;
						previousValue.MaintReqComments.Remove(this);
					}
					this._MaintRequest.Entity = value;
					if ((value != null))
					{
						value.MaintReqComments.Add(this);
						this._MaintReqId = value.MaintReqId;
					}
					else
					{
						this._MaintReqId = default(int);
					}
					this.SendPropertyChanged("MaintRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaintReqPicture")]
	public partial class MaintReqPicture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PictureId;
		
		private int _MaintReqId;
		
		private string _PicturePath;
		
		private string _Description;
		
		private EntityRef<MaintRequest> _MaintRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPictureIdChanging(int value);
    partial void OnPictureIdChanged();
    partial void OnMaintReqIdChanging(int value);
    partial void OnMaintReqIdChanged();
    partial void OnPicturePathChanging(string value);
    partial void OnPicturePathChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public MaintReqPicture()
		{
			this._MaintRequest = default(EntityRef<MaintRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PictureId
		{
			get
			{
				return this._PictureId;
			}
			set
			{
				if ((this._PictureId != value))
				{
					this.OnPictureIdChanging(value);
					this.SendPropertyChanging();
					this._PictureId = value;
					this.SendPropertyChanged("PictureId");
					this.OnPictureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintReqId", DbType="Int NOT NULL")]
		public int MaintReqId
		{
			get
			{
				return this._MaintReqId;
			}
			set
			{
				if ((this._MaintReqId != value))
				{
					if (this._MaintRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaintReqIdChanging(value);
					this.SendPropertyChanging();
					this._MaintReqId = value;
					this.SendPropertyChanged("MaintReqId");
					this.OnMaintReqIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PicturePath", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string PicturePath
		{
			get
			{
				return this._PicturePath;
			}
			set
			{
				if ((this._PicturePath != value))
				{
					this.OnPicturePathChanging(value);
					this.SendPropertyChanging();
					this._PicturePath = value;
					this.SendPropertyChanged("PicturePath");
					this.OnPicturePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaintRequest_MaintReqPicture", Storage="_MaintRequest", ThisKey="MaintReqId", OtherKey="MaintReqId", IsForeignKey=true)]
		public MaintRequest MaintRequest
		{
			get
			{
				return this._MaintRequest.Entity;
			}
			set
			{
				MaintRequest previousValue = this._MaintRequest.Entity;
				if (((previousValue != value) 
							|| (this._MaintRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaintRequest.Entity = null;
						previousValue.MaintReqPictures.Remove(this);
					}
					this._MaintRequest.Entity = value;
					if ((value != null))
					{
						value.MaintReqPictures.Add(this);
						this._MaintReqId = value.MaintReqId;
					}
					else
					{
						this._MaintReqId = default(int);
					}
					this.SendPropertyChanged("MaintRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Material")]
	public partial class Material : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaterialId;
		
		private int _CategoryId;
		
		private string _MaterialName;
		
		private decimal _MaterialPrice;
		
		private EntitySet<BuildingMaintDetail> _BuildingMaintDetails;
		
		private EntitySet<BuildPerExecPlanDetail> _BuildPerExecPlanDetails;
		
		private EntityRef<ConfigDetail> _ConfigDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaterialIdChanging(int value);
    partial void OnMaterialIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnMaterialNameChanging(string value);
    partial void OnMaterialNameChanged();
    partial void OnMaterialPriceChanging(decimal value);
    partial void OnMaterialPriceChanged();
    #endregion
		
		public Material()
		{
			this._BuildingMaintDetails = new EntitySet<BuildingMaintDetail>(new Action<BuildingMaintDetail>(this.attach_BuildingMaintDetails), new Action<BuildingMaintDetail>(this.detach_BuildingMaintDetails));
			this._BuildPerExecPlanDetails = new EntitySet<BuildPerExecPlanDetail>(new Action<BuildPerExecPlanDetail>(this.attach_BuildPerExecPlanDetails), new Action<BuildPerExecPlanDetail>(this.detach_BuildPerExecPlanDetails));
			this._ConfigDetail = default(EntityRef<ConfigDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._ConfigDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaterialName
		{
			get
			{
				return this._MaterialName;
			}
			set
			{
				if ((this._MaterialName != value))
				{
					this.OnMaterialNameChanging(value);
					this.SendPropertyChanging();
					this._MaterialName = value;
					this.SendPropertyChanged("MaterialName");
					this.OnMaterialNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal MaterialPrice
		{
			get
			{
				return this._MaterialPrice;
			}
			set
			{
				if ((this._MaterialPrice != value))
				{
					this.OnMaterialPriceChanging(value);
					this.SendPropertyChanging();
					this._MaterialPrice = value;
					this.SendPropertyChanged("MaterialPrice");
					this.OnMaterialPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_BuildingMaintDetail", Storage="_BuildingMaintDetails", ThisKey="MaterialId", OtherKey="MaterialId")]
		public EntitySet<BuildingMaintDetail> BuildingMaintDetails
		{
			get
			{
				return this._BuildingMaintDetails;
			}
			set
			{
				this._BuildingMaintDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_BuildPerExecPlanDetail", Storage="_BuildPerExecPlanDetails", ThisKey="MaterialId", OtherKey="MaterialId")]
		public EntitySet<BuildPerExecPlanDetail> BuildPerExecPlanDetails
		{
			get
			{
				return this._BuildPerExecPlanDetails;
			}
			set
			{
				this._BuildPerExecPlanDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Material", Storage="_ConfigDetail", ThisKey="CategoryId", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail
		{
			get
			{
				return this._ConfigDetail.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail.Entity = null;
						previousValue.Materials.Remove(this);
					}
					this._ConfigDetail.Entity = value;
					if ((value != null))
					{
						value.Materials.Add(this);
						this._CategoryId = value.ConfigDetailId;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("ConfigDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BuildingMaintDetails(BuildingMaintDetail entity)
		{
			this.SendPropertyChanging();
			entity.Material = this;
		}
		
		private void detach_BuildingMaintDetails(BuildingMaintDetail entity)
		{
			this.SendPropertyChanging();
			entity.Material = null;
		}
		
		private void attach_BuildPerExecPlanDetails(BuildPerExecPlanDetail entity)
		{
			this.SendPropertyChanging();
			entity.Material = this;
		}
		
		private void detach_BuildPerExecPlanDetails(BuildPerExecPlanDetail entity)
		{
			this.SendPropertyChanging();
			entity.Material = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mobiles")]
	public partial class Mobile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MobileId;
		
		private System.Nullable<int> _MobileParentId;
		
		private string _MobileName;
		
		private System.Nullable<int> _ServiceRequest;
		
		private EntitySet<Mobile> _Mobiles;
		
		private EntityRef<Mobile> _Mobile1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMobileIdChanging(int value);
    partial void OnMobileIdChanged();
    partial void OnMobileParentIdChanging(System.Nullable<int> value);
    partial void OnMobileParentIdChanged();
    partial void OnMobileNameChanging(string value);
    partial void OnMobileNameChanged();
    partial void OnServiceRequestChanging(System.Nullable<int> value);
    partial void OnServiceRequestChanged();
    #endregion
		
		public Mobile()
		{
			this._Mobiles = new EntitySet<Mobile>(new Action<Mobile>(this.attach_Mobiles), new Action<Mobile>(this.detach_Mobiles));
			this._Mobile1 = default(EntityRef<Mobile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MobileId
		{
			get
			{
				return this._MobileId;
			}
			set
			{
				if ((this._MobileId != value))
				{
					this.OnMobileIdChanging(value);
					this.SendPropertyChanging();
					this._MobileId = value;
					this.SendPropertyChanged("MobileId");
					this.OnMobileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileParentId", DbType="Int")]
		public System.Nullable<int> MobileParentId
		{
			get
			{
				return this._MobileParentId;
			}
			set
			{
				if ((this._MobileParentId != value))
				{
					if (this._Mobile1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMobileParentIdChanging(value);
					this.SendPropertyChanging();
					this._MobileParentId = value;
					this.SendPropertyChanged("MobileParentId");
					this.OnMobileParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MobileName
		{
			get
			{
				return this._MobileName;
			}
			set
			{
				if ((this._MobileName != value))
				{
					this.OnMobileNameChanging(value);
					this.SendPropertyChanging();
					this._MobileName = value;
					this.SendPropertyChanged("MobileName");
					this.OnMobileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceRequest", DbType="Int")]
		public System.Nullable<int> ServiceRequest
		{
			get
			{
				return this._ServiceRequest;
			}
			set
			{
				if ((this._ServiceRequest != value))
				{
					this.OnServiceRequestChanging(value);
					this.SendPropertyChanging();
					this._ServiceRequest = value;
					this.SendPropertyChanged("ServiceRequest");
					this.OnServiceRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mobile_Mobile", Storage="_Mobiles", ThisKey="MobileId", OtherKey="MobileParentId")]
		public EntitySet<Mobile> Mobiles
		{
			get
			{
				return this._Mobiles;
			}
			set
			{
				this._Mobiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mobile_Mobile", Storage="_Mobile1", ThisKey="MobileParentId", OtherKey="MobileId", IsForeignKey=true)]
		public Mobile Mobile1
		{
			get
			{
				return this._Mobile1.Entity;
			}
			set
			{
				Mobile previousValue = this._Mobile1.Entity;
				if (((previousValue != value) 
							|| (this._Mobile1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mobile1.Entity = null;
						previousValue.Mobiles.Remove(this);
					}
					this._Mobile1.Entity = value;
					if ((value != null))
					{
						value.Mobiles.Add(this);
						this._MobileParentId = value.MobileId;
					}
					else
					{
						this._MobileParentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Mobile1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mobiles(Mobile entity)
		{
			this.SendPropertyChanging();
			entity.Mobile1 = this;
		}
		
		private void detach_Mobiles(Mobile entity)
		{
			this.SendPropertyChanging();
			entity.Mobile1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PageActions")]
	public partial class PageAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Page_ID;
		
		private bool _Display;
		
		private bool _InsertA;
		
		private bool _UpdateA;
		
		private bool _DeleteA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPage_IDChanging(int value);
    partial void OnPage_IDChanged();
    partial void OnDisplayChanging(bool value);
    partial void OnDisplayChanged();
    partial void OnInsertAChanging(bool value);
    partial void OnInsertAChanged();
    partial void OnUpdateAChanging(bool value);
    partial void OnUpdateAChanged();
    partial void OnDeleteAChanging(bool value);
    partial void OnDeleteAChanged();
    #endregion
		
		public PageAction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_ID", DbType="Int NOT NULL")]
		public int Page_ID
		{
			get
			{
				return this._Page_ID;
			}
			set
			{
				if ((this._Page_ID != value))
				{
					this.OnPage_IDChanging(value);
					this.SendPropertyChanging();
					this._Page_ID = value;
					this.SendPropertyChanged("Page_ID");
					this.OnPage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display", DbType="Bit NOT NULL")]
		public bool Display
		{
			get
			{
				return this._Display;
			}
			set
			{
				if ((this._Display != value))
				{
					this.OnDisplayChanging(value);
					this.SendPropertyChanging();
					this._Display = value;
					this.SendPropertyChanged("Display");
					this.OnDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertA", DbType="Bit NOT NULL")]
		public bool InsertA
		{
			get
			{
				return this._InsertA;
			}
			set
			{
				if ((this._InsertA != value))
				{
					this.OnInsertAChanging(value);
					this.SendPropertyChanging();
					this._InsertA = value;
					this.SendPropertyChanged("InsertA");
					this.OnInsertAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateA", DbType="Bit NOT NULL")]
		public bool UpdateA
		{
			get
			{
				return this._UpdateA;
			}
			set
			{
				if ((this._UpdateA != value))
				{
					this.OnUpdateAChanging(value);
					this.SendPropertyChanging();
					this._UpdateA = value;
					this.SendPropertyChanged("UpdateA");
					this.OnUpdateAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteA", DbType="Bit NOT NULL")]
		public bool DeleteA
		{
			get
			{
				return this._DeleteA;
			}
			set
			{
				if ((this._DeleteA != value))
				{
					this.OnDeleteAChanging(value);
					this.SendPropertyChanging();
					this._DeleteA = value;
					this.SendPropertyChanged("DeleteA");
					this.OnDeleteAChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pages")]
	public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _URL;
		
		private bool _IsActive;
		
		private string _ArName;
		
		private System.Nullable<int> _PageOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnArNameChanging(string value);
    partial void OnArNameChanged();
    partial void OnPageOrderChanging(System.Nullable<int> value);
    partial void OnPageOrderChanged();
    #endregion
		
		public Page()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(250)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArName", DbType="NVarChar(250)")]
		public string ArName
		{
			get
			{
				return this._ArName;
			}
			set
			{
				if ((this._ArName != value))
				{
					this.OnArNameChanging(value);
					this.SendPropertyChanging();
					this._ArName = value;
					this.SendPropertyChanged("ArName");
					this.OnArNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageOrder", DbType="Int")]
		public System.Nullable<int> PageOrder
		{
			get
			{
				return this._PageOrder;
			}
			set
			{
				if ((this._PageOrder != value))
				{
					this.OnPageOrderChanging(value);
					this.SendPropertyChanging();
					this._PageOrder = value;
					this.SendPropertyChanged("PageOrder");
					this.OnPageOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phases")]
	public partial class Phase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _phases_Id;
		
		private string _phases_Name;
		
		private System.Nullable<int> _Phase_Order;
		
		private System.Nullable<int> _requestType;
		
		private System.Nullable<int> _IsActive;
		
		private System.Nullable<int> _Is_Delete;
		
		private System.Nullable<int> _phase_Step;
		
		private EntitySet<ReqPhase> _ReqPhases;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onphases_IdChanging(int value);
    partial void Onphases_IdChanged();
    partial void Onphases_NameChanging(string value);
    partial void Onphases_NameChanged();
    partial void OnPhase_OrderChanging(System.Nullable<int> value);
    partial void OnPhase_OrderChanged();
    partial void OnrequestTypeChanging(System.Nullable<int> value);
    partial void OnrequestTypeChanged();
    partial void OnIsActiveChanging(System.Nullable<int> value);
    partial void OnIsActiveChanged();
    partial void OnIs_DeleteChanging(System.Nullable<int> value);
    partial void OnIs_DeleteChanged();
    partial void Onphase_StepChanging(System.Nullable<int> value);
    partial void Onphase_StepChanged();
    #endregion
		
		public Phase()
		{
			this._ReqPhases = new EntitySet<ReqPhase>(new Action<ReqPhase>(this.attach_ReqPhases), new Action<ReqPhase>(this.detach_ReqPhases));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phases_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int phases_Id
		{
			get
			{
				return this._phases_Id;
			}
			set
			{
				if ((this._phases_Id != value))
				{
					this.Onphases_IdChanging(value);
					this.SendPropertyChanging();
					this._phases_Id = value;
					this.SendPropertyChanged("phases_Id");
					this.Onphases_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phases_Name", DbType="NVarChar(50)")]
		public string phases_Name
		{
			get
			{
				return this._phases_Name;
			}
			set
			{
				if ((this._phases_Name != value))
				{
					this.Onphases_NameChanging(value);
					this.SendPropertyChanging();
					this._phases_Name = value;
					this.SendPropertyChanged("phases_Name");
					this.Onphases_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phase_Order", DbType="Int")]
		public System.Nullable<int> Phase_Order
		{
			get
			{
				return this._Phase_Order;
			}
			set
			{
				if ((this._Phase_Order != value))
				{
					this.OnPhase_OrderChanging(value);
					this.SendPropertyChanging();
					this._Phase_Order = value;
					this.SendPropertyChanged("Phase_Order");
					this.OnPhase_OrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requestType", DbType="Int")]
		public System.Nullable<int> requestType
		{
			get
			{
				return this._requestType;
			}
			set
			{
				if ((this._requestType != value))
				{
					this.OnrequestTypeChanging(value);
					this.SendPropertyChanging();
					this._requestType = value;
					this.SendPropertyChanged("requestType");
					this.OnrequestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int")]
		public System.Nullable<int> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Delete", DbType="Int")]
		public System.Nullable<int> Is_Delete
		{
			get
			{
				return this._Is_Delete;
			}
			set
			{
				if ((this._Is_Delete != value))
				{
					this.OnIs_DeleteChanging(value);
					this.SendPropertyChanging();
					this._Is_Delete = value;
					this.SendPropertyChanged("Is_Delete");
					this.OnIs_DeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phase_Step", DbType="Int")]
		public System.Nullable<int> phase_Step
		{
			get
			{
				return this._phase_Step;
			}
			set
			{
				if ((this._phase_Step != value))
				{
					this.Onphase_StepChanging(value);
					this.SendPropertyChanging();
					this._phase_Step = value;
					this.SendPropertyChanged("phase_Step");
					this.Onphase_StepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phase_ReqPhase", Storage="_ReqPhases", ThisKey="phases_Id", OtherKey="Phase_Id")]
		public EntitySet<ReqPhase> ReqPhases
		{
			get
			{
				return this._ReqPhases;
			}
			set
			{
				this._ReqPhases.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReqPhases(ReqPhase entity)
		{
			this.SendPropertyChanging();
			entity.Phase = this;
		}
		
		private void detach_ReqPhases(ReqPhase entity)
		{
			this.SendPropertyChanging();
			entity.Phase = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Process")]
	public partial class Process : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProcessId;
		
		private System.Nullable<int> _User_Id;
		
		private System.Nullable<int> _Req_Id;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Notes;
		
		private string _Type;
		
		private EntityRef<User> _User;
		
		private EntityRef<MaintRequest> _MaintRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcessIdChanging(int value);
    partial void OnProcessIdChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnReq_IdChanging(System.Nullable<int> value);
    partial void OnReq_IdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public Process()
		{
			this._User = default(EntityRef<User>);
			this._MaintRequest = default(EntityRef<MaintRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Req_Id", DbType="Int")]
		public System.Nullable<int> Req_Id
		{
			get
			{
				return this._Req_Id;
			}
			set
			{
				if ((this._Req_Id != value))
				{
					if (this._MaintRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReq_IdChanging(value);
					this.SendPropertyChanging();
					this._Req_Id = value;
					this.SendPropertyChanged("Req_Id");
					this.OnReq_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Process", Storage="_User", ThisKey="User_Id", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Processes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Processes.Add(this);
						this._User_Id = value.ID;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaintRequest_Process", Storage="_MaintRequest", ThisKey="Req_Id", OtherKey="MaintReqId", IsForeignKey=true)]
		public MaintRequest MaintRequest
		{
			get
			{
				return this._MaintRequest.Entity;
			}
			set
			{
				MaintRequest previousValue = this._MaintRequest.Entity;
				if (((previousValue != value) 
							|| (this._MaintRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaintRequest.Entity = null;
						previousValue.Processes.Remove(this);
					}
					this._MaintRequest.Entity = value;
					if ((value != null))
					{
						value.Processes.Add(this);
						this._Req_Id = value.MaintReqId;
					}
					else
					{
						this._Req_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("MaintRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServicesSetting")]
	public partial class ServicesSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ServiceName;
		
		private System.Nullable<int> _KVPlus;
		
		private System.Nullable<int> _KVMinus;
		
		private System.Nullable<int> _DateV;
		
		private System.Nullable<int> _RequestType;
		
		private EntitySet<PeriodicPlanDetail> _PeriodicPlanDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnKVPlusChanging(System.Nullable<int> value);
    partial void OnKVPlusChanged();
    partial void OnKVMinusChanging(System.Nullable<int> value);
    partial void OnKVMinusChanged();
    partial void OnDateVChanging(System.Nullable<int> value);
    partial void OnDateVChanged();
    partial void OnRequestTypeChanging(System.Nullable<int> value);
    partial void OnRequestTypeChanged();
    #endregion
		
		public ServicesSetting()
		{
			this._PeriodicPlanDetails = new EntitySet<PeriodicPlanDetail>(new Action<PeriodicPlanDetail>(this.attach_PeriodicPlanDetails), new Action<PeriodicPlanDetail>(this.detach_PeriodicPlanDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(150)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KVPlus", DbType="Int")]
		public System.Nullable<int> KVPlus
		{
			get
			{
				return this._KVPlus;
			}
			set
			{
				if ((this._KVPlus != value))
				{
					this.OnKVPlusChanging(value);
					this.SendPropertyChanging();
					this._KVPlus = value;
					this.SendPropertyChanged("KVPlus");
					this.OnKVPlusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KVMinus", DbType="Int")]
		public System.Nullable<int> KVMinus
		{
			get
			{
				return this._KVMinus;
			}
			set
			{
				if ((this._KVMinus != value))
				{
					this.OnKVMinusChanging(value);
					this.SendPropertyChanging();
					this._KVMinus = value;
					this.SendPropertyChanged("KVMinus");
					this.OnKVMinusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateV", DbType="Int")]
		public System.Nullable<int> DateV
		{
			get
			{
				return this._DateV;
			}
			set
			{
				if ((this._DateV != value))
				{
					this.OnDateVChanging(value);
					this.SendPropertyChanging();
					this._DateV = value;
					this.SendPropertyChanged("DateV");
					this.OnDateVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestType", DbType="Int")]
		public System.Nullable<int> RequestType
		{
			get
			{
				return this._RequestType;
			}
			set
			{
				if ((this._RequestType != value))
				{
					this.OnRequestTypeChanging(value);
					this.SendPropertyChanging();
					this._RequestType = value;
					this.SendPropertyChanged("RequestType");
					this.OnRequestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicesSetting_PeriodicPlanDetail", Storage="_PeriodicPlanDetails", ThisKey="ID", OtherKey="RequiredJob")]
		public EntitySet<PeriodicPlanDetail> PeriodicPlanDetails
		{
			get
			{
				return this._PeriodicPlanDetails;
			}
			set
			{
				this._PeriodicPlanDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PeriodicPlanDetails(PeriodicPlanDetail entity)
		{
			this.SendPropertyChanging();
			entity.ServicesSetting = this;
		}
		
		private void detach_PeriodicPlanDetails(PeriodicPlanDetail entity)
		{
			this.SendPropertyChanging();
			entity.ServicesSetting = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Phase")]
	public partial class User_Phase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_ID;
		
		private int _phases_Id;
		
		private int _ID;
		
		private System.Nullable<int> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void Onphases_IdChanging(int value);
    partial void Onphases_IdChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIsActiveChanging(System.Nullable<int> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public User_Phase()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phases_Id", DbType="Int NOT NULL")]
		public int phases_Id
		{
			get
			{
				return this._phases_Id;
			}
			set
			{
				if ((this._phases_Id != value))
				{
					this.Onphases_IdChanging(value);
					this.SendPropertyChanging();
					this._phases_Id = value;
					this.SendPropertyChanged("phases_Id");
					this.Onphases_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int")]
		public System.Nullable<int> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserGroups")]
	public partial class UserGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _Group_ID;
		
		private int _User_ID;
		
		private string _School_ID;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnGroup_IDChanging(int value);
    partial void OnGroup_IDChanged();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnSchool_IDChanging(string value);
    partial void OnSchool_IDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public UserGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_ID", DbType="Int NOT NULL")]
		public int Group_ID
		{
			get
			{
				return this._Group_ID;
			}
			set
			{
				if ((this._Group_ID != value))
				{
					this.OnGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._Group_ID = value;
					this.SendPropertyChanged("Group_ID");
					this.OnGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_School_ID", DbType="NChar(10)")]
		public string School_ID
		{
			get
			{
				return this._School_ID;
			}
			set
			{
				if ((this._School_ID != value))
				{
					this.OnSchool_IDChanging(value);
					this.SendPropertyChanging();
					this._School_ID = value;
					this.SendPropertyChanged("School_ID");
					this.OnSchool_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userRequest")]
	public partial class userRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userRequestID;
		
		private int _UserId;
		
		private System.Nullable<int> _MaintRequestId;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _IsDeleted;
		
		private EntityRef<User> _User;
		
		private EntityRef<MaintRequest> _MaintRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserRequestIDChanging(int value);
    partial void OnuserRequestIDChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnMaintRequestIdChanging(System.Nullable<int> value);
    partial void OnMaintRequestIdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<int> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public userRequest()
		{
			this._User = default(EntityRef<User>);
			this._MaintRequest = default(EntityRef<MaintRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userRequestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int userRequestID
		{
			get
			{
				return this._userRequestID;
			}
			set
			{
				if ((this._userRequestID != value))
				{
					this.OnuserRequestIDChanging(value);
					this.SendPropertyChanging();
					this._userRequestID = value;
					this.SendPropertyChanged("userRequestID");
					this.OnuserRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintRequestId", DbType="Int")]
		public System.Nullable<int> MaintRequestId
		{
			get
			{
				return this._MaintRequestId;
			}
			set
			{
				if ((this._MaintRequestId != value))
				{
					if (this._MaintRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaintRequestIdChanging(value);
					this.SendPropertyChanging();
					this._MaintRequestId = value;
					this.SendPropertyChanged("MaintRequestId");
					this.OnMaintRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Int")]
		public System.Nullable<int> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_userRequest", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.userRequests.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.userRequests.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaintRequest_userRequest", Storage="_MaintRequest", ThisKey="MaintRequestId", OtherKey="MaintReqId", IsForeignKey=true)]
		public MaintRequest MaintRequest
		{
			get
			{
				return this._MaintRequest.Entity;
			}
			set
			{
				MaintRequest previousValue = this._MaintRequest.Entity;
				if (((previousValue != value) 
							|| (this._MaintRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaintRequest.Entity = null;
						previousValue.userRequests.Remove(this);
					}
					this._MaintRequest.Entity = value;
					if ((value != null))
					{
						value.userRequests.Add(this);
						this._MaintRequestId = value.MaintReqId;
					}
					else
					{
						this._MaintRequestId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MaintRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Def.Brand")]
	public partial class Brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BrandId;
		
		private string _BrandName;
		
		private string _Notes;
		
		private EntityRef<Brand> _Brand2;
		
		private EntitySet<Model> _Models;
		
		private EntityRef<Brand> _Brand1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBrandIdChanging(int value);
    partial void OnBrandIdChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Brand()
		{
			this._Brand2 = default(EntityRef<Brand>);
			this._Models = new EntitySet<Model>(new Action<Model>(this.attach_Models), new Action<Model>(this.detach_Models));
			this._Brand1 = default(EntityRef<Brand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BrandId
		{
			get
			{
				return this._BrandId;
			}
			set
			{
				if ((this._BrandId != value))
				{
					if (this._Brand1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrandIdChanging(value);
					this.SendPropertyChanging();
					this._BrandId = value;
					this.SendPropertyChanged("BrandId");
					this.OnBrandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(100)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Brand", Storage="_Brand2", ThisKey="BrandId", OtherKey="BrandId", IsUnique=true, IsForeignKey=false)]
		public Brand Brand2
		{
			get
			{
				return this._Brand2.Entity;
			}
			set
			{
				Brand previousValue = this._Brand2.Entity;
				if (((previousValue != value) 
							|| (this._Brand2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Brand2.Entity = null;
						previousValue.Brand1 = null;
					}
					this._Brand2.Entity = value;
					if ((value != null))
					{
						value.Brand1 = this;
					}
					this.SendPropertyChanged("Brand2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Model", Storage="_Models", ThisKey="BrandId", OtherKey="BrandId")]
		public EntitySet<Model> Models
		{
			get
			{
				return this._Models;
			}
			set
			{
				this._Models.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Brand", Storage="_Brand1", ThisKey="BrandId", OtherKey="BrandId", IsForeignKey=true)]
		public Brand Brand1
		{
			get
			{
				return this._Brand1.Entity;
			}
			set
			{
				Brand previousValue = this._Brand1.Entity;
				if (((previousValue != value) 
							|| (this._Brand1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Brand1.Entity = null;
						previousValue.Brand2 = null;
					}
					this._Brand1.Entity = value;
					if ((value != null))
					{
						value.Brand2 = this;
						this._BrandId = value.BrandId;
					}
					else
					{
						this._BrandId = default(int);
					}
					this.SendPropertyChanged("Brand1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Models(Model entity)
		{
			this.SendPropertyChanging();
			entity.Brand = this;
		}
		
		private void detach_Models(Model entity)
		{
			this.SendPropertyChanging();
			entity.Brand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Def.BusAttachments")]
	public partial class BusAttachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttachmentId;
		
		private int _VehcleId;
		
		private int _AttachmentName;
		
		private string _Notes;
		
		private EntityRef<Vehcle> _Vehcle;
		
		private EntityRef<ConfigDetail> _ConfigDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachmentIdChanging(int value);
    partial void OnAttachmentIdChanged();
    partial void OnVehcleIdChanging(int value);
    partial void OnVehcleIdChanged();
    partial void OnAttachmentNameChanging(int value);
    partial void OnAttachmentNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public BusAttachment()
		{
			this._Vehcle = default(EntityRef<Vehcle>);
			this._ConfigDetail = default(EntityRef<ConfigDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttachmentId
		{
			get
			{
				return this._AttachmentId;
			}
			set
			{
				if ((this._AttachmentId != value))
				{
					this.OnAttachmentIdChanging(value);
					this.SendPropertyChanging();
					this._AttachmentId = value;
					this.SendPropertyChanged("AttachmentId");
					this.OnAttachmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehcleId", DbType="Int NOT NULL")]
		public int VehcleId
		{
			get
			{
				return this._VehcleId;
			}
			set
			{
				if ((this._VehcleId != value))
				{
					if (this._Vehcle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehcleIdChanging(value);
					this.SendPropertyChanging();
					this._VehcleId = value;
					this.SendPropertyChanged("VehcleId");
					this.OnVehcleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentName", DbType="Int NOT NULL")]
		public int AttachmentName
		{
			get
			{
				return this._AttachmentName;
			}
			set
			{
				if ((this._AttachmentName != value))
				{
					if (this._ConfigDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttachmentNameChanging(value);
					this.SendPropertyChanging();
					this._AttachmentName = value;
					this.SendPropertyChanged("AttachmentName");
					this.OnAttachmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehcle_BusAttachment", Storage="_Vehcle", ThisKey="VehcleId", OtherKey="VehcleId", IsForeignKey=true)]
		public Vehcle Vehcle
		{
			get
			{
				return this._Vehcle.Entity;
			}
			set
			{
				Vehcle previousValue = this._Vehcle.Entity;
				if (((previousValue != value) 
							|| (this._Vehcle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehcle.Entity = null;
						previousValue.BusAttachments.Remove(this);
					}
					this._Vehcle.Entity = value;
					if ((value != null))
					{
						value.BusAttachments.Add(this);
						this._VehcleId = value.VehcleId;
					}
					else
					{
						this._VehcleId = default(int);
					}
					this.SendPropertyChanged("Vehcle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_BusAttachment", Storage="_ConfigDetail", ThisKey="AttachmentName", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail
		{
			get
			{
				return this._ConfigDetail.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail.Entity = null;
						previousValue.BusAttachments.Remove(this);
					}
					this._ConfigDetail.Entity = value;
					if ((value != null))
					{
						value.BusAttachments.Add(this);
						this._AttachmentName = value.ConfigDetailId;
					}
					else
					{
						this._AttachmentName = default(int);
					}
					this.SendPropertyChanged("ConfigDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Def.Classes")]
	public partial class Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassId;
		
		private int _ModelId;
		
		private string _ClassName;
		
		private string _Notes;
		
		private EntitySet<SparePart> _SpareParts;
		
		private EntitySet<SparPart> _SparParts;
		
		private EntitySet<Vehcle> _Vehcles;
		
		private EntityRef<Model> _Model;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnModelIdChanging(int value);
    partial void OnModelIdChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Class()
		{
			this._SpareParts = new EntitySet<SparePart>(new Action<SparePart>(this.attach_SpareParts), new Action<SparePart>(this.detach_SpareParts));
			this._SparParts = new EntitySet<SparPart>(new Action<SparPart>(this.attach_SparParts), new Action<SparPart>(this.detach_SparParts));
			this._Vehcles = new EntitySet<Vehcle>(new Action<Vehcle>(this.attach_Vehcles), new Action<Vehcle>(this.detach_Vehcles));
			this._Model = default(EntityRef<Model>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelId", DbType="Int NOT NULL")]
		public int ModelId
		{
			get
			{
				return this._ModelId;
			}
			set
			{
				if ((this._ModelId != value))
				{
					if (this._Model.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModelIdChanging(value);
					this.SendPropertyChanging();
					this._ModelId = value;
					this.SendPropertyChanged("ModelId");
					this.OnModelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this.OnClassNameChanging(value);
					this.SendPropertyChanging();
					this._ClassName = value;
					this.SendPropertyChanged("ClassName");
					this.OnClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_SparePart", Storage="_SpareParts", ThisKey="ClassId", OtherKey="ClassId")]
		public EntitySet<SparePart> SpareParts
		{
			get
			{
				return this._SpareParts;
			}
			set
			{
				this._SpareParts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_SparPart", Storage="_SparParts", ThisKey="ClassId", OtherKey="ClassId")]
		public EntitySet<SparPart> SparParts
		{
			get
			{
				return this._SparParts;
			}
			set
			{
				this._SparParts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Vehcle", Storage="_Vehcles", ThisKey="ClassId", OtherKey="ClassId")]
		public EntitySet<Vehcle> Vehcles
		{
			get
			{
				return this._Vehcles;
			}
			set
			{
				this._Vehcles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Model_Class", Storage="_Model", ThisKey="ModelId", OtherKey="ModelId", IsForeignKey=true)]
		public Model Model
		{
			get
			{
				return this._Model.Entity;
			}
			set
			{
				Model previousValue = this._Model.Entity;
				if (((previousValue != value) 
							|| (this._Model.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Model.Entity = null;
						previousValue.Classes.Remove(this);
					}
					this._Model.Entity = value;
					if ((value != null))
					{
						value.Classes.Add(this);
						this._ModelId = value.ModelId;
					}
					else
					{
						this._ModelId = default(int);
					}
					this.SendPropertyChanged("Model");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SpareParts(SparePart entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_SpareParts(SparePart entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_SparParts(SparPart entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_SparParts(SparPart entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_Vehcles(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_Vehcles(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Def.Employees")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeId;
		
		private string _EmployeeName;
		
		private System.Nullable<bool> _IsDriver;
		
		private System.Nullable<bool> _IsTecnician;
		
		private System.Nullable<bool> _IsSuperVisor;
		
		private System.Nullable<bool> _IsServicesSpecialist;
		
		private System.Nullable<int> _SpecializationId;
		
		private int _CompanyID;
		
		private string _EmployeeAddress;
		
		private decimal _Salary;
		
		private decimal _RatePerHour;
		
		private string _DrivingLicenseId;
		
		private System.Nullable<System.DateTime> _DrivingLicenseExpiryDate;
		
		private string _AccomodationNo;
		
		private System.Nullable<int> _LicenseType;
		
		private string _Mobile;
		
		private string _Tel;
		
		private string _Mail;
		
		private System.Nullable<int> _LastVehcle;
		
		private string _Notes;
		
		private EntitySet<FollowUpCard> _FollowUpCards;
		
		private EntitySet<PeriodicalPlanExecDetail> _PeriodicalPlanExecDetails;
		
		private EntitySet<BusesServicesSpar> _BusesServicesSpars;
		
		private EntityRef<Employee> _Employee2;
		
		private EntitySet<Vehcle> _Vehcles;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Employee> _Employee1;
		
		private EntityRef<Vehcle> _Vehcle;
		
		private EntityRef<ConfigDetail> _ConfigDetail;
		
		private EntityRef<ConfigDetail> _ConfigDetail1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnEmployeeNameChanging(string value);
    partial void OnEmployeeNameChanged();
    partial void OnIsDriverChanging(System.Nullable<bool> value);
    partial void OnIsDriverChanged();
    partial void OnIsTecnicianChanging(System.Nullable<bool> value);
    partial void OnIsTecnicianChanged();
    partial void OnIsSuperVisorChanging(System.Nullable<bool> value);
    partial void OnIsSuperVisorChanged();
    partial void OnIsServicesSpecialistChanging(System.Nullable<bool> value);
    partial void OnIsServicesSpecialistChanged();
    partial void OnSpecializationIdChanging(System.Nullable<int> value);
    partial void OnSpecializationIdChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnEmployeeAddressChanging(string value);
    partial void OnEmployeeAddressChanged();
    partial void OnSalaryChanging(decimal value);
    partial void OnSalaryChanged();
    partial void OnRatePerHourChanging(decimal value);
    partial void OnRatePerHourChanged();
    partial void OnDrivingLicenseIdChanging(string value);
    partial void OnDrivingLicenseIdChanged();
    partial void OnDrivingLicenseExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDrivingLicenseExpiryDateChanged();
    partial void OnAccomodationNoChanging(string value);
    partial void OnAccomodationNoChanged();
    partial void OnLicenseTypeChanging(System.Nullable<int> value);
    partial void OnLicenseTypeChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnLastVehcleChanging(System.Nullable<int> value);
    partial void OnLastVehcleChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Employee()
		{
			this._FollowUpCards = new EntitySet<FollowUpCard>(new Action<FollowUpCard>(this.attach_FollowUpCards), new Action<FollowUpCard>(this.detach_FollowUpCards));
			this._PeriodicalPlanExecDetails = new EntitySet<PeriodicalPlanExecDetail>(new Action<PeriodicalPlanExecDetail>(this.attach_PeriodicalPlanExecDetails), new Action<PeriodicalPlanExecDetail>(this.detach_PeriodicalPlanExecDetails));
			this._BusesServicesSpars = new EntitySet<BusesServicesSpar>(new Action<BusesServicesSpar>(this.attach_BusesServicesSpars), new Action<BusesServicesSpar>(this.detach_BusesServicesSpars));
			this._Employee2 = default(EntityRef<Employee>);
			this._Vehcles = new EntitySet<Vehcle>(new Action<Vehcle>(this.attach_Vehcles), new Action<Vehcle>(this.detach_Vehcles));
			this._Company = default(EntityRef<Company>);
			this._Employee1 = default(EntityRef<Employee>);
			this._Vehcle = default(EntityRef<Vehcle>);
			this._ConfigDetail = default(EntityRef<ConfigDetail>);
			this._ConfigDetail1 = default(EntityRef<ConfigDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this.OnEmployeeNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeName = value;
					this.SendPropertyChanged("EmployeeName");
					this.OnEmployeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDriver", DbType="Bit")]
		public System.Nullable<bool> IsDriver
		{
			get
			{
				return this._IsDriver;
			}
			set
			{
				if ((this._IsDriver != value))
				{
					this.OnIsDriverChanging(value);
					this.SendPropertyChanging();
					this._IsDriver = value;
					this.SendPropertyChanged("IsDriver");
					this.OnIsDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTecnician", DbType="Bit")]
		public System.Nullable<bool> IsTecnician
		{
			get
			{
				return this._IsTecnician;
			}
			set
			{
				if ((this._IsTecnician != value))
				{
					this.OnIsTecnicianChanging(value);
					this.SendPropertyChanging();
					this._IsTecnician = value;
					this.SendPropertyChanged("IsTecnician");
					this.OnIsTecnicianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperVisor", DbType="Bit")]
		public System.Nullable<bool> IsSuperVisor
		{
			get
			{
				return this._IsSuperVisor;
			}
			set
			{
				if ((this._IsSuperVisor != value))
				{
					this.OnIsSuperVisorChanging(value);
					this.SendPropertyChanging();
					this._IsSuperVisor = value;
					this.SendPropertyChanged("IsSuperVisor");
					this.OnIsSuperVisorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsServicesSpecialist", DbType="Bit")]
		public System.Nullable<bool> IsServicesSpecialist
		{
			get
			{
				return this._IsServicesSpecialist;
			}
			set
			{
				if ((this._IsServicesSpecialist != value))
				{
					this.OnIsServicesSpecialistChanging(value);
					this.SendPropertyChanging();
					this._IsServicesSpecialist = value;
					this.SendPropertyChanged("IsServicesSpecialist");
					this.OnIsServicesSpecialistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecializationId", DbType="Int")]
		public System.Nullable<int> SpecializationId
		{
			get
			{
				return this._SpecializationId;
			}
			set
			{
				if ((this._SpecializationId != value))
				{
					if (this._ConfigDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecializationIdChanging(value);
					this.SendPropertyChanging();
					this._SpecializationId = value;
					this.SendPropertyChanged("SpecializationId");
					this.OnSpecializationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeAddress", DbType="NVarChar(150)")]
		public string EmployeeAddress
		{
			get
			{
				return this._EmployeeAddress;
			}
			set
			{
				if ((this._EmployeeAddress != value))
				{
					this.OnEmployeeAddressChanging(value);
					this.SendPropertyChanging();
					this._EmployeeAddress = value;
					this.SendPropertyChanged("EmployeeAddress");
					this.OnEmployeeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Decimal(18,2) NOT NULL")]
		public decimal Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatePerHour", DbType="Decimal(18,2) NOT NULL")]
		public decimal RatePerHour
		{
			get
			{
				return this._RatePerHour;
			}
			set
			{
				if ((this._RatePerHour != value))
				{
					this.OnRatePerHourChanging(value);
					this.SendPropertyChanging();
					this._RatePerHour = value;
					this.SendPropertyChanged("RatePerHour");
					this.OnRatePerHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrivingLicenseId", DbType="NVarChar(20)")]
		public string DrivingLicenseId
		{
			get
			{
				return this._DrivingLicenseId;
			}
			set
			{
				if ((this._DrivingLicenseId != value))
				{
					this.OnDrivingLicenseIdChanging(value);
					this.SendPropertyChanging();
					this._DrivingLicenseId = value;
					this.SendPropertyChanged("DrivingLicenseId");
					this.OnDrivingLicenseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrivingLicenseExpiryDate", DbType="Date")]
		public System.Nullable<System.DateTime> DrivingLicenseExpiryDate
		{
			get
			{
				return this._DrivingLicenseExpiryDate;
			}
			set
			{
				if ((this._DrivingLicenseExpiryDate != value))
				{
					this.OnDrivingLicenseExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._DrivingLicenseExpiryDate = value;
					this.SendPropertyChanged("DrivingLicenseExpiryDate");
					this.OnDrivingLicenseExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomodationNo", DbType="NVarChar(25)")]
		public string AccomodationNo
		{
			get
			{
				return this._AccomodationNo;
			}
			set
			{
				if ((this._AccomodationNo != value))
				{
					this.OnAccomodationNoChanging(value);
					this.SendPropertyChanging();
					this._AccomodationNo = value;
					this.SendPropertyChanged("AccomodationNo");
					this.OnAccomodationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseType", DbType="Int")]
		public System.Nullable<int> LicenseType
		{
			get
			{
				return this._LicenseType;
			}
			set
			{
				if ((this._LicenseType != value))
				{
					if (this._ConfigDetail1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLicenseTypeChanging(value);
					this.SendPropertyChanging();
					this._LicenseType = value;
					this.SendPropertyChanged("LicenseType");
					this.OnLicenseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(20)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(20)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="NVarChar(50)")]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastVehcle", DbType="Int")]
		public System.Nullable<int> LastVehcle
		{
			get
			{
				return this._LastVehcle;
			}
			set
			{
				if ((this._LastVehcle != value))
				{
					if (this._Vehcle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastVehcleChanging(value);
					this.SendPropertyChanging();
					this._LastVehcle = value;
					this.SendPropertyChanged("LastVehcle");
					this.OnLastVehcleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_FollowUpCard", Storage="_FollowUpCards", ThisKey="EmployeeId", OtherKey="DriverId")]
		public EntitySet<FollowUpCard> FollowUpCards
		{
			get
			{
				return this._FollowUpCards;
			}
			set
			{
				this._FollowUpCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PeriodicalPlanExecDetail", Storage="_PeriodicalPlanExecDetails", ThisKey="EmployeeId", OtherKey="EmployeeId")]
		public EntitySet<PeriodicalPlanExecDetail> PeriodicalPlanExecDetails
		{
			get
			{
				return this._PeriodicalPlanExecDetails;
			}
			set
			{
				this._PeriodicalPlanExecDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_BusesServicesSpar", Storage="_BusesServicesSpars", ThisKey="EmployeeId", OtherKey="EmployeeId")]
		public EntitySet<BusesServicesSpar> BusesServicesSpars
		{
			get
			{
				return this._BusesServicesSpars;
			}
			set
			{
				this._BusesServicesSpars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee", Storage="_Employee2", ThisKey="EmployeeId", OtherKey="EmployeeId", IsUnique=true, IsForeignKey=false)]
		public Employee Employee2
		{
			get
			{
				return this._Employee2.Entity;
			}
			set
			{
				Employee previousValue = this._Employee2.Entity;
				if (((previousValue != value) 
							|| (this._Employee2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee2.Entity = null;
						previousValue.Employee1 = null;
					}
					this._Employee2.Entity = value;
					if ((value != null))
					{
						value.Employee1 = this;
					}
					this.SendPropertyChanged("Employee2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Vehcle", Storage="_Vehcles", ThisKey="EmployeeId", OtherKey="MainDriver")]
		public EntitySet<Vehcle> Vehcles
		{
			get
			{
				return this._Vehcles;
			}
			set
			{
				this._Vehcles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Employee", Storage="_Company", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee", Storage="_Employee1", ThisKey="EmployeeId", OtherKey="EmployeeId", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.Employee2 = null;
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.Employee2 = this;
						this._EmployeeId = value.EmployeeId;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehcle_Employee", Storage="_Vehcle", ThisKey="LastVehcle", OtherKey="VehcleId", IsForeignKey=true)]
		public Vehcle Vehcle
		{
			get
			{
				return this._Vehcle.Entity;
			}
			set
			{
				Vehcle previousValue = this._Vehcle.Entity;
				if (((previousValue != value) 
							|| (this._Vehcle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehcle.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Vehcle.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._LastVehcle = value.VehcleId;
					}
					else
					{
						this._LastVehcle = default(Nullable<int>);
					}
					this.SendPropertyChanged("Vehcle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Employee", Storage="_ConfigDetail", ThisKey="SpecializationId", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail
		{
			get
			{
				return this._ConfigDetail.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._ConfigDetail.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._SpecializationId = value.ConfigDetailId;
					}
					else
					{
						this._SpecializationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConfigDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Employee1", Storage="_ConfigDetail1", ThisKey="LicenseType", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail1
		{
			get
			{
				return this._ConfigDetail1.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail1.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail1.Entity = null;
						previousValue.Employees1.Remove(this);
					}
					this._ConfigDetail1.Entity = value;
					if ((value != null))
					{
						value.Employees1.Add(this);
						this._LicenseType = value.ConfigDetailId;
					}
					else
					{
						this._LicenseType = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConfigDetail1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FollowUpCards(FollowUpCard entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_FollowUpCards(FollowUpCard entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_PeriodicalPlanExecDetails(PeriodicalPlanExecDetail entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_PeriodicalPlanExecDetails(PeriodicalPlanExecDetail entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_BusesServicesSpars(BusesServicesSpar entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_BusesServicesSpars(BusesServicesSpar entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Vehcles(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Vehcles(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Def.FuelCardsDefinition")]
	public partial class FuelCardsDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FuelCardId;
		
		private int _FuelId;
		
		private string _CardName;
		
		private int _Litres;
		
		private decimal _Price;
		
		private string _Notes;
		
		private EntitySet<FuelCardsCustody> _FuelCardsCustodies;
		
		private EntitySet<FuelSupply> _FuelSupplies;
		
		private EntityRef<ConfigDetail> _ConfigDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFuelCardIdChanging(int value);
    partial void OnFuelCardIdChanged();
    partial void OnFuelIdChanging(int value);
    partial void OnFuelIdChanged();
    partial void OnCardNameChanging(string value);
    partial void OnCardNameChanged();
    partial void OnLitresChanging(int value);
    partial void OnLitresChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public FuelCardsDefinition()
		{
			this._FuelCardsCustodies = new EntitySet<FuelCardsCustody>(new Action<FuelCardsCustody>(this.attach_FuelCardsCustodies), new Action<FuelCardsCustody>(this.detach_FuelCardsCustodies));
			this._FuelSupplies = new EntitySet<FuelSupply>(new Action<FuelSupply>(this.attach_FuelSupplies), new Action<FuelSupply>(this.detach_FuelSupplies));
			this._ConfigDetail = default(EntityRef<ConfigDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelCardId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FuelCardId
		{
			get
			{
				return this._FuelCardId;
			}
			set
			{
				if ((this._FuelCardId != value))
				{
					this.OnFuelCardIdChanging(value);
					this.SendPropertyChanging();
					this._FuelCardId = value;
					this.SendPropertyChanged("FuelCardId");
					this.OnFuelCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelId", DbType="Int NOT NULL")]
		public int FuelId
		{
			get
			{
				return this._FuelId;
			}
			set
			{
				if ((this._FuelId != value))
				{
					if (this._ConfigDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFuelIdChanging(value);
					this.SendPropertyChanging();
					this._FuelId = value;
					this.SendPropertyChanged("FuelId");
					this.OnFuelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CardName
		{
			get
			{
				return this._CardName;
			}
			set
			{
				if ((this._CardName != value))
				{
					this.OnCardNameChanging(value);
					this.SendPropertyChanging();
					this._CardName = value;
					this.SendPropertyChanged("CardName");
					this.OnCardNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Litres", DbType="Int NOT NULL")]
		public int Litres
		{
			get
			{
				return this._Litres;
			}
			set
			{
				if ((this._Litres != value))
				{
					this.OnLitresChanging(value);
					this.SendPropertyChanging();
					this._Litres = value;
					this.SendPropertyChanged("Litres");
					this.OnLitresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FuelCardsDefinition_FuelCardsCustody", Storage="_FuelCardsCustodies", ThisKey="FuelCardId", OtherKey="FuelCardId")]
		public EntitySet<FuelCardsCustody> FuelCardsCustodies
		{
			get
			{
				return this._FuelCardsCustodies;
			}
			set
			{
				this._FuelCardsCustodies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FuelCardsDefinition_FuelSupply", Storage="_FuelSupplies", ThisKey="FuelCardId", OtherKey="FuelCardId")]
		public EntitySet<FuelSupply> FuelSupplies
		{
			get
			{
				return this._FuelSupplies;
			}
			set
			{
				this._FuelSupplies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_FuelCardsDefinition", Storage="_ConfigDetail", ThisKey="FuelId", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail
		{
			get
			{
				return this._ConfigDetail.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail.Entity = null;
						previousValue.FuelCardsDefinitions.Remove(this);
					}
					this._ConfigDetail.Entity = value;
					if ((value != null))
					{
						value.FuelCardsDefinitions.Add(this);
						this._FuelId = value.ConfigDetailId;
					}
					else
					{
						this._FuelId = default(int);
					}
					this.SendPropertyChanged("ConfigDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FuelCardsCustodies(FuelCardsCustody entity)
		{
			this.SendPropertyChanging();
			entity.FuelCardsDefinition = this;
		}
		
		private void detach_FuelCardsCustodies(FuelCardsCustody entity)
		{
			this.SendPropertyChanging();
			entity.FuelCardsDefinition = null;
		}
		
		private void attach_FuelSupplies(FuelSupply entity)
		{
			this.SendPropertyChanging();
			entity.FuelCardsDefinition = this;
		}
		
		private void detach_FuelSupplies(FuelSupply entity)
		{
			this.SendPropertyChanging();
			entity.FuelCardsDefinition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Def.Models")]
	public partial class Model : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModelId;
		
		private string _ModelName;
		
		private int _BrandId;
		
		private string _Notes;
		
		private EntitySet<Class> _Classes;
		
		private EntityRef<Brand> _Brand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelIdChanging(int value);
    partial void OnModelIdChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnBrandIdChanging(int value);
    partial void OnBrandIdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Model()
		{
			this._Classes = new EntitySet<Class>(new Action<Class>(this.attach_Classes), new Action<Class>(this.detach_Classes));
			this._Brand = default(EntityRef<Brand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ModelId
		{
			get
			{
				return this._ModelId;
			}
			set
			{
				if ((this._ModelId != value))
				{
					this.OnModelIdChanging(value);
					this.SendPropertyChanging();
					this._ModelId = value;
					this.SendPropertyChanged("ModelId");
					this.OnModelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandId", DbType="Int NOT NULL")]
		public int BrandId
		{
			get
			{
				return this._BrandId;
			}
			set
			{
				if ((this._BrandId != value))
				{
					if (this._Brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrandIdChanging(value);
					this.SendPropertyChanging();
					this._BrandId = value;
					this.SendPropertyChanged("BrandId");
					this.OnBrandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(100)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Model_Class", Storage="_Classes", ThisKey="ModelId", OtherKey="ModelId")]
		public EntitySet<Class> Classes
		{
			get
			{
				return this._Classes;
			}
			set
			{
				this._Classes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Model", Storage="_Brand", ThisKey="BrandId", OtherKey="BrandId", IsForeignKey=true)]
		public Brand Brand
		{
			get
			{
				return this._Brand.Entity;
			}
			set
			{
				Brand previousValue = this._Brand.Entity;
				if (((previousValue != value) 
							|| (this._Brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Brand.Entity = null;
						previousValue.Models.Remove(this);
					}
					this._Brand.Entity = value;
					if ((value != null))
					{
						value.Models.Add(this);
						this._BrandId = value.BrandId;
					}
					else
					{
						this._BrandId = default(int);
					}
					this.SendPropertyChanged("Brand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.Model = this;
		}
		
		private void detach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.Model = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Def.PeriodicalPlan")]
	public partial class PeriodicalPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maintPlanId;
		
		private string _PlanName;
		
		private System.Nullable<int> _EveryKm;
		
		private System.Nullable<int> _EveryWhilePerMonth;
		
		private string _RequiredSpareParts;
		
		private string _PlanDescription;
		
		private EntitySet<Alarm> _Alarms;
		
		private EntitySet<PeriodicalPlanSpar> _PeriodicalPlanSpars;
		
		private EntitySet<PeriodicalPlanToVehcle> _PeriodicalPlanToVehcles;
		
		private EntitySet<PeriodicPlanDetail> _PeriodicPlanDetails;
		
		private EntitySet<PeriodicalPlanExecution> _PeriodicalPlanExecutions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaintPlanIdChanging(int value);
    partial void OnmaintPlanIdChanged();
    partial void OnPlanNameChanging(string value);
    partial void OnPlanNameChanged();
    partial void OnEveryKmChanging(System.Nullable<int> value);
    partial void OnEveryKmChanged();
    partial void OnEveryWhilePerMonthChanging(System.Nullable<int> value);
    partial void OnEveryWhilePerMonthChanged();
    partial void OnRequiredSparePartsChanging(string value);
    partial void OnRequiredSparePartsChanged();
    partial void OnPlanDescriptionChanging(string value);
    partial void OnPlanDescriptionChanged();
    #endregion
		
		public PeriodicalPlan()
		{
			this._Alarms = new EntitySet<Alarm>(new Action<Alarm>(this.attach_Alarms), new Action<Alarm>(this.detach_Alarms));
			this._PeriodicalPlanSpars = new EntitySet<PeriodicalPlanSpar>(new Action<PeriodicalPlanSpar>(this.attach_PeriodicalPlanSpars), new Action<PeriodicalPlanSpar>(this.detach_PeriodicalPlanSpars));
			this._PeriodicalPlanToVehcles = new EntitySet<PeriodicalPlanToVehcle>(new Action<PeriodicalPlanToVehcle>(this.attach_PeriodicalPlanToVehcles), new Action<PeriodicalPlanToVehcle>(this.detach_PeriodicalPlanToVehcles));
			this._PeriodicPlanDetails = new EntitySet<PeriodicPlanDetail>(new Action<PeriodicPlanDetail>(this.attach_PeriodicPlanDetails), new Action<PeriodicPlanDetail>(this.detach_PeriodicPlanDetails));
			this._PeriodicalPlanExecutions = new EntitySet<PeriodicalPlanExecution>(new Action<PeriodicalPlanExecution>(this.attach_PeriodicalPlanExecutions), new Action<PeriodicalPlanExecution>(this.detach_PeriodicalPlanExecutions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maintPlanId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maintPlanId
		{
			get
			{
				return this._maintPlanId;
			}
			set
			{
				if ((this._maintPlanId != value))
				{
					this.OnmaintPlanIdChanging(value);
					this.SendPropertyChanging();
					this._maintPlanId = value;
					this.SendPropertyChanged("maintPlanId");
					this.OnmaintPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PlanName
		{
			get
			{
				return this._PlanName;
			}
			set
			{
				if ((this._PlanName != value))
				{
					this.OnPlanNameChanging(value);
					this.SendPropertyChanging();
					this._PlanName = value;
					this.SendPropertyChanged("PlanName");
					this.OnPlanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EveryKm", DbType="Int")]
		public System.Nullable<int> EveryKm
		{
			get
			{
				return this._EveryKm;
			}
			set
			{
				if ((this._EveryKm != value))
				{
					this.OnEveryKmChanging(value);
					this.SendPropertyChanging();
					this._EveryKm = value;
					this.SendPropertyChanged("EveryKm");
					this.OnEveryKmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EveryWhilePerMonth", DbType="Int")]
		public System.Nullable<int> EveryWhilePerMonth
		{
			get
			{
				return this._EveryWhilePerMonth;
			}
			set
			{
				if ((this._EveryWhilePerMonth != value))
				{
					this.OnEveryWhilePerMonthChanging(value);
					this.SendPropertyChanging();
					this._EveryWhilePerMonth = value;
					this.SendPropertyChanged("EveryWhilePerMonth");
					this.OnEveryWhilePerMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredSpareParts", DbType="NVarChar(500)")]
		public string RequiredSpareParts
		{
			get
			{
				return this._RequiredSpareParts;
			}
			set
			{
				if ((this._RequiredSpareParts != value))
				{
					this.OnRequiredSparePartsChanging(value);
					this.SendPropertyChanging();
					this._RequiredSpareParts = value;
					this.SendPropertyChanged("RequiredSpareParts");
					this.OnRequiredSparePartsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanDescription", DbType="NVarChar(MAX)")]
		public string PlanDescription
		{
			get
			{
				return this._PlanDescription;
			}
			set
			{
				if ((this._PlanDescription != value))
				{
					this.OnPlanDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PlanDescription = value;
					this.SendPropertyChanged("PlanDescription");
					this.OnPlanDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodicalPlan_Alarm", Storage="_Alarms", ThisKey="maintPlanId", OtherKey="PlanId")]
		public EntitySet<Alarm> Alarms
		{
			get
			{
				return this._Alarms;
			}
			set
			{
				this._Alarms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodicalPlan_PeriodicalPlanSpar", Storage="_PeriodicalPlanSpars", ThisKey="maintPlanId", OtherKey="maintPlanId")]
		public EntitySet<PeriodicalPlanSpar> PeriodicalPlanSpars
		{
			get
			{
				return this._PeriodicalPlanSpars;
			}
			set
			{
				this._PeriodicalPlanSpars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodicalPlan_PeriodicalPlanToVehcle", Storage="_PeriodicalPlanToVehcles", ThisKey="maintPlanId", OtherKey="maintPlanId")]
		public EntitySet<PeriodicalPlanToVehcle> PeriodicalPlanToVehcles
		{
			get
			{
				return this._PeriodicalPlanToVehcles;
			}
			set
			{
				this._PeriodicalPlanToVehcles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodicalPlan_PeriodicPlanDetail", Storage="_PeriodicPlanDetails", ThisKey="maintPlanId", OtherKey="maintPlanId")]
		public EntitySet<PeriodicPlanDetail> PeriodicPlanDetails
		{
			get
			{
				return this._PeriodicPlanDetails;
			}
			set
			{
				this._PeriodicPlanDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodicalPlan_PeriodicalPlanExecution", Storage="_PeriodicalPlanExecutions", ThisKey="maintPlanId", OtherKey="maintPlanId")]
		public EntitySet<PeriodicalPlanExecution> PeriodicalPlanExecutions
		{
			get
			{
				return this._PeriodicalPlanExecutions;
			}
			set
			{
				this._PeriodicalPlanExecutions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alarms(Alarm entity)
		{
			this.SendPropertyChanging();
			entity.PeriodicalPlan = this;
		}
		
		private void detach_Alarms(Alarm entity)
		{
			this.SendPropertyChanging();
			entity.PeriodicalPlan = null;
		}
		
		private void attach_PeriodicalPlanSpars(PeriodicalPlanSpar entity)
		{
			this.SendPropertyChanging();
			entity.PeriodicalPlan = this;
		}
		
		private void detach_PeriodicalPlanSpars(PeriodicalPlanSpar entity)
		{
			this.SendPropertyChanging();
			entity.PeriodicalPlan = null;
		}
		
		private void attach_PeriodicalPlanToVehcles(PeriodicalPlanToVehcle entity)
		{
			this.SendPropertyChanging();
			entity.PeriodicalPlan = this;
		}
		
		private void detach_PeriodicalPlanToVehcles(PeriodicalPlanToVehcle entity)
		{
			this.SendPropertyChanging();
			entity.PeriodicalPlan = null;
		}
		
		private void attach_PeriodicPlanDetails(PeriodicPlanDetail entity)
		{
			this.SendPropertyChanging();
			entity.PeriodicalPlan = this;
		}
		
		private void detach_PeriodicPlanDetails(PeriodicPlanDetail entity)
		{
			this.SendPropertyChanging();
			entity.PeriodicalPlan = null;
		}
		
		private void attach_PeriodicalPlanExecutions(PeriodicalPlanExecution entity)
		{
			this.SendPropertyChanging();
			entity.PeriodicalPlan = this;
		}
		
		private void detach_PeriodicalPlanExecutions(PeriodicalPlanExecution entity)
		{
			this.SendPropertyChanging();
			entity.PeriodicalPlan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Def.PeriodicalPlanSpars")]
	public partial class PeriodicalPlanSpar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PeriodicalPlanSparId;
		
		private int _maintPlanId;
		
		private int _SpareId;
		
		private decimal _SparCount;
		
		private string _Notes;
		
		private EntityRef<PeriodicalPlan> _PeriodicalPlan;
		
		private EntityRef<SparePart> _SparePart;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPeriodicalPlanSparIdChanging(int value);
    partial void OnPeriodicalPlanSparIdChanged();
    partial void OnmaintPlanIdChanging(int value);
    partial void OnmaintPlanIdChanged();
    partial void OnSpareIdChanging(int value);
    partial void OnSpareIdChanged();
    partial void OnSparCountChanging(decimal value);
    partial void OnSparCountChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public PeriodicalPlanSpar()
		{
			this._PeriodicalPlan = default(EntityRef<PeriodicalPlan>);
			this._SparePart = default(EntityRef<SparePart>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicalPlanSparId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PeriodicalPlanSparId
		{
			get
			{
				return this._PeriodicalPlanSparId;
			}
			set
			{
				if ((this._PeriodicalPlanSparId != value))
				{
					this.OnPeriodicalPlanSparIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodicalPlanSparId = value;
					this.SendPropertyChanged("PeriodicalPlanSparId");
					this.OnPeriodicalPlanSparIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maintPlanId", DbType="Int NOT NULL")]
		public int maintPlanId
		{
			get
			{
				return this._maintPlanId;
			}
			set
			{
				if ((this._maintPlanId != value))
				{
					if (this._PeriodicalPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaintPlanIdChanging(value);
					this.SendPropertyChanging();
					this._maintPlanId = value;
					this.SendPropertyChanged("maintPlanId");
					this.OnmaintPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpareId", DbType="Int NOT NULL")]
		public int SpareId
		{
			get
			{
				return this._SpareId;
			}
			set
			{
				if ((this._SpareId != value))
				{
					if (this._SparePart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpareIdChanging(value);
					this.SendPropertyChanging();
					this._SpareId = value;
					this.SendPropertyChanged("SpareId");
					this.OnSpareIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SparCount", DbType="Decimal(18,2) NOT NULL")]
		public decimal SparCount
		{
			get
			{
				return this._SparCount;
			}
			set
			{
				if ((this._SparCount != value))
				{
					this.OnSparCountChanging(value);
					this.SendPropertyChanging();
					this._SparCount = value;
					this.SendPropertyChanged("SparCount");
					this.OnSparCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(150)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodicalPlan_PeriodicalPlanSpar", Storage="_PeriodicalPlan", ThisKey="maintPlanId", OtherKey="maintPlanId", IsForeignKey=true)]
		public PeriodicalPlan PeriodicalPlan
		{
			get
			{
				return this._PeriodicalPlan.Entity;
			}
			set
			{
				PeriodicalPlan previousValue = this._PeriodicalPlan.Entity;
				if (((previousValue != value) 
							|| (this._PeriodicalPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PeriodicalPlan.Entity = null;
						previousValue.PeriodicalPlanSpars.Remove(this);
					}
					this._PeriodicalPlan.Entity = value;
					if ((value != null))
					{
						value.PeriodicalPlanSpars.Add(this);
						this._maintPlanId = value.maintPlanId;
					}
					else
					{
						this._maintPlanId = default(int);
					}
					this.SendPropertyChanged("PeriodicalPlan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SparePart_PeriodicalPlanSpar", Storage="_SparePart", ThisKey="SpareId", OtherKey="SpareId", IsForeignKey=true)]
		public SparePart SparePart
		{
			get
			{
				return this._SparePart.Entity;
			}
			set
			{
				SparePart previousValue = this._SparePart.Entity;
				if (((previousValue != value) 
							|| (this._SparePart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SparePart.Entity = null;
						previousValue.PeriodicalPlanSpars.Remove(this);
					}
					this._SparePart.Entity = value;
					if ((value != null))
					{
						value.PeriodicalPlanSpars.Add(this);
						this._SpareId = value.SpareId;
					}
					else
					{
						this._SpareId = default(int);
					}
					this.SendPropertyChanged("SparePart");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Def.PeriodicalPlanToVehcle")]
	public partial class PeriodicalPlanToVehcle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PeriodicalPlanToVehcleId;
		
		private int _VehcleId;
		
		private int _maintPlanId;
		
		private System.Nullable<int> _NextPlanCounter;
		
		private System.Nullable<System.DateTime> _NextPLanDate;
		
		private bool _IsActive;
		
		private string _Notes;
		
		private EntityRef<PeriodicalPlan> _PeriodicalPlan;
		
		private EntityRef<Vehcle> _Vehcle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPeriodicalPlanToVehcleIdChanging(int value);
    partial void OnPeriodicalPlanToVehcleIdChanged();
    partial void OnVehcleIdChanging(int value);
    partial void OnVehcleIdChanged();
    partial void OnmaintPlanIdChanging(int value);
    partial void OnmaintPlanIdChanged();
    partial void OnNextPlanCounterChanging(System.Nullable<int> value);
    partial void OnNextPlanCounterChanged();
    partial void OnNextPLanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextPLanDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public PeriodicalPlanToVehcle()
		{
			this._PeriodicalPlan = default(EntityRef<PeriodicalPlan>);
			this._Vehcle = default(EntityRef<Vehcle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicalPlanToVehcleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PeriodicalPlanToVehcleId
		{
			get
			{
				return this._PeriodicalPlanToVehcleId;
			}
			set
			{
				if ((this._PeriodicalPlanToVehcleId != value))
				{
					this.OnPeriodicalPlanToVehcleIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodicalPlanToVehcleId = value;
					this.SendPropertyChanged("PeriodicalPlanToVehcleId");
					this.OnPeriodicalPlanToVehcleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehcleId", DbType="Int NOT NULL")]
		public int VehcleId
		{
			get
			{
				return this._VehcleId;
			}
			set
			{
				if ((this._VehcleId != value))
				{
					if (this._Vehcle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehcleIdChanging(value);
					this.SendPropertyChanging();
					this._VehcleId = value;
					this.SendPropertyChanged("VehcleId");
					this.OnVehcleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maintPlanId", DbType="Int NOT NULL")]
		public int maintPlanId
		{
			get
			{
				return this._maintPlanId;
			}
			set
			{
				if ((this._maintPlanId != value))
				{
					if (this._PeriodicalPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaintPlanIdChanging(value);
					this.SendPropertyChanging();
					this._maintPlanId = value;
					this.SendPropertyChanged("maintPlanId");
					this.OnmaintPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextPlanCounter", DbType="Int")]
		public System.Nullable<int> NextPlanCounter
		{
			get
			{
				return this._NextPlanCounter;
			}
			set
			{
				if ((this._NextPlanCounter != value))
				{
					this.OnNextPlanCounterChanging(value);
					this.SendPropertyChanging();
					this._NextPlanCounter = value;
					this.SendPropertyChanged("NextPlanCounter");
					this.OnNextPlanCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextPLanDate", DbType="Date")]
		public System.Nullable<System.DateTime> NextPLanDate
		{
			get
			{
				return this._NextPLanDate;
			}
			set
			{
				if ((this._NextPLanDate != value))
				{
					this.OnNextPLanDateChanging(value);
					this.SendPropertyChanging();
					this._NextPLanDate = value;
					this.SendPropertyChanged("NextPLanDate");
					this.OnNextPLanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodicalPlan_PeriodicalPlanToVehcle", Storage="_PeriodicalPlan", ThisKey="maintPlanId", OtherKey="maintPlanId", IsForeignKey=true)]
		public PeriodicalPlan PeriodicalPlan
		{
			get
			{
				return this._PeriodicalPlan.Entity;
			}
			set
			{
				PeriodicalPlan previousValue = this._PeriodicalPlan.Entity;
				if (((previousValue != value) 
							|| (this._PeriodicalPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PeriodicalPlan.Entity = null;
						previousValue.PeriodicalPlanToVehcles.Remove(this);
					}
					this._PeriodicalPlan.Entity = value;
					if ((value != null))
					{
						value.PeriodicalPlanToVehcles.Add(this);
						this._maintPlanId = value.maintPlanId;
					}
					else
					{
						this._maintPlanId = default(int);
					}
					this.SendPropertyChanged("PeriodicalPlan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehcle_PeriodicalPlanToVehcle", Storage="_Vehcle", ThisKey="VehcleId", OtherKey="VehcleId", IsForeignKey=true)]
		public Vehcle Vehcle
		{
			get
			{
				return this._Vehcle.Entity;
			}
			set
			{
				Vehcle previousValue = this._Vehcle.Entity;
				if (((previousValue != value) 
							|| (this._Vehcle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehcle.Entity = null;
						previousValue.PeriodicalPlanToVehcles.Remove(this);
					}
					this._Vehcle.Entity = value;
					if ((value != null))
					{
						value.PeriodicalPlanToVehcles.Add(this);
						this._VehcleId = value.VehcleId;
					}
					else
					{
						this._VehcleId = default(int);
					}
					this.SendPropertyChanged("Vehcle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Def.PeriodicPlanDetail")]
	public partial class PeriodicPlanDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maintPlanDetailId;
		
		private int _maintPlanId;
		
		private int _RequiredJob;
		
		private string _Description;
		
		private EntitySet<PeriodicalPlanExecDetail> _PeriodicalPlanExecDetails;
		
		private EntityRef<PeriodicalPlan> _PeriodicalPlan;
		
		private EntityRef<ServicesSetting> _ServicesSetting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaintPlanDetailIdChanging(int value);
    partial void OnmaintPlanDetailIdChanged();
    partial void OnmaintPlanIdChanging(int value);
    partial void OnmaintPlanIdChanged();
    partial void OnRequiredJobChanging(int value);
    partial void OnRequiredJobChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public PeriodicPlanDetail()
		{
			this._PeriodicalPlanExecDetails = new EntitySet<PeriodicalPlanExecDetail>(new Action<PeriodicalPlanExecDetail>(this.attach_PeriodicalPlanExecDetails), new Action<PeriodicalPlanExecDetail>(this.detach_PeriodicalPlanExecDetails));
			this._PeriodicalPlan = default(EntityRef<PeriodicalPlan>);
			this._ServicesSetting = default(EntityRef<ServicesSetting>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maintPlanDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maintPlanDetailId
		{
			get
			{
				return this._maintPlanDetailId;
			}
			set
			{
				if ((this._maintPlanDetailId != value))
				{
					this.OnmaintPlanDetailIdChanging(value);
					this.SendPropertyChanging();
					this._maintPlanDetailId = value;
					this.SendPropertyChanged("maintPlanDetailId");
					this.OnmaintPlanDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maintPlanId", DbType="Int NOT NULL")]
		public int maintPlanId
		{
			get
			{
				return this._maintPlanId;
			}
			set
			{
				if ((this._maintPlanId != value))
				{
					if (this._PeriodicalPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaintPlanIdChanging(value);
					this.SendPropertyChanging();
					this._maintPlanId = value;
					this.SendPropertyChanged("maintPlanId");
					this.OnmaintPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredJob", DbType="Int NOT NULL")]
		public int RequiredJob
		{
			get
			{
				return this._RequiredJob;
			}
			set
			{
				if ((this._RequiredJob != value))
				{
					if (this._ServicesSetting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequiredJobChanging(value);
					this.SendPropertyChanging();
					this._RequiredJob = value;
					this.SendPropertyChanged("RequiredJob");
					this.OnRequiredJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodicPlanDetail_PeriodicalPlanExecDetail", Storage="_PeriodicalPlanExecDetails", ThisKey="maintPlanDetailId", OtherKey="maintPlanDetailId")]
		public EntitySet<PeriodicalPlanExecDetail> PeriodicalPlanExecDetails
		{
			get
			{
				return this._PeriodicalPlanExecDetails;
			}
			set
			{
				this._PeriodicalPlanExecDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodicalPlan_PeriodicPlanDetail", Storage="_PeriodicalPlan", ThisKey="maintPlanId", OtherKey="maintPlanId", IsForeignKey=true)]
		public PeriodicalPlan PeriodicalPlan
		{
			get
			{
				return this._PeriodicalPlan.Entity;
			}
			set
			{
				PeriodicalPlan previousValue = this._PeriodicalPlan.Entity;
				if (((previousValue != value) 
							|| (this._PeriodicalPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PeriodicalPlan.Entity = null;
						previousValue.PeriodicPlanDetails.Remove(this);
					}
					this._PeriodicalPlan.Entity = value;
					if ((value != null))
					{
						value.PeriodicPlanDetails.Add(this);
						this._maintPlanId = value.maintPlanId;
					}
					else
					{
						this._maintPlanId = default(int);
					}
					this.SendPropertyChanged("PeriodicalPlan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicesSetting_PeriodicPlanDetail", Storage="_ServicesSetting", ThisKey="RequiredJob", OtherKey="ID", IsForeignKey=true)]
		public ServicesSetting ServicesSetting
		{
			get
			{
				return this._ServicesSetting.Entity;
			}
			set
			{
				ServicesSetting previousValue = this._ServicesSetting.Entity;
				if (((previousValue != value) 
							|| (this._ServicesSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServicesSetting.Entity = null;
						previousValue.PeriodicPlanDetails.Remove(this);
					}
					this._ServicesSetting.Entity = value;
					if ((value != null))
					{
						value.PeriodicPlanDetails.Add(this);
						this._RequiredJob = value.ID;
					}
					else
					{
						this._RequiredJob = default(int);
					}
					this.SendPropertyChanged("ServicesSetting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PeriodicalPlanExecDetails(PeriodicalPlanExecDetail entity)
		{
			this.SendPropertyChanging();
			entity.PeriodicPlanDetail = this;
		}
		
		private void detach_PeriodicalPlanExecDetails(PeriodicalPlanExecDetail entity)
		{
			this.SendPropertyChanging();
			entity.PeriodicPlanDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Def.ServiceCenters")]
	public partial class ServiceCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServiceCenterId;
		
		private string _ServiceCenterName;
		
		private System.Nullable<int> _BankName;
		
		private string _BankAccount;
		
		private string _BankBranch;
		
		private string _Address;
		
		private string _ContactPerson;
		
		private string _ContactPersonPhone;
		
		private string _Phone1;
		
		private string _Phone2;
		
		private string _Phone3;
		
		private string _Tel;
		
		private string _Fax;
		
		private string _Email;
		
		private string _Notes;
		
		private EntityRef<ConfigDetail> _ConfigDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceCenterIdChanging(int value);
    partial void OnServiceCenterIdChanged();
    partial void OnServiceCenterNameChanging(string value);
    partial void OnServiceCenterNameChanged();
    partial void OnBankNameChanging(System.Nullable<int> value);
    partial void OnBankNameChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnBankBranchChanging(string value);
    partial void OnBankBranchChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnContactPersonPhoneChanging(string value);
    partial void OnContactPersonPhoneChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnPhone3Changing(string value);
    partial void OnPhone3Changed();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public ServiceCenter()
		{
			this._ConfigDetail = default(EntityRef<ConfigDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCenterId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServiceCenterId
		{
			get
			{
				return this._ServiceCenterId;
			}
			set
			{
				if ((this._ServiceCenterId != value))
				{
					this.OnServiceCenterIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceCenterId = value;
					this.SendPropertyChanged("ServiceCenterId");
					this.OnServiceCenterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCenterName", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string ServiceCenterName
		{
			get
			{
				return this._ServiceCenterName;
			}
			set
			{
				if ((this._ServiceCenterName != value))
				{
					this.OnServiceCenterNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceCenterName = value;
					this.SendPropertyChanged("ServiceCenterName");
					this.OnServiceCenterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="Int")]
		public System.Nullable<int> BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					if (this._ConfigDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="NVarChar(30)")]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankBranch", DbType="NVarChar(50)")]
		public string BankBranch
		{
			get
			{
				return this._BankBranch;
			}
			set
			{
				if ((this._BankBranch != value))
				{
					this.OnBankBranchChanging(value);
					this.SendPropertyChanging();
					this._BankBranch = value;
					this.SendPropertyChanged("BankBranch");
					this.OnBankBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(50)")]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonPhone", DbType="NVarChar(20)")]
		public string ContactPersonPhone
		{
			get
			{
				return this._ContactPersonPhone;
			}
			set
			{
				if ((this._ContactPersonPhone != value))
				{
					this.OnContactPersonPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonPhone = value;
					this.SendPropertyChanged("ContactPersonPhone");
					this.OnContactPersonPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="NVarChar(20)")]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(20)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone3", DbType="NVarChar(20)")]
		public string Phone3
		{
			get
			{
				return this._Phone3;
			}
			set
			{
				if ((this._Phone3 != value))
				{
					this.OnPhone3Changing(value);
					this.SendPropertyChanging();
					this._Phone3 = value;
					this.SendPropertyChanged("Phone3");
					this.OnPhone3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(20)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(40)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(20)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_ServiceCenter", Storage="_ConfigDetail", ThisKey="BankName", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail
		{
			get
			{
				return this._ConfigDetail.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail.Entity = null;
						previousValue.ServiceCenters.Remove(this);
					}
					this._ConfigDetail.Entity = value;
					if ((value != null))
					{
						value.ServiceCenters.Add(this);
						this._BankName = value.ConfigDetailId;
					}
					else
					{
						this._BankName = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConfigDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Def.SpareParts")]
	public partial class SparePart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpareId;
		
		private string _SpareName;
		
		private int _MainCategory;
		
		private int _ClassId;
		
		private System.Nullable<decimal> _SparePrice;
		
		private System.Nullable<decimal> _LabourCost;
		
		private string _Notes;
		
		private EntitySet<PeriodicalPlanExecDetail> _PeriodicalPlanExecDetails;
		
		private EntitySet<BusesServicesSpar> _BusesServicesSpars;
		
		private EntitySet<PeriodicalPlanSpar> _PeriodicalPlanSpars;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<ConfigDetail> _ConfigDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpareIdChanging(int value);
    partial void OnSpareIdChanged();
    partial void OnSpareNameChanging(string value);
    partial void OnSpareNameChanged();
    partial void OnMainCategoryChanging(int value);
    partial void OnMainCategoryChanged();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnSparePriceChanging(System.Nullable<decimal> value);
    partial void OnSparePriceChanged();
    partial void OnLabourCostChanging(System.Nullable<decimal> value);
    partial void OnLabourCostChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public SparePart()
		{
			this._PeriodicalPlanExecDetails = new EntitySet<PeriodicalPlanExecDetail>(new Action<PeriodicalPlanExecDetail>(this.attach_PeriodicalPlanExecDetails), new Action<PeriodicalPlanExecDetail>(this.detach_PeriodicalPlanExecDetails));
			this._BusesServicesSpars = new EntitySet<BusesServicesSpar>(new Action<BusesServicesSpar>(this.attach_BusesServicesSpars), new Action<BusesServicesSpar>(this.detach_BusesServicesSpars));
			this._PeriodicalPlanSpars = new EntitySet<PeriodicalPlanSpar>(new Action<PeriodicalPlanSpar>(this.attach_PeriodicalPlanSpars), new Action<PeriodicalPlanSpar>(this.detach_PeriodicalPlanSpars));
			this._Class = default(EntityRef<Class>);
			this._ConfigDetail = default(EntityRef<ConfigDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpareId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SpareId
		{
			get
			{
				return this._SpareId;
			}
			set
			{
				if ((this._SpareId != value))
				{
					this.OnSpareIdChanging(value);
					this.SendPropertyChanging();
					this._SpareId = value;
					this.SendPropertyChanged("SpareId");
					this.OnSpareIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpareName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SpareName
		{
			get
			{
				return this._SpareName;
			}
			set
			{
				if ((this._SpareName != value))
				{
					this.OnSpareNameChanging(value);
					this.SendPropertyChanging();
					this._SpareName = value;
					this.SendPropertyChanged("SpareName");
					this.OnSpareNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainCategory", DbType="Int NOT NULL")]
		public int MainCategory
		{
			get
			{
				return this._MainCategory;
			}
			set
			{
				if ((this._MainCategory != value))
				{
					if (this._ConfigDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMainCategoryChanging(value);
					this.SendPropertyChanging();
					this._MainCategory = value;
					this.SendPropertyChanged("MainCategory");
					this.OnMainCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int NOT NULL")]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SparePrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SparePrice
		{
			get
			{
				return this._SparePrice;
			}
			set
			{
				if ((this._SparePrice != value))
				{
					this.OnSparePriceChanging(value);
					this.SendPropertyChanging();
					this._SparePrice = value;
					this.SendPropertyChanged("SparePrice");
					this.OnSparePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabourCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LabourCost
		{
			get
			{
				return this._LabourCost;
			}
			set
			{
				if ((this._LabourCost != value))
				{
					this.OnLabourCostChanging(value);
					this.SendPropertyChanging();
					this._LabourCost = value;
					this.SendPropertyChanged("LabourCost");
					this.OnLabourCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SparePart_PeriodicalPlanExecDetail", Storage="_PeriodicalPlanExecDetails", ThisKey="SpareId", OtherKey="SparId")]
		public EntitySet<PeriodicalPlanExecDetail> PeriodicalPlanExecDetails
		{
			get
			{
				return this._PeriodicalPlanExecDetails;
			}
			set
			{
				this._PeriodicalPlanExecDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SparePart_BusesServicesSpar", Storage="_BusesServicesSpars", ThisKey="SpareId", OtherKey="SpareId")]
		public EntitySet<BusesServicesSpar> BusesServicesSpars
		{
			get
			{
				return this._BusesServicesSpars;
			}
			set
			{
				this._BusesServicesSpars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SparePart_PeriodicalPlanSpar", Storage="_PeriodicalPlanSpars", ThisKey="SpareId", OtherKey="SpareId")]
		public EntitySet<PeriodicalPlanSpar> PeriodicalPlanSpars
		{
			get
			{
				return this._PeriodicalPlanSpars;
			}
			set
			{
				this._PeriodicalPlanSpars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_SparePart", Storage="_Class", ThisKey="ClassId", OtherKey="ClassId", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.SpareParts.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.SpareParts.Add(this);
						this._ClassId = value.ClassId;
					}
					else
					{
						this._ClassId = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_SparePart", Storage="_ConfigDetail", ThisKey="MainCategory", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail
		{
			get
			{
				return this._ConfigDetail.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail.Entity = null;
						previousValue.SpareParts.Remove(this);
					}
					this._ConfigDetail.Entity = value;
					if ((value != null))
					{
						value.SpareParts.Add(this);
						this._MainCategory = value.ConfigDetailId;
					}
					else
					{
						this._MainCategory = default(int);
					}
					this.SendPropertyChanged("ConfigDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PeriodicalPlanExecDetails(PeriodicalPlanExecDetail entity)
		{
			this.SendPropertyChanging();
			entity.SparePart = this;
		}
		
		private void detach_PeriodicalPlanExecDetails(PeriodicalPlanExecDetail entity)
		{
			this.SendPropertyChanging();
			entity.SparePart = null;
		}
		
		private void attach_BusesServicesSpars(BusesServicesSpar entity)
		{
			this.SendPropertyChanging();
			entity.SparePart = this;
		}
		
		private void detach_BusesServicesSpars(BusesServicesSpar entity)
		{
			this.SendPropertyChanging();
			entity.SparePart = null;
		}
		
		private void attach_PeriodicalPlanSpars(PeriodicalPlanSpar entity)
		{
			this.SendPropertyChanging();
			entity.SparePart = this;
		}
		
		private void detach_PeriodicalPlanSpars(PeriodicalPlanSpar entity)
		{
			this.SendPropertyChanging();
			entity.SparePart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Def.SparPart")]
	public partial class SparPart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SparPartId;
		
		private string _SparName;
		
		private int _ClassId;
		
		private int _MainCategory;
		
		private System.Nullable<decimal> _LaborCost;
		
		private string _Notes;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<ConfigDetail> _ConfigDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSparPartIdChanging(int value);
    partial void OnSparPartIdChanged();
    partial void OnSparNameChanging(string value);
    partial void OnSparNameChanged();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnMainCategoryChanging(int value);
    partial void OnMainCategoryChanged();
    partial void OnLaborCostChanging(System.Nullable<decimal> value);
    partial void OnLaborCostChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public SparPart()
		{
			this._Class = default(EntityRef<Class>);
			this._ConfigDetail = default(EntityRef<ConfigDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SparPartId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SparPartId
		{
			get
			{
				return this._SparPartId;
			}
			set
			{
				if ((this._SparPartId != value))
				{
					this.OnSparPartIdChanging(value);
					this.SendPropertyChanging();
					this._SparPartId = value;
					this.SendPropertyChanged("SparPartId");
					this.OnSparPartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SparName", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string SparName
		{
			get
			{
				return this._SparName;
			}
			set
			{
				if ((this._SparName != value))
				{
					this.OnSparNameChanging(value);
					this.SendPropertyChanging();
					this._SparName = value;
					this.SendPropertyChanged("SparName");
					this.OnSparNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int NOT NULL")]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainCategory", DbType="Int NOT NULL")]
		public int MainCategory
		{
			get
			{
				return this._MainCategory;
			}
			set
			{
				if ((this._MainCategory != value))
				{
					if (this._ConfigDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMainCategoryChanging(value);
					this.SendPropertyChanging();
					this._MainCategory = value;
					this.SendPropertyChanged("MainCategory");
					this.OnMainCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaborCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LaborCost
		{
			get
			{
				return this._LaborCost;
			}
			set
			{
				if ((this._LaborCost != value))
				{
					this.OnLaborCostChanging(value);
					this.SendPropertyChanging();
					this._LaborCost = value;
					this.SendPropertyChanged("LaborCost");
					this.OnLaborCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_SparPart", Storage="_Class", ThisKey="ClassId", OtherKey="ClassId", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.SparParts.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.SparParts.Add(this);
						this._ClassId = value.ClassId;
					}
					else
					{
						this._ClassId = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_SparPart", Storage="_ConfigDetail", ThisKey="MainCategory", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail
		{
			get
			{
				return this._ConfigDetail.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail.Entity = null;
						previousValue.SparParts.Remove(this);
					}
					this._ConfigDetail.Entity = value;
					if ((value != null))
					{
						value.SparParts.Add(this);
						this._MainCategory = value.ConfigDetailId;
					}
					else
					{
						this._MainCategory = default(int);
					}
					this.SendPropertyChanged("ConfigDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Def.Types")]
	public partial class Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Value;
		
		private string _Name;
		
		private EntitySet<Buse> _Buses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Type()
		{
			this._Buses = new EntitySet<Buse>(new Action<Buse>(this.attach_Buses), new Action<Buse>(this.detach_Buses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Buse", Storage="_Buses", ThisKey="Id", OtherKey="model")]
		public EntitySet<Buse> Buses
		{
			get
			{
				return this._Buses;
			}
			set
			{
				this._Buses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buses(Buse entity)
		{
			this.SendPropertyChanging();
			entity.Type = this;
		}
		
		private void detach_Buses(Buse entity)
		{
			this.SendPropertyChanging();
			entity.Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Def.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _UserName;
		
		private string _UserPassword;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<Process> _Processes;
		
		private EntitySet<userRequest> _userRequests;
		
		private EntitySet<UserCompany> _UserCompanies;
		
		private EntitySet<ReqPhase> _ReqPhases;
		
		private EntitySet<ReqPhase> _ReqPhases1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public User()
		{
			this._Processes = new EntitySet<Process>(new Action<Process>(this.attach_Processes), new Action<Process>(this.detach_Processes));
			this._userRequests = new EntitySet<userRequest>(new Action<userRequest>(this.attach_userRequests), new Action<userRequest>(this.detach_userRequests));
			this._UserCompanies = new EntitySet<UserCompany>(new Action<UserCompany>(this.attach_UserCompanies), new Action<UserCompany>(this.detach_UserCompanies));
			this._ReqPhases = new EntitySet<ReqPhase>(new Action<ReqPhase>(this.attach_ReqPhases), new Action<ReqPhase>(this.detach_ReqPhases));
			this._ReqPhases1 = new EntitySet<ReqPhase>(new Action<ReqPhase>(this.attach_ReqPhases1), new Action<ReqPhase>(this.detach_ReqPhases1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(150)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="NVarChar(150)")]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Process", Storage="_Processes", ThisKey="ID", OtherKey="User_Id")]
		public EntitySet<Process> Processes
		{
			get
			{
				return this._Processes;
			}
			set
			{
				this._Processes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_userRequest", Storage="_userRequests", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<userRequest> userRequests
		{
			get
			{
				return this._userRequests;
			}
			set
			{
				this._userRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserCompany", Storage="_UserCompanies", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<UserCompany> UserCompanies
		{
			get
			{
				return this._UserCompanies;
			}
			set
			{
				this._UserCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ReqPhase", Storage="_ReqPhases", ThisKey="ID", OtherKey="User_Id")]
		public EntitySet<ReqPhase> ReqPhases
		{
			get
			{
				return this._ReqPhases;
			}
			set
			{
				this._ReqPhases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ReqPhase1", Storage="_ReqPhases1", ThisKey="ID", OtherKey="User_Id")]
		public EntitySet<ReqPhase> ReqPhases1
		{
			get
			{
				return this._ReqPhases1;
			}
			set
			{
				this._ReqPhases1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Processes(Process entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Processes(Process entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_userRequests(userRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_userRequests(userRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserCompanies(UserCompany entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserCompanies(UserCompany entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ReqPhases(ReqPhase entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ReqPhases(ReqPhase entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ReqPhases1(ReqPhase entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_ReqPhases1(ReqPhase entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Def.Vehcles")]
	public partial class Vehcle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VehcleId;
		
		private string _PlateNo;
		
		private int _CompanyId;
		
		private int _ClassId;
		
		private System.Nullable<int> _LicenseType;
		
		private string _LicenseNo;
		
		private System.Nullable<System.DateTime> _LicenseExpiryDate;
		
		private System.Nullable<System.DateTime> _InspectioDate;
		
		private System.Nullable<int> _InsuranceCompanyId;
		
		private System.Nullable<System.DateTime> _InsuranceExpiryDate;
		
		private System.Nullable<int> _VehcleType;
		
		private System.Nullable<int> _FueL;
		
		private string _BodyNo;
		
		private string _MotorNo;
		
		private System.Nullable<int> _CC;
		
		private System.Nullable<int> _MainDriver;
		
		private string _SuperVisorId;
		
		private System.Nullable<int> _CounterReadingStart;
		
		private System.Nullable<int> _CurrentReading;
		
		private System.Nullable<decimal> _AverageFuelConsumption;
		
		private System.Nullable<int> _Color;
		
		private System.Nullable<int> _CylenderNo;
		
		private System.Nullable<int> _ManufactureYear;
		
		private System.Nullable<int> _ManufacturingCountry;
		
		private System.Nullable<System.DateTime> _StartOperationDate;
		
		private System.Nullable<System.DateTime> _EndOperationDate;
		
		private string _Notes;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<FollowUpCard> _FollowUpCards;
		
		private EntitySet<StoppedCar> _StoppedCars;
		
		private EntitySet<BusAttachment> _BusAttachments;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<PeriodicalPlanToVehcle> _PeriodicalPlanToVehcles;
		
		private EntitySet<PeriodicalPlanExecution> _PeriodicalPlanExecutions;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<ConfigDetail> _ConfigDetail;
		
		private EntityRef<ConfigDetail> _ConfigDetail1;
		
		private EntityRef<ConfigDetail> _ConfigDetail2;
		
		private EntityRef<ConfigDetail> _ConfigDetail3;
		
		private EntityRef<ConfigDetail> _ConfigDetail4;
		
		private EntityRef<ConfigDetail> _ConfigDetail5;
		
		private EntityRef<ConfigDetail> _ConfigDetail6;
		
		private EntityRef<ConfigDetail> _ConfigDetail7;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVehcleIdChanging(int value);
    partial void OnVehcleIdChanged();
    partial void OnPlateNoChanging(string value);
    partial void OnPlateNoChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnLicenseTypeChanging(System.Nullable<int> value);
    partial void OnLicenseTypeChanged();
    partial void OnLicenseNoChanging(string value);
    partial void OnLicenseNoChanged();
    partial void OnLicenseExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLicenseExpiryDateChanged();
    partial void OnInspectioDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInspectioDateChanged();
    partial void OnInsuranceCompanyIdChanging(System.Nullable<int> value);
    partial void OnInsuranceCompanyIdChanged();
    partial void OnInsuranceExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsuranceExpiryDateChanged();
    partial void OnVehcleTypeChanging(System.Nullable<int> value);
    partial void OnVehcleTypeChanged();
    partial void OnFueLChanging(System.Nullable<int> value);
    partial void OnFueLChanged();
    partial void OnBodyNoChanging(string value);
    partial void OnBodyNoChanged();
    partial void OnMotorNoChanging(string value);
    partial void OnMotorNoChanged();
    partial void OnCCChanging(System.Nullable<int> value);
    partial void OnCCChanged();
    partial void OnMainDriverChanging(System.Nullable<int> value);
    partial void OnMainDriverChanged();
    partial void OnSuperVisorIdChanging(string value);
    partial void OnSuperVisorIdChanged();
    partial void OnCounterReadingStartChanging(System.Nullable<int> value);
    partial void OnCounterReadingStartChanged();
    partial void OnCurrentReadingChanging(System.Nullable<int> value);
    partial void OnCurrentReadingChanged();
    partial void OnAverageFuelConsumptionChanging(System.Nullable<decimal> value);
    partial void OnAverageFuelConsumptionChanged();
    partial void OnColorChanging(System.Nullable<int> value);
    partial void OnColorChanged();
    partial void OnCylenderNoChanging(System.Nullable<int> value);
    partial void OnCylenderNoChanged();
    partial void OnManufactureYearChanging(System.Nullable<int> value);
    partial void OnManufactureYearChanged();
    partial void OnManufacturingCountryChanging(System.Nullable<int> value);
    partial void OnManufacturingCountryChanged();
    partial void OnStartOperationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartOperationDateChanged();
    partial void OnEndOperationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndOperationDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Vehcle()
		{
			this._FollowUpCards = new EntitySet<FollowUpCard>(new Action<FollowUpCard>(this.attach_FollowUpCards), new Action<FollowUpCard>(this.detach_FollowUpCards));
			this._StoppedCars = new EntitySet<StoppedCar>(new Action<StoppedCar>(this.attach_StoppedCars), new Action<StoppedCar>(this.detach_StoppedCars));
			this._BusAttachments = new EntitySet<BusAttachment>(new Action<BusAttachment>(this.attach_BusAttachments), new Action<BusAttachment>(this.detach_BusAttachments));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._PeriodicalPlanToVehcles = new EntitySet<PeriodicalPlanToVehcle>(new Action<PeriodicalPlanToVehcle>(this.attach_PeriodicalPlanToVehcles), new Action<PeriodicalPlanToVehcle>(this.detach_PeriodicalPlanToVehcles));
			this._PeriodicalPlanExecutions = new EntitySet<PeriodicalPlanExecution>(new Action<PeriodicalPlanExecution>(this.attach_PeriodicalPlanExecutions), new Action<PeriodicalPlanExecution>(this.detach_PeriodicalPlanExecutions));
			this._Class = default(EntityRef<Class>);
			this._Company = default(EntityRef<Company>);
			this._Employee = default(EntityRef<Employee>);
			this._ConfigDetail = default(EntityRef<ConfigDetail>);
			this._ConfigDetail1 = default(EntityRef<ConfigDetail>);
			this._ConfigDetail2 = default(EntityRef<ConfigDetail>);
			this._ConfigDetail3 = default(EntityRef<ConfigDetail>);
			this._ConfigDetail4 = default(EntityRef<ConfigDetail>);
			this._ConfigDetail5 = default(EntityRef<ConfigDetail>);
			this._ConfigDetail6 = default(EntityRef<ConfigDetail>);
			this._ConfigDetail7 = default(EntityRef<ConfigDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehcleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VehcleId
		{
			get
			{
				return this._VehcleId;
			}
			set
			{
				if ((this._VehcleId != value))
				{
					this.OnVehcleIdChanging(value);
					this.SendPropertyChanging();
					this._VehcleId = value;
					this.SendPropertyChanged("VehcleId");
					this.OnVehcleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PlateNo
		{
			get
			{
				return this._PlateNo;
			}
			set
			{
				if ((this._PlateNo != value))
				{
					this.OnPlateNoChanging(value);
					this.SendPropertyChanging();
					this._PlateNo = value;
					this.SendPropertyChanged("PlateNo");
					this.OnPlateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int NOT NULL")]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseType", DbType="Int")]
		public System.Nullable<int> LicenseType
		{
			get
			{
				return this._LicenseType;
			}
			set
			{
				if ((this._LicenseType != value))
				{
					if (this._ConfigDetail1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLicenseTypeChanging(value);
					this.SendPropertyChanging();
					this._LicenseType = value;
					this.SendPropertyChanged("LicenseType");
					this.OnLicenseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNo", DbType="NVarChar(20)")]
		public string LicenseNo
		{
			get
			{
				return this._LicenseNo;
			}
			set
			{
				if ((this._LicenseNo != value))
				{
					this.OnLicenseNoChanging(value);
					this.SendPropertyChanging();
					this._LicenseNo = value;
					this.SendPropertyChanged("LicenseNo");
					this.OnLicenseNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseExpiryDate", DbType="Date")]
		public System.Nullable<System.DateTime> LicenseExpiryDate
		{
			get
			{
				return this._LicenseExpiryDate;
			}
			set
			{
				if ((this._LicenseExpiryDate != value))
				{
					this.OnLicenseExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._LicenseExpiryDate = value;
					this.SendPropertyChanged("LicenseExpiryDate");
					this.OnLicenseExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectioDate", DbType="Date")]
		public System.Nullable<System.DateTime> InspectioDate
		{
			get
			{
				return this._InspectioDate;
			}
			set
			{
				if ((this._InspectioDate != value))
				{
					this.OnInspectioDateChanging(value);
					this.SendPropertyChanging();
					this._InspectioDate = value;
					this.SendPropertyChanged("InspectioDate");
					this.OnInspectioDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceCompanyId", DbType="Int")]
		public System.Nullable<int> InsuranceCompanyId
		{
			get
			{
				return this._InsuranceCompanyId;
			}
			set
			{
				if ((this._InsuranceCompanyId != value))
				{
					if (this._ConfigDetail7.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._InsuranceCompanyId = value;
					this.SendPropertyChanged("InsuranceCompanyId");
					this.OnInsuranceCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceExpiryDate", DbType="Date")]
		public System.Nullable<System.DateTime> InsuranceExpiryDate
		{
			get
			{
				return this._InsuranceExpiryDate;
			}
			set
			{
				if ((this._InsuranceExpiryDate != value))
				{
					this.OnInsuranceExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._InsuranceExpiryDate = value;
					this.SendPropertyChanged("InsuranceExpiryDate");
					this.OnInsuranceExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehcleType", DbType="Int")]
		public System.Nullable<int> VehcleType
		{
			get
			{
				return this._VehcleType;
			}
			set
			{
				if ((this._VehcleType != value))
				{
					if (this._ConfigDetail5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehcleTypeChanging(value);
					this.SendPropertyChanging();
					this._VehcleType = value;
					this.SendPropertyChanged("VehcleType");
					this.OnVehcleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FueL", DbType="Int")]
		public System.Nullable<int> FueL
		{
			get
			{
				return this._FueL;
			}
			set
			{
				if ((this._FueL != value))
				{
					if (this._ConfigDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFueLChanging(value);
					this.SendPropertyChanging();
					this._FueL = value;
					this.SendPropertyChanged("FueL");
					this.OnFueLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyNo", DbType="NVarChar(20)")]
		public string BodyNo
		{
			get
			{
				return this._BodyNo;
			}
			set
			{
				if ((this._BodyNo != value))
				{
					this.OnBodyNoChanging(value);
					this.SendPropertyChanging();
					this._BodyNo = value;
					this.SendPropertyChanged("BodyNo");
					this.OnBodyNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotorNo", DbType="NVarChar(20)")]
		public string MotorNo
		{
			get
			{
				return this._MotorNo;
			}
			set
			{
				if ((this._MotorNo != value))
				{
					this.OnMotorNoChanging(value);
					this.SendPropertyChanging();
					this._MotorNo = value;
					this.SendPropertyChanged("MotorNo");
					this.OnMotorNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CC", DbType="Int")]
		public System.Nullable<int> CC
		{
			get
			{
				return this._CC;
			}
			set
			{
				if ((this._CC != value))
				{
					if (this._ConfigDetail2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCCChanging(value);
					this.SendPropertyChanging();
					this._CC = value;
					this.SendPropertyChanged("CC");
					this.OnCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainDriver", DbType="Int")]
		public System.Nullable<int> MainDriver
		{
			get
			{
				return this._MainDriver;
			}
			set
			{
				if ((this._MainDriver != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMainDriverChanging(value);
					this.SendPropertyChanging();
					this._MainDriver = value;
					this.SendPropertyChanged("MainDriver");
					this.OnMainDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperVisorId", DbType="NVarChar(100)")]
		public string SuperVisorId
		{
			get
			{
				return this._SuperVisorId;
			}
			set
			{
				if ((this._SuperVisorId != value))
				{
					this.OnSuperVisorIdChanging(value);
					this.SendPropertyChanging();
					this._SuperVisorId = value;
					this.SendPropertyChanged("SuperVisorId");
					this.OnSuperVisorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterReadingStart", DbType="Int")]
		public System.Nullable<int> CounterReadingStart
		{
			get
			{
				return this._CounterReadingStart;
			}
			set
			{
				if ((this._CounterReadingStart != value))
				{
					this.OnCounterReadingStartChanging(value);
					this.SendPropertyChanging();
					this._CounterReadingStart = value;
					this.SendPropertyChanged("CounterReadingStart");
					this.OnCounterReadingStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentReading", DbType="Int")]
		public System.Nullable<int> CurrentReading
		{
			get
			{
				return this._CurrentReading;
			}
			set
			{
				if ((this._CurrentReading != value))
				{
					this.OnCurrentReadingChanging(value);
					this.SendPropertyChanging();
					this._CurrentReading = value;
					this.SendPropertyChanged("CurrentReading");
					this.OnCurrentReadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageFuelConsumption", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AverageFuelConsumption
		{
			get
			{
				return this._AverageFuelConsumption;
			}
			set
			{
				if ((this._AverageFuelConsumption != value))
				{
					this.OnAverageFuelConsumptionChanging(value);
					this.SendPropertyChanging();
					this._AverageFuelConsumption = value;
					this.SendPropertyChanged("AverageFuelConsumption");
					this.OnAverageFuelConsumptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="Int")]
		public System.Nullable<int> Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					if (this._ConfigDetail6.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CylenderNo", DbType="Int")]
		public System.Nullable<int> CylenderNo
		{
			get
			{
				return this._CylenderNo;
			}
			set
			{
				if ((this._CylenderNo != value))
				{
					if (this._ConfigDetail3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCylenderNoChanging(value);
					this.SendPropertyChanging();
					this._CylenderNo = value;
					this.SendPropertyChanged("CylenderNo");
					this.OnCylenderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufactureYear", DbType="Int")]
		public System.Nullable<int> ManufactureYear
		{
			get
			{
				return this._ManufactureYear;
			}
			set
			{
				if ((this._ManufactureYear != value))
				{
					this.OnManufactureYearChanging(value);
					this.SendPropertyChanging();
					this._ManufactureYear = value;
					this.SendPropertyChanged("ManufactureYear");
					this.OnManufactureYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturingCountry", DbType="Int")]
		public System.Nullable<int> ManufacturingCountry
		{
			get
			{
				return this._ManufacturingCountry;
			}
			set
			{
				if ((this._ManufacturingCountry != value))
				{
					if (this._ConfigDetail4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManufacturingCountryChanging(value);
					this.SendPropertyChanging();
					this._ManufacturingCountry = value;
					this.SendPropertyChanged("ManufacturingCountry");
					this.OnManufacturingCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartOperationDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartOperationDate
		{
			get
			{
				return this._StartOperationDate;
			}
			set
			{
				if ((this._StartOperationDate != value))
				{
					this.OnStartOperationDateChanging(value);
					this.SendPropertyChanging();
					this._StartOperationDate = value;
					this.SendPropertyChanged("StartOperationDate");
					this.OnStartOperationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndOperationDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndOperationDate
		{
			get
			{
				return this._EndOperationDate;
			}
			set
			{
				if ((this._EndOperationDate != value))
				{
					this.OnEndOperationDateChanging(value);
					this.SendPropertyChanging();
					this._EndOperationDate = value;
					this.SendPropertyChanged("EndOperationDate");
					this.OnEndOperationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehcle_FollowUpCard", Storage="_FollowUpCards", ThisKey="VehcleId", OtherKey="VehcleId")]
		public EntitySet<FollowUpCard> FollowUpCards
		{
			get
			{
				return this._FollowUpCards;
			}
			set
			{
				this._FollowUpCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehcle_StoppedCar", Storage="_StoppedCars", ThisKey="VehcleId", OtherKey="VaehcleId")]
		public EntitySet<StoppedCar> StoppedCars
		{
			get
			{
				return this._StoppedCars;
			}
			set
			{
				this._StoppedCars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehcle_BusAttachment", Storage="_BusAttachments", ThisKey="VehcleId", OtherKey="VehcleId")]
		public EntitySet<BusAttachment> BusAttachments
		{
			get
			{
				return this._BusAttachments;
			}
			set
			{
				this._BusAttachments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehcle_Employee", Storage="_Employees", ThisKey="VehcleId", OtherKey="LastVehcle")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehcle_PeriodicalPlanToVehcle", Storage="_PeriodicalPlanToVehcles", ThisKey="VehcleId", OtherKey="VehcleId")]
		public EntitySet<PeriodicalPlanToVehcle> PeriodicalPlanToVehcles
		{
			get
			{
				return this._PeriodicalPlanToVehcles;
			}
			set
			{
				this._PeriodicalPlanToVehcles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehcle_PeriodicalPlanExecution", Storage="_PeriodicalPlanExecutions", ThisKey="VehcleId", OtherKey="VehcleId")]
		public EntitySet<PeriodicalPlanExecution> PeriodicalPlanExecutions
		{
			get
			{
				return this._PeriodicalPlanExecutions;
			}
			set
			{
				this._PeriodicalPlanExecutions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Vehcle", Storage="_Class", ThisKey="ClassId", OtherKey="ClassId", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.Vehcles.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.Vehcles.Add(this);
						this._ClassId = value.ClassId;
					}
					else
					{
						this._ClassId = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Vehcle", Storage="_Company", ThisKey="CompanyId", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Vehcles.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Vehcles.Add(this);
						this._CompanyId = value.ID;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Vehcle", Storage="_Employee", ThisKey="MainDriver", OtherKey="EmployeeId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Vehcles.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Vehcles.Add(this);
						this._MainDriver = value.EmployeeId;
					}
					else
					{
						this._MainDriver = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Vehcle", Storage="_ConfigDetail", ThisKey="FueL", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail
		{
			get
			{
				return this._ConfigDetail.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail.Entity = null;
						previousValue.Vehcles.Remove(this);
					}
					this._ConfigDetail.Entity = value;
					if ((value != null))
					{
						value.Vehcles.Add(this);
						this._FueL = value.ConfigDetailId;
					}
					else
					{
						this._FueL = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConfigDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Vehcle1", Storage="_ConfigDetail1", ThisKey="LicenseType", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail1
		{
			get
			{
				return this._ConfigDetail1.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail1.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail1.Entity = null;
						previousValue.Vehcles1.Remove(this);
					}
					this._ConfigDetail1.Entity = value;
					if ((value != null))
					{
						value.Vehcles1.Add(this);
						this._LicenseType = value.ConfigDetailId;
					}
					else
					{
						this._LicenseType = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConfigDetail1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Vehcle2", Storage="_ConfigDetail2", ThisKey="CC", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail2
		{
			get
			{
				return this._ConfigDetail2.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail2.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail2.Entity = null;
						previousValue.Vehcles2.Remove(this);
					}
					this._ConfigDetail2.Entity = value;
					if ((value != null))
					{
						value.Vehcles2.Add(this);
						this._CC = value.ConfigDetailId;
					}
					else
					{
						this._CC = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConfigDetail2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Vehcle3", Storage="_ConfigDetail3", ThisKey="CylenderNo", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail3
		{
			get
			{
				return this._ConfigDetail3.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail3.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail3.Entity = null;
						previousValue.Vehcles3.Remove(this);
					}
					this._ConfigDetail3.Entity = value;
					if ((value != null))
					{
						value.Vehcles3.Add(this);
						this._CylenderNo = value.ConfigDetailId;
					}
					else
					{
						this._CylenderNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConfigDetail3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Vehcle4", Storage="_ConfigDetail4", ThisKey="ManufacturingCountry", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail4
		{
			get
			{
				return this._ConfigDetail4.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail4.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail4.Entity = null;
						previousValue.Vehcles4.Remove(this);
					}
					this._ConfigDetail4.Entity = value;
					if ((value != null))
					{
						value.Vehcles4.Add(this);
						this._ManufacturingCountry = value.ConfigDetailId;
					}
					else
					{
						this._ManufacturingCountry = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConfigDetail4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Vehcle5", Storage="_ConfigDetail5", ThisKey="VehcleType", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail5
		{
			get
			{
				return this._ConfigDetail5.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail5.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail5.Entity = null;
						previousValue.Vehcles5.Remove(this);
					}
					this._ConfigDetail5.Entity = value;
					if ((value != null))
					{
						value.Vehcles5.Add(this);
						this._VehcleType = value.ConfigDetailId;
					}
					else
					{
						this._VehcleType = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConfigDetail5");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Vehcle6", Storage="_ConfigDetail6", ThisKey="Color", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail6
		{
			get
			{
				return this._ConfigDetail6.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail6.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail6.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail6.Entity = null;
						previousValue.Vehcles6.Remove(this);
					}
					this._ConfigDetail6.Entity = value;
					if ((value != null))
					{
						value.Vehcles6.Add(this);
						this._Color = value.ConfigDetailId;
					}
					else
					{
						this._Color = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConfigDetail6");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Vehcle7", Storage="_ConfigDetail7", ThisKey="InsuranceCompanyId", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail7
		{
			get
			{
				return this._ConfigDetail7.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail7.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail7.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail7.Entity = null;
						previousValue.Vehcles7.Remove(this);
					}
					this._ConfigDetail7.Entity = value;
					if ((value != null))
					{
						value.Vehcles7.Add(this);
						this._InsuranceCompanyId = value.ConfigDetailId;
					}
					else
					{
						this._InsuranceCompanyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConfigDetail7");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FollowUpCards(FollowUpCard entity)
		{
			this.SendPropertyChanging();
			entity.Vehcle = this;
		}
		
		private void detach_FollowUpCards(FollowUpCard entity)
		{
			this.SendPropertyChanging();
			entity.Vehcle = null;
		}
		
		private void attach_StoppedCars(StoppedCar entity)
		{
			this.SendPropertyChanging();
			entity.Vehcle = this;
		}
		
		private void detach_StoppedCars(StoppedCar entity)
		{
			this.SendPropertyChanging();
			entity.Vehcle = null;
		}
		
		private void attach_BusAttachments(BusAttachment entity)
		{
			this.SendPropertyChanging();
			entity.Vehcle = this;
		}
		
		private void detach_BusAttachments(BusAttachment entity)
		{
			this.SendPropertyChanging();
			entity.Vehcle = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Vehcle = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Vehcle = null;
		}
		
		private void attach_PeriodicalPlanToVehcles(PeriodicalPlanToVehcle entity)
		{
			this.SendPropertyChanging();
			entity.Vehcle = this;
		}
		
		private void detach_PeriodicalPlanToVehcles(PeriodicalPlanToVehcle entity)
		{
			this.SendPropertyChanging();
			entity.Vehcle = null;
		}
		
		private void attach_PeriodicalPlanExecutions(PeriodicalPlanExecution entity)
		{
			this.SendPropertyChanging();
			entity.Vehcle = this;
		}
		
		private void detach_PeriodicalPlanExecutions(PeriodicalPlanExecution entity)
		{
			this.SendPropertyChanging();
			entity.Vehcle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Def.ConfigMaster")]
	public partial class ConfigMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MasterId;
		
		private string _MasterName;
		
		private System.Nullable<int> _OrderNo;
		
		private EntitySet<ConfigDetail> _ConfigDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMasterIdChanging(int value);
    partial void OnMasterIdChanged();
    partial void OnMasterNameChanging(string value);
    partial void OnMasterNameChanged();
    partial void OnOrderNoChanging(System.Nullable<int> value);
    partial void OnOrderNoChanged();
    #endregion
		
		public ConfigMaster()
		{
			this._ConfigDetails = new EntitySet<ConfigDetail>(new Action<ConfigDetail>(this.attach_ConfigDetails), new Action<ConfigDetail>(this.detach_ConfigDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MasterId
		{
			get
			{
				return this._MasterId;
			}
			set
			{
				if ((this._MasterId != value))
				{
					this.OnMasterIdChanging(value);
					this.SendPropertyChanging();
					this._MasterId = value;
					this.SendPropertyChanged("MasterId");
					this.OnMasterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MasterName
		{
			get
			{
				return this._MasterName;
			}
			set
			{
				if ((this._MasterName != value))
				{
					this.OnMasterNameChanging(value);
					this.SendPropertyChanging();
					this._MasterName = value;
					this.SendPropertyChanged("MasterName");
					this.OnMasterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int")]
		public System.Nullable<int> OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigMaster_ConfigDetail", Storage="_ConfigDetails", ThisKey="MasterId", OtherKey="MasterId")]
		public EntitySet<ConfigDetail> ConfigDetails
		{
			get
			{
				return this._ConfigDetails;
			}
			set
			{
				this._ConfigDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConfigDetails(ConfigDetail entity)
		{
			this.SendPropertyChanging();
			entity.ConfigMaster = this;
		}
		
		private void detach_ConfigDetails(ConfigDetail entity)
		{
			this.SendPropertyChanging();
			entity.ConfigMaster = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserCompany")]
	public partial class UserCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _CompID;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnCompIDChanging(System.Nullable<int> value);
    partial void OnCompIDChanged();
    #endregion
		
		public UserCompany()
		{
			this._Company = default(EntityRef<Company>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompID", DbType="Int")]
		public System.Nullable<int> CompID
		{
			get
			{
				return this._CompID;
			}
			set
			{
				if ((this._CompID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompIDChanging(value);
					this.SendPropertyChanging();
					this._CompID = value;
					this.SendPropertyChanged("CompID");
					this.OnCompIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_UserCompany", Storage="_Company", ThisKey="CompID", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.UserCompanies.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.UserCompanies.Add(this);
						this._CompID = value.ID;
					}
					else
					{
						this._CompID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserCompany", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserCompanies.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserCompanies.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Act.PeriodicalPlanExecution")]
	public partial class PeriodicalPlanExecution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PeriodicalPlanExcutionId;
		
		private string _BillNo;
		
		private int _maintPlanId;
		
		private int _VehcleId;
		
		private System.Nullable<int> _CounterReading;
		
		private System.DateTime _Date;
		
		private string _Notes;
		
		private EntitySet<PeriodicalPlanExecDetail> _PeriodicalPlanExecDetails;
		
		private EntityRef<Vehcle> _Vehcle;
		
		private EntityRef<PeriodicalPlan> _PeriodicalPlan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPeriodicalPlanExcutionIdChanging(int value);
    partial void OnPeriodicalPlanExcutionIdChanged();
    partial void OnBillNoChanging(string value);
    partial void OnBillNoChanged();
    partial void OnmaintPlanIdChanging(int value);
    partial void OnmaintPlanIdChanged();
    partial void OnVehcleIdChanging(int value);
    partial void OnVehcleIdChanged();
    partial void OnCounterReadingChanging(System.Nullable<int> value);
    partial void OnCounterReadingChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public PeriodicalPlanExecution()
		{
			this._PeriodicalPlanExecDetails = new EntitySet<PeriodicalPlanExecDetail>(new Action<PeriodicalPlanExecDetail>(this.attach_PeriodicalPlanExecDetails), new Action<PeriodicalPlanExecDetail>(this.detach_PeriodicalPlanExecDetails));
			this._Vehcle = default(EntityRef<Vehcle>);
			this._PeriodicalPlan = default(EntityRef<PeriodicalPlan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicalPlanExcutionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PeriodicalPlanExcutionId
		{
			get
			{
				return this._PeriodicalPlanExcutionId;
			}
			set
			{
				if ((this._PeriodicalPlanExcutionId != value))
				{
					this.OnPeriodicalPlanExcutionIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodicalPlanExcutionId = value;
					this.SendPropertyChanged("PeriodicalPlanExcutionId");
					this.OnPeriodicalPlanExcutionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillNo", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string BillNo
		{
			get
			{
				return this._BillNo;
			}
			set
			{
				if ((this._BillNo != value))
				{
					this.OnBillNoChanging(value);
					this.SendPropertyChanging();
					this._BillNo = value;
					this.SendPropertyChanged("BillNo");
					this.OnBillNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maintPlanId", DbType="Int NOT NULL")]
		public int maintPlanId
		{
			get
			{
				return this._maintPlanId;
			}
			set
			{
				if ((this._maintPlanId != value))
				{
					if (this._PeriodicalPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaintPlanIdChanging(value);
					this.SendPropertyChanging();
					this._maintPlanId = value;
					this.SendPropertyChanged("maintPlanId");
					this.OnmaintPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehcleId", DbType="Int NOT NULL")]
		public int VehcleId
		{
			get
			{
				return this._VehcleId;
			}
			set
			{
				if ((this._VehcleId != value))
				{
					if (this._Vehcle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehcleIdChanging(value);
					this.SendPropertyChanging();
					this._VehcleId = value;
					this.SendPropertyChanged("VehcleId");
					this.OnVehcleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterReading", DbType="Int")]
		public System.Nullable<int> CounterReading
		{
			get
			{
				return this._CounterReading;
			}
			set
			{
				if ((this._CounterReading != value))
				{
					this.OnCounterReadingChanging(value);
					this.SendPropertyChanging();
					this._CounterReading = value;
					this.SendPropertyChanged("CounterReading");
					this.OnCounterReadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodicalPlanExecution_PeriodicalPlanExecDetail", Storage="_PeriodicalPlanExecDetails", ThisKey="PeriodicalPlanExcutionId", OtherKey="PeriodicalPlanExcutionId")]
		public EntitySet<PeriodicalPlanExecDetail> PeriodicalPlanExecDetails
		{
			get
			{
				return this._PeriodicalPlanExecDetails;
			}
			set
			{
				this._PeriodicalPlanExecDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehcle_PeriodicalPlanExecution", Storage="_Vehcle", ThisKey="VehcleId", OtherKey="VehcleId", IsForeignKey=true)]
		public Vehcle Vehcle
		{
			get
			{
				return this._Vehcle.Entity;
			}
			set
			{
				Vehcle previousValue = this._Vehcle.Entity;
				if (((previousValue != value) 
							|| (this._Vehcle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehcle.Entity = null;
						previousValue.PeriodicalPlanExecutions.Remove(this);
					}
					this._Vehcle.Entity = value;
					if ((value != null))
					{
						value.PeriodicalPlanExecutions.Add(this);
						this._VehcleId = value.VehcleId;
					}
					else
					{
						this._VehcleId = default(int);
					}
					this.SendPropertyChanged("Vehcle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodicalPlan_PeriodicalPlanExecution", Storage="_PeriodicalPlan", ThisKey="maintPlanId", OtherKey="maintPlanId", IsForeignKey=true)]
		public PeriodicalPlan PeriodicalPlan
		{
			get
			{
				return this._PeriodicalPlan.Entity;
			}
			set
			{
				PeriodicalPlan previousValue = this._PeriodicalPlan.Entity;
				if (((previousValue != value) 
							|| (this._PeriodicalPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PeriodicalPlan.Entity = null;
						previousValue.PeriodicalPlanExecutions.Remove(this);
					}
					this._PeriodicalPlan.Entity = value;
					if ((value != null))
					{
						value.PeriodicalPlanExecutions.Add(this);
						this._maintPlanId = value.maintPlanId;
					}
					else
					{
						this._maintPlanId = default(int);
					}
					this.SendPropertyChanged("PeriodicalPlan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PeriodicalPlanExecDetails(PeriodicalPlanExecDetail entity)
		{
			this.SendPropertyChanging();
			entity.PeriodicalPlanExecution = this;
		}
		
		private void detach_PeriodicalPlanExecDetails(PeriodicalPlanExecDetail entity)
		{
			this.SendPropertyChanging();
			entity.PeriodicalPlanExecution = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vehclesConsumedSparesVw")]
	public partial class vehclesConsumedSparesVw
	{
		
		private System.Nullable<int> _VehcleId;
		
		private System.Nullable<int> _SparId;
		
		private System.DateTime _Date;
		
		public vehclesConsumedSparesVw()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehcleId", DbType="Int")]
		public System.Nullable<int> VehcleId
		{
			get
			{
				return this._VehcleId;
			}
			set
			{
				if ((this._VehcleId != value))
				{
					this._VehcleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SparId", DbType="Int")]
		public System.Nullable<int> SparId
		{
			get
			{
				return this._SparId;
			}
			set
			{
				if ((this._SparId != value))
				{
					this._SparId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Net.NetworkDevicesInformation")]
	public partial class NetworkDevicesInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _HDID;
		
		private string _IpAddress;
		
		private string _MacAddress;
		
		private string _DeviceName;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<bool> _IsActive;
		
		private EntityRef<StaticIPAddressWithBranch> _StaticIPAddressWithBranch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHDIDChanging(System.Nullable<int> value);
    partial void OnHDIDChanged();
    partial void OnIpAddressChanging(string value);
    partial void OnIpAddressChanged();
    partial void OnMacAddressChanging(string value);
    partial void OnMacAddressChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public NetworkDevicesInformation()
		{
			this._StaticIPAddressWithBranch = default(EntityRef<StaticIPAddressWithBranch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HDID", DbType="Int")]
		public System.Nullable<int> HDID
		{
			get
			{
				return this._HDID;
			}
			set
			{
				if ((this._HDID != value))
				{
					if (this._StaticIPAddressWithBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHDIDChanging(value);
					this.SendPropertyChanging();
					this._HDID = value;
					this.SendPropertyChanged("HDID");
					this.OnHDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpAddress", DbType="NVarChar(200)")]
		public string IpAddress
		{
			get
			{
				return this._IpAddress;
			}
			set
			{
				if ((this._IpAddress != value))
				{
					this.OnIpAddressChanging(value);
					this.SendPropertyChanging();
					this._IpAddress = value;
					this.SendPropertyChanged("IpAddress");
					this.OnIpAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MacAddress", DbType="NVarChar(200)")]
		public string MacAddress
		{
			get
			{
				return this._MacAddress;
			}
			set
			{
				if ((this._MacAddress != value))
				{
					this.OnMacAddressChanging(value);
					this.SendPropertyChanging();
					this._MacAddress = value;
					this.SendPropertyChanged("MacAddress");
					this.OnMacAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceName", DbType="NVarChar(200)")]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaticIPAddressWithBranch_NetworkDevicesInformation", Storage="_StaticIPAddressWithBranch", ThisKey="HDID", OtherKey="ID", IsForeignKey=true)]
		public StaticIPAddressWithBranch StaticIPAddressWithBranch
		{
			get
			{
				return this._StaticIPAddressWithBranch.Entity;
			}
			set
			{
				StaticIPAddressWithBranch previousValue = this._StaticIPAddressWithBranch.Entity;
				if (((previousValue != value) 
							|| (this._StaticIPAddressWithBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaticIPAddressWithBranch.Entity = null;
						previousValue.NetworkDevicesInformations.Remove(this);
					}
					this._StaticIPAddressWithBranch.Entity = value;
					if ((value != null))
					{
						value.NetworkDevicesInformations.Add(this);
						this._HDID = value.ID;
					}
					else
					{
						this._HDID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaticIPAddressWithBranch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Net.DeviceWithIPAddress")]
	public partial class DeviceWithIPAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CompanyId;
		
		private System.Nullable<int> _BranchIdInAcc;
		
		private System.Nullable<int> _SectionId;
		
		private System.Nullable<int> _FloorId;
		
		private System.Nullable<int> _RoomId;
		
		private System.Nullable<int> _AssetMasterId;
		
		private System.Nullable<int> _SubAssetId;
		
		private System.Nullable<int> _NetworkDeviceInformationId;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private System.Nullable<int> _UserId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    partial void OnBranchIdInAccChanging(System.Nullable<int> value);
    partial void OnBranchIdInAccChanged();
    partial void OnSectionIdChanging(System.Nullable<int> value);
    partial void OnSectionIdChanged();
    partial void OnFloorIdChanging(System.Nullable<int> value);
    partial void OnFloorIdChanged();
    partial void OnRoomIdChanging(System.Nullable<int> value);
    partial void OnRoomIdChanged();
    partial void OnAssetMasterIdChanging(System.Nullable<int> value);
    partial void OnAssetMasterIdChanged();
    partial void OnSubAssetIdChanging(System.Nullable<int> value);
    partial void OnSubAssetIdChanged();
    partial void OnNetworkDeviceInformationIdChanging(System.Nullable<int> value);
    partial void OnNetworkDeviceInformationIdChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    #endregion
		
		public DeviceWithIPAddress()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchIdInAcc", DbType="Int")]
		public System.Nullable<int> BranchIdInAcc
		{
			get
			{
				return this._BranchIdInAcc;
			}
			set
			{
				if ((this._BranchIdInAcc != value))
				{
					this.OnBranchIdInAccChanging(value);
					this.SendPropertyChanging();
					this._BranchIdInAcc = value;
					this.SendPropertyChanged("BranchIdInAcc");
					this.OnBranchIdInAccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", DbType="Int")]
		public System.Nullable<int> SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorId", DbType="Int")]
		public System.Nullable<int> FloorId
		{
			get
			{
				return this._FloorId;
			}
			set
			{
				if ((this._FloorId != value))
				{
					this.OnFloorIdChanging(value);
					this.SendPropertyChanging();
					this._FloorId = value;
					this.SendPropertyChanged("FloorId");
					this.OnFloorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomId", DbType="Int")]
		public System.Nullable<int> RoomId
		{
			get
			{
				return this._RoomId;
			}
			set
			{
				if ((this._RoomId != value))
				{
					this.OnRoomIdChanging(value);
					this.SendPropertyChanging();
					this._RoomId = value;
					this.SendPropertyChanged("RoomId");
					this.OnRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetMasterId", DbType="Int")]
		public System.Nullable<int> AssetMasterId
		{
			get
			{
				return this._AssetMasterId;
			}
			set
			{
				if ((this._AssetMasterId != value))
				{
					this.OnAssetMasterIdChanging(value);
					this.SendPropertyChanging();
					this._AssetMasterId = value;
					this.SendPropertyChanged("AssetMasterId");
					this.OnAssetMasterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubAssetId", DbType="Int")]
		public System.Nullable<int> SubAssetId
		{
			get
			{
				return this._SubAssetId;
			}
			set
			{
				if ((this._SubAssetId != value))
				{
					this.OnSubAssetIdChanging(value);
					this.SendPropertyChanging();
					this._SubAssetId = value;
					this.SendPropertyChanged("SubAssetId");
					this.OnSubAssetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkDeviceInformationId", DbType="Int")]
		public System.Nullable<int> NetworkDeviceInformationId
		{
			get
			{
				return this._NetworkDeviceInformationId;
			}
			set
			{
				if ((this._NetworkDeviceInformationId != value))
				{
					this.OnNetworkDeviceInformationIdChanging(value);
					this.SendPropertyChanging();
					this._NetworkDeviceInformationId = value;
					this.SendPropertyChanged("NetworkDeviceInformationId");
					this.OnNetworkDeviceInformationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Def.ConfigDetail")]
	public partial class ConfigDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConfigDetailId;
		
		private int _MasterId;
		
		private string _ConfigDetailName;
		
		private System.Nullable<int> _Ast_Id;
		
		private System.Nullable<int> _RecType;
		
		private System.Nullable<int> _MasterAssetId;
		
		private EntitySet<Buiding> _Buidings;
		
		private EntitySet<Buiding> _Buidings1;
		
		private EntitySet<Buiding> _Buidings2;
		
		private EntitySet<BuildingMaint> _BuildingMaints;
		
		private EntitySet<BuildingPlanDetail> _BuildingPlanDetails;
		
		private EntitySet<BuildPerExecPlanDetail> _BuildPerExecPlanDetails;
		
		private EntitySet<District> _Districts;
		
		private EntitySet<Material> _Materials;
		
		private EntitySet<BusAttachment> _BusAttachments;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<Employee> _Employees1;
		
		private EntitySet<FuelCardsDefinition> _FuelCardsDefinitions;
		
		private EntitySet<ServiceCenter> _ServiceCenters;
		
		private EntitySet<SparePart> _SpareParts;
		
		private EntitySet<SparPart> _SparParts;
		
		private EntitySet<Vehcle> _Vehcles;
		
		private EntitySet<Vehcle> _Vehcles1;
		
		private EntitySet<Vehcle> _Vehcles2;
		
		private EntitySet<Vehcle> _Vehcles3;
		
		private EntitySet<Vehcle> _Vehcles4;
		
		private EntitySet<Vehcle> _Vehcles5;
		
		private EntitySet<Vehcle> _Vehcles6;
		
		private EntitySet<Vehcle> _Vehcles7;
		
		private EntitySet<Recommendation> _Recommendations;
		
		private EntitySet<MaintReqDetail> _MaintReqDetails;
		
		private EntityRef<ConfigMaster> _ConfigMaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConfigDetailIdChanging(int value);
    partial void OnConfigDetailIdChanged();
    partial void OnMasterIdChanging(int value);
    partial void OnMasterIdChanged();
    partial void OnConfigDetailNameChanging(string value);
    partial void OnConfigDetailNameChanged();
    partial void OnAst_IdChanging(System.Nullable<int> value);
    partial void OnAst_IdChanged();
    partial void OnRecTypeChanging(System.Nullable<int> value);
    partial void OnRecTypeChanged();
    partial void OnMasterAssetIdChanging(System.Nullable<int> value);
    partial void OnMasterAssetIdChanged();
    #endregion
		
		public ConfigDetail()
		{
			this._Buidings = new EntitySet<Buiding>(new Action<Buiding>(this.attach_Buidings), new Action<Buiding>(this.detach_Buidings));
			this._Buidings1 = new EntitySet<Buiding>(new Action<Buiding>(this.attach_Buidings1), new Action<Buiding>(this.detach_Buidings1));
			this._Buidings2 = new EntitySet<Buiding>(new Action<Buiding>(this.attach_Buidings2), new Action<Buiding>(this.detach_Buidings2));
			this._BuildingMaints = new EntitySet<BuildingMaint>(new Action<BuildingMaint>(this.attach_BuildingMaints), new Action<BuildingMaint>(this.detach_BuildingMaints));
			this._BuildingPlanDetails = new EntitySet<BuildingPlanDetail>(new Action<BuildingPlanDetail>(this.attach_BuildingPlanDetails), new Action<BuildingPlanDetail>(this.detach_BuildingPlanDetails));
			this._BuildPerExecPlanDetails = new EntitySet<BuildPerExecPlanDetail>(new Action<BuildPerExecPlanDetail>(this.attach_BuildPerExecPlanDetails), new Action<BuildPerExecPlanDetail>(this.detach_BuildPerExecPlanDetails));
			this._Districts = new EntitySet<District>(new Action<District>(this.attach_Districts), new Action<District>(this.detach_Districts));
			this._Materials = new EntitySet<Material>(new Action<Material>(this.attach_Materials), new Action<Material>(this.detach_Materials));
			this._BusAttachments = new EntitySet<BusAttachment>(new Action<BusAttachment>(this.attach_BusAttachments), new Action<BusAttachment>(this.detach_BusAttachments));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._Employees1 = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees1), new Action<Employee>(this.detach_Employees1));
			this._FuelCardsDefinitions = new EntitySet<FuelCardsDefinition>(new Action<FuelCardsDefinition>(this.attach_FuelCardsDefinitions), new Action<FuelCardsDefinition>(this.detach_FuelCardsDefinitions));
			this._ServiceCenters = new EntitySet<ServiceCenter>(new Action<ServiceCenter>(this.attach_ServiceCenters), new Action<ServiceCenter>(this.detach_ServiceCenters));
			this._SpareParts = new EntitySet<SparePart>(new Action<SparePart>(this.attach_SpareParts), new Action<SparePart>(this.detach_SpareParts));
			this._SparParts = new EntitySet<SparPart>(new Action<SparPart>(this.attach_SparParts), new Action<SparPart>(this.detach_SparParts));
			this._Vehcles = new EntitySet<Vehcle>(new Action<Vehcle>(this.attach_Vehcles), new Action<Vehcle>(this.detach_Vehcles));
			this._Vehcles1 = new EntitySet<Vehcle>(new Action<Vehcle>(this.attach_Vehcles1), new Action<Vehcle>(this.detach_Vehcles1));
			this._Vehcles2 = new EntitySet<Vehcle>(new Action<Vehcle>(this.attach_Vehcles2), new Action<Vehcle>(this.detach_Vehcles2));
			this._Vehcles3 = new EntitySet<Vehcle>(new Action<Vehcle>(this.attach_Vehcles3), new Action<Vehcle>(this.detach_Vehcles3));
			this._Vehcles4 = new EntitySet<Vehcle>(new Action<Vehcle>(this.attach_Vehcles4), new Action<Vehcle>(this.detach_Vehcles4));
			this._Vehcles5 = new EntitySet<Vehcle>(new Action<Vehcle>(this.attach_Vehcles5), new Action<Vehcle>(this.detach_Vehcles5));
			this._Vehcles6 = new EntitySet<Vehcle>(new Action<Vehcle>(this.attach_Vehcles6), new Action<Vehcle>(this.detach_Vehcles6));
			this._Vehcles7 = new EntitySet<Vehcle>(new Action<Vehcle>(this.attach_Vehcles7), new Action<Vehcle>(this.detach_Vehcles7));
			this._Recommendations = new EntitySet<Recommendation>(new Action<Recommendation>(this.attach_Recommendations), new Action<Recommendation>(this.detach_Recommendations));
			this._MaintReqDetails = new EntitySet<MaintReqDetail>(new Action<MaintReqDetail>(this.attach_MaintReqDetails), new Action<MaintReqDetail>(this.detach_MaintReqDetails));
			this._ConfigMaster = default(EntityRef<ConfigMaster>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ConfigDetailId
		{
			get
			{
				return this._ConfigDetailId;
			}
			set
			{
				if ((this._ConfigDetailId != value))
				{
					this.OnConfigDetailIdChanging(value);
					this.SendPropertyChanging();
					this._ConfigDetailId = value;
					this.SendPropertyChanged("ConfigDetailId");
					this.OnConfigDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterId", DbType="Int NOT NULL")]
		public int MasterId
		{
			get
			{
				return this._MasterId;
			}
			set
			{
				if ((this._MasterId != value))
				{
					if (this._ConfigMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasterIdChanging(value);
					this.SendPropertyChanging();
					this._MasterId = value;
					this.SendPropertyChanged("MasterId");
					this.OnMasterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigDetailName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ConfigDetailName
		{
			get
			{
				return this._ConfigDetailName;
			}
			set
			{
				if ((this._ConfigDetailName != value))
				{
					this.OnConfigDetailNameChanging(value);
					this.SendPropertyChanging();
					this._ConfigDetailName = value;
					this.SendPropertyChanged("ConfigDetailName");
					this.OnConfigDetailNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ast_Id", DbType="Int")]
		public System.Nullable<int> Ast_Id
		{
			get
			{
				return this._Ast_Id;
			}
			set
			{
				if ((this._Ast_Id != value))
				{
					this.OnAst_IdChanging(value);
					this.SendPropertyChanging();
					this._Ast_Id = value;
					this.SendPropertyChanged("Ast_Id");
					this.OnAst_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecType", DbType="Int")]
		public System.Nullable<int> RecType
		{
			get
			{
				return this._RecType;
			}
			set
			{
				if ((this._RecType != value))
				{
					this.OnRecTypeChanging(value);
					this.SendPropertyChanging();
					this._RecType = value;
					this.SendPropertyChanged("RecType");
					this.OnRecTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterAssetId", DbType="Int")]
		public System.Nullable<int> MasterAssetId
		{
			get
			{
				return this._MasterAssetId;
			}
			set
			{
				if ((this._MasterAssetId != value))
				{
					this.OnMasterAssetIdChanging(value);
					this.SendPropertyChanging();
					this._MasterAssetId = value;
					this.SendPropertyChanged("MasterAssetId");
					this.OnMasterAssetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Buiding", Storage="_Buidings", ThisKey="ConfigDetailId", OtherKey="UsageId")]
		public EntitySet<Buiding> Buidings
		{
			get
			{
				return this._Buidings;
			}
			set
			{
				this._Buidings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Buiding1", Storage="_Buidings1", ThisKey="ConfigDetailId", OtherKey="BuildingTypeId")]
		public EntitySet<Buiding> Buidings1
		{
			get
			{
				return this._Buidings1;
			}
			set
			{
				this._Buidings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Buiding2", Storage="_Buidings2", ThisKey="ConfigDetailId", OtherKey="OwnerShipId")]
		public EntitySet<Buiding> Buidings2
		{
			get
			{
				return this._Buidings2;
			}
			set
			{
				this._Buidings2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_BuildingMaint", Storage="_BuildingMaints", ThisKey="ConfigDetailId", OtherKey="WorkId")]
		public EntitySet<BuildingMaint> BuildingMaints
		{
			get
			{
				return this._BuildingMaints;
			}
			set
			{
				this._BuildingMaints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_BuildingPlanDetail", Storage="_BuildingPlanDetails", ThisKey="ConfigDetailId", OtherKey="WorkId")]
		public EntitySet<BuildingPlanDetail> BuildingPlanDetails
		{
			get
			{
				return this._BuildingPlanDetails;
			}
			set
			{
				this._BuildingPlanDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_BuildPerExecPlanDetail", Storage="_BuildPerExecPlanDetails", ThisKey="ConfigDetailId", OtherKey="WorkId")]
		public EntitySet<BuildPerExecPlanDetail> BuildPerExecPlanDetails
		{
			get
			{
				return this._BuildPerExecPlanDetails;
			}
			set
			{
				this._BuildPerExecPlanDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_District", Storage="_Districts", ThisKey="ConfigDetailId", OtherKey="CityId")]
		public EntitySet<District> Districts
		{
			get
			{
				return this._Districts;
			}
			set
			{
				this._Districts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Material", Storage="_Materials", ThisKey="ConfigDetailId", OtherKey="CategoryId")]
		public EntitySet<Material> Materials
		{
			get
			{
				return this._Materials;
			}
			set
			{
				this._Materials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_BusAttachment", Storage="_BusAttachments", ThisKey="ConfigDetailId", OtherKey="AttachmentName")]
		public EntitySet<BusAttachment> BusAttachments
		{
			get
			{
				return this._BusAttachments;
			}
			set
			{
				this._BusAttachments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Employee", Storage="_Employees", ThisKey="ConfigDetailId", OtherKey="SpecializationId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Employee1", Storage="_Employees1", ThisKey="ConfigDetailId", OtherKey="LicenseType")]
		public EntitySet<Employee> Employees1
		{
			get
			{
				return this._Employees1;
			}
			set
			{
				this._Employees1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_FuelCardsDefinition", Storage="_FuelCardsDefinitions", ThisKey="ConfigDetailId", OtherKey="FuelId")]
		public EntitySet<FuelCardsDefinition> FuelCardsDefinitions
		{
			get
			{
				return this._FuelCardsDefinitions;
			}
			set
			{
				this._FuelCardsDefinitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_ServiceCenter", Storage="_ServiceCenters", ThisKey="ConfigDetailId", OtherKey="BankName")]
		public EntitySet<ServiceCenter> ServiceCenters
		{
			get
			{
				return this._ServiceCenters;
			}
			set
			{
				this._ServiceCenters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_SparePart", Storage="_SpareParts", ThisKey="ConfigDetailId", OtherKey="MainCategory")]
		public EntitySet<SparePart> SpareParts
		{
			get
			{
				return this._SpareParts;
			}
			set
			{
				this._SpareParts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_SparPart", Storage="_SparParts", ThisKey="ConfigDetailId", OtherKey="MainCategory")]
		public EntitySet<SparPart> SparParts
		{
			get
			{
				return this._SparParts;
			}
			set
			{
				this._SparParts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Vehcle", Storage="_Vehcles", ThisKey="ConfigDetailId", OtherKey="FueL")]
		public EntitySet<Vehcle> Vehcles
		{
			get
			{
				return this._Vehcles;
			}
			set
			{
				this._Vehcles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Vehcle1", Storage="_Vehcles1", ThisKey="ConfigDetailId", OtherKey="LicenseType")]
		public EntitySet<Vehcle> Vehcles1
		{
			get
			{
				return this._Vehcles1;
			}
			set
			{
				this._Vehcles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Vehcle2", Storage="_Vehcles2", ThisKey="ConfigDetailId", OtherKey="CC")]
		public EntitySet<Vehcle> Vehcles2
		{
			get
			{
				return this._Vehcles2;
			}
			set
			{
				this._Vehcles2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Vehcle3", Storage="_Vehcles3", ThisKey="ConfigDetailId", OtherKey="CylenderNo")]
		public EntitySet<Vehcle> Vehcles3
		{
			get
			{
				return this._Vehcles3;
			}
			set
			{
				this._Vehcles3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Vehcle4", Storage="_Vehcles4", ThisKey="ConfigDetailId", OtherKey="ManufacturingCountry")]
		public EntitySet<Vehcle> Vehcles4
		{
			get
			{
				return this._Vehcles4;
			}
			set
			{
				this._Vehcles4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Vehcle5", Storage="_Vehcles5", ThisKey="ConfigDetailId", OtherKey="VehcleType")]
		public EntitySet<Vehcle> Vehcles5
		{
			get
			{
				return this._Vehcles5;
			}
			set
			{
				this._Vehcles5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Vehcle6", Storage="_Vehcles6", ThisKey="ConfigDetailId", OtherKey="Color")]
		public EntitySet<Vehcle> Vehcles6
		{
			get
			{
				return this._Vehcles6;
			}
			set
			{
				this._Vehcles6.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Vehcle7", Storage="_Vehcles7", ThisKey="ConfigDetailId", OtherKey="InsuranceCompanyId")]
		public EntitySet<Vehcle> Vehcles7
		{
			get
			{
				return this._Vehcles7;
			}
			set
			{
				this._Vehcles7.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Recommendation", Storage="_Recommendations", ThisKey="ConfigDetailId", OtherKey="ConfigDetailId")]
		public EntitySet<Recommendation> Recommendations
		{
			get
			{
				return this._Recommendations;
			}
			set
			{
				this._Recommendations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_MaintReqDetail", Storage="_MaintReqDetails", ThisKey="ConfigDetailId", OtherKey="WorkId")]
		public EntitySet<MaintReqDetail> MaintReqDetails
		{
			get
			{
				return this._MaintReqDetails;
			}
			set
			{
				this._MaintReqDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigMaster_ConfigDetail", Storage="_ConfigMaster", ThisKey="MasterId", OtherKey="MasterId", IsForeignKey=true)]
		public ConfigMaster ConfigMaster
		{
			get
			{
				return this._ConfigMaster.Entity;
			}
			set
			{
				ConfigMaster previousValue = this._ConfigMaster.Entity;
				if (((previousValue != value) 
							|| (this._ConfigMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigMaster.Entity = null;
						previousValue.ConfigDetails.Remove(this);
					}
					this._ConfigMaster.Entity = value;
					if ((value != null))
					{
						value.ConfigDetails.Add(this);
						this._MasterId = value.MasterId;
					}
					else
					{
						this._MasterId = default(int);
					}
					this.SendPropertyChanged("ConfigMaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buidings(Buiding entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = this;
		}
		
		private void detach_Buidings(Buiding entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = null;
		}
		
		private void attach_Buidings1(Buiding entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail1 = this;
		}
		
		private void detach_Buidings1(Buiding entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail1 = null;
		}
		
		private void attach_Buidings2(Buiding entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail2 = this;
		}
		
		private void detach_Buidings2(Buiding entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail2 = null;
		}
		
		private void attach_BuildingMaints(BuildingMaint entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = this;
		}
		
		private void detach_BuildingMaints(BuildingMaint entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = null;
		}
		
		private void attach_BuildingPlanDetails(BuildingPlanDetail entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = this;
		}
		
		private void detach_BuildingPlanDetails(BuildingPlanDetail entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = null;
		}
		
		private void attach_BuildPerExecPlanDetails(BuildPerExecPlanDetail entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = this;
		}
		
		private void detach_BuildPerExecPlanDetails(BuildPerExecPlanDetail entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = null;
		}
		
		private void attach_Districts(District entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = this;
		}
		
		private void detach_Districts(District entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = null;
		}
		
		private void attach_Materials(Material entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = this;
		}
		
		private void detach_Materials(Material entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = null;
		}
		
		private void attach_BusAttachments(BusAttachment entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = this;
		}
		
		private void detach_BusAttachments(BusAttachment entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = null;
		}
		
		private void attach_Employees1(Employee entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail1 = this;
		}
		
		private void detach_Employees1(Employee entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail1 = null;
		}
		
		private void attach_FuelCardsDefinitions(FuelCardsDefinition entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = this;
		}
		
		private void detach_FuelCardsDefinitions(FuelCardsDefinition entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = null;
		}
		
		private void attach_ServiceCenters(ServiceCenter entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = this;
		}
		
		private void detach_ServiceCenters(ServiceCenter entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = null;
		}
		
		private void attach_SpareParts(SparePart entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = this;
		}
		
		private void detach_SpareParts(SparePart entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = null;
		}
		
		private void attach_SparParts(SparPart entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = this;
		}
		
		private void detach_SparParts(SparPart entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = null;
		}
		
		private void attach_Vehcles(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = this;
		}
		
		private void detach_Vehcles(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = null;
		}
		
		private void attach_Vehcles1(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail1 = this;
		}
		
		private void detach_Vehcles1(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail1 = null;
		}
		
		private void attach_Vehcles2(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail2 = this;
		}
		
		private void detach_Vehcles2(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail2 = null;
		}
		
		private void attach_Vehcles3(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail3 = this;
		}
		
		private void detach_Vehcles3(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail3 = null;
		}
		
		private void attach_Vehcles4(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail4 = this;
		}
		
		private void detach_Vehcles4(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail4 = null;
		}
		
		private void attach_Vehcles5(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail5 = this;
		}
		
		private void detach_Vehcles5(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail5 = null;
		}
		
		private void attach_Vehcles6(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail6 = this;
		}
		
		private void detach_Vehcles6(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail6 = null;
		}
		
		private void attach_Vehcles7(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail7 = this;
		}
		
		private void detach_Vehcles7(Vehcle entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail7 = null;
		}
		
		private void attach_Recommendations(Recommendation entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = this;
		}
		
		private void detach_Recommendations(Recommendation entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = null;
		}
		
		private void attach_MaintReqDetails(MaintReqDetail entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = this;
		}
		
		private void detach_MaintReqDetails(MaintReqDetail entity)
		{
			this.SendPropertyChanging();
			entity.ConfigDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recommendation")]
	public partial class Recommendation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecID;
		
		private System.Nullable<int> _ConfigDetailId;
		
		private string _RecDesc;
		
		private System.Nullable<bool> _SupportType;
		
		private EntityRef<ConfigDetail> _ConfigDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecIDChanging(int value);
    partial void OnRecIDChanged();
    partial void OnConfigDetailIdChanging(System.Nullable<int> value);
    partial void OnConfigDetailIdChanged();
    partial void OnRecDescChanging(string value);
    partial void OnRecDescChanged();
    partial void OnSupportTypeChanging(System.Nullable<bool> value);
    partial void OnSupportTypeChanged();
    #endregion
		
		public Recommendation()
		{
			this._ConfigDetail = default(EntityRef<ConfigDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecID
		{
			get
			{
				return this._RecID;
			}
			set
			{
				if ((this._RecID != value))
				{
					this.OnRecIDChanging(value);
					this.SendPropertyChanging();
					this._RecID = value;
					this.SendPropertyChanged("RecID");
					this.OnRecIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigDetailId", DbType="Int")]
		public System.Nullable<int> ConfigDetailId
		{
			get
			{
				return this._ConfigDetailId;
			}
			set
			{
				if ((this._ConfigDetailId != value))
				{
					if (this._ConfigDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConfigDetailIdChanging(value);
					this.SendPropertyChanging();
					this._ConfigDetailId = value;
					this.SendPropertyChanged("ConfigDetailId");
					this.OnConfigDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecDesc", DbType="NVarChar(50)")]
		public string RecDesc
		{
			get
			{
				return this._RecDesc;
			}
			set
			{
				if ((this._RecDesc != value))
				{
					this.OnRecDescChanging(value);
					this.SendPropertyChanging();
					this._RecDesc = value;
					this.SendPropertyChanged("RecDesc");
					this.OnRecDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportType", DbType="Bit")]
		public System.Nullable<bool> SupportType
		{
			get
			{
				return this._SupportType;
			}
			set
			{
				if ((this._SupportType != value))
				{
					this.OnSupportTypeChanging(value);
					this.SendPropertyChanging();
					this._SupportType = value;
					this.SendPropertyChanged("SupportType");
					this.OnSupportTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_Recommendation", Storage="_ConfigDetail", ThisKey="ConfigDetailId", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail
		{
			get
			{
				return this._ConfigDetail.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail.Entity = null;
						previousValue.Recommendations.Remove(this);
					}
					this._ConfigDetail.Entity = value;
					if ((value != null))
					{
						value.Recommendations.Add(this);
						this._ConfigDetailId = value.ConfigDetailId;
					}
					else
					{
						this._ConfigDetailId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConfigDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaintReqDetail")]
	public partial class MaintReqDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaintReqDetailId;
		
		private int _MaintReqId;
		
		private int _WorkId;
		
		private string _PicDescription;
		
		private System.Nullable<int> _MobileId;
		
		private string _RecommendationId;
		
		private System.Nullable<bool> _IsAsset;
		
		private EntityRef<ConfigDetail> _ConfigDetail;
		
		private EntityRef<MaintRequest> _MaintRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaintReqDetailIdChanging(int value);
    partial void OnMaintReqDetailIdChanged();
    partial void OnMaintReqIdChanging(int value);
    partial void OnMaintReqIdChanged();
    partial void OnWorkIdChanging(int value);
    partial void OnWorkIdChanged();
    partial void OnPicDescriptionChanging(string value);
    partial void OnPicDescriptionChanged();
    partial void OnMobileIdChanging(System.Nullable<int> value);
    partial void OnMobileIdChanged();
    partial void OnRecommendationIdChanging(string value);
    partial void OnRecommendationIdChanged();
    partial void OnIsAssetChanging(System.Nullable<bool> value);
    partial void OnIsAssetChanged();
    #endregion
		
		public MaintReqDetail()
		{
			this._ConfigDetail = default(EntityRef<ConfigDetail>);
			this._MaintRequest = default(EntityRef<MaintRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintReqDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaintReqDetailId
		{
			get
			{
				return this._MaintReqDetailId;
			}
			set
			{
				if ((this._MaintReqDetailId != value))
				{
					this.OnMaintReqDetailIdChanging(value);
					this.SendPropertyChanging();
					this._MaintReqDetailId = value;
					this.SendPropertyChanged("MaintReqDetailId");
					this.OnMaintReqDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintReqId", DbType="Int NOT NULL")]
		public int MaintReqId
		{
			get
			{
				return this._MaintReqId;
			}
			set
			{
				if ((this._MaintReqId != value))
				{
					if (this._MaintRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaintReqIdChanging(value);
					this.SendPropertyChanging();
					this._MaintReqId = value;
					this.SendPropertyChanged("MaintReqId");
					this.OnMaintReqIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkId", DbType="Int NOT NULL")]
		public int WorkId
		{
			get
			{
				return this._WorkId;
			}
			set
			{
				if ((this._WorkId != value))
				{
					if (this._ConfigDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkIdChanging(value);
					this.SendPropertyChanging();
					this._WorkId = value;
					this.SendPropertyChanged("WorkId");
					this.OnWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PicDescription", DbType="NVarChar(MAX)")]
		public string PicDescription
		{
			get
			{
				return this._PicDescription;
			}
			set
			{
				if ((this._PicDescription != value))
				{
					this.OnPicDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PicDescription = value;
					this.SendPropertyChanged("PicDescription");
					this.OnPicDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileId", DbType="Int")]
		public System.Nullable<int> MobileId
		{
			get
			{
				return this._MobileId;
			}
			set
			{
				if ((this._MobileId != value))
				{
					this.OnMobileIdChanging(value);
					this.SendPropertyChanging();
					this._MobileId = value;
					this.SendPropertyChanged("MobileId");
					this.OnMobileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecommendationId", DbType="NVarChar(200)")]
		public string RecommendationId
		{
			get
			{
				return this._RecommendationId;
			}
			set
			{
				if ((this._RecommendationId != value))
				{
					this.OnRecommendationIdChanging(value);
					this.SendPropertyChanging();
					this._RecommendationId = value;
					this.SendPropertyChanged("RecommendationId");
					this.OnRecommendationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAsset", DbType="Bit")]
		public System.Nullable<bool> IsAsset
		{
			get
			{
				return this._IsAsset;
			}
			set
			{
				if ((this._IsAsset != value))
				{
					this.OnIsAssetChanging(value);
					this.SendPropertyChanging();
					this._IsAsset = value;
					this.SendPropertyChanged("IsAsset");
					this.OnIsAssetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigDetail_MaintReqDetail", Storage="_ConfigDetail", ThisKey="WorkId", OtherKey="ConfigDetailId", IsForeignKey=true)]
		public ConfigDetail ConfigDetail
		{
			get
			{
				return this._ConfigDetail.Entity;
			}
			set
			{
				ConfigDetail previousValue = this._ConfigDetail.Entity;
				if (((previousValue != value) 
							|| (this._ConfigDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigDetail.Entity = null;
						previousValue.MaintReqDetails.Remove(this);
					}
					this._ConfigDetail.Entity = value;
					if ((value != null))
					{
						value.MaintReqDetails.Add(this);
						this._WorkId = value.ConfigDetailId;
					}
					else
					{
						this._WorkId = default(int);
					}
					this.SendPropertyChanged("ConfigDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaintRequest_MaintReqDetail", Storage="_MaintRequest", ThisKey="MaintReqId", OtherKey="MaintReqId", IsForeignKey=true)]
		public MaintRequest MaintRequest
		{
			get
			{
				return this._MaintRequest.Entity;
			}
			set
			{
				MaintRequest previousValue = this._MaintRequest.Entity;
				if (((previousValue != value) 
							|| (this._MaintRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaintRequest.Entity = null;
						previousValue.MaintReqDetails.Remove(this);
					}
					this._MaintRequest.Entity = value;
					if ((value != null))
					{
						value.MaintReqDetails.Add(this);
						this._MaintReqId = value.MaintReqId;
					}
					else
					{
						this._MaintReqId = default(int);
					}
					this.SendPropertyChanged("MaintRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaintRequest")]
	public partial class MaintRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaintReqId;
		
		private System.Nullable<bool> _PriorUrgent;
		
		private System.Nullable<bool> _PriorHigh;
		
		private System.Nullable<bool> _PriorLow;
		
		private System.Nullable<int> _CompanyId;
		
		private int _LocationId;
		
		private int _RequestedEmpId;
		
		private System.DateTime _RequestDate;
		
		private string _Notes;
		
		private System.Nullable<bool> _IsAccepted;
		
		private System.Nullable<bool> _IsRejected;
		
		private System.Nullable<bool> _IsClosed;
		
		private System.Nullable<int> _ReqPhaseID;
		
		private System.Nullable<int> _RequestType;
		
		private EntitySet<MaintReqComment> _MaintReqComments;
		
		private EntitySet<MaintReqPicture> _MaintReqPictures;
		
		private EntitySet<Process> _Processes;
		
		private EntitySet<userRequest> _userRequests;
		
		private EntitySet<MaintReqDetail> _MaintReqDetails;
		
		private EntitySet<ReqPhase> _ReqPhases;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaintReqIdChanging(int value);
    partial void OnMaintReqIdChanged();
    partial void OnPriorUrgentChanging(System.Nullable<bool> value);
    partial void OnPriorUrgentChanged();
    partial void OnPriorHighChanging(System.Nullable<bool> value);
    partial void OnPriorHighChanged();
    partial void OnPriorLowChanging(System.Nullable<bool> value);
    partial void OnPriorLowChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnRequestedEmpIdChanging(int value);
    partial void OnRequestedEmpIdChanged();
    partial void OnRequestDateChanging(System.DateTime value);
    partial void OnRequestDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnIsAcceptedChanging(System.Nullable<bool> value);
    partial void OnIsAcceptedChanged();
    partial void OnIsRejectedChanging(System.Nullable<bool> value);
    partial void OnIsRejectedChanged();
    partial void OnIsClosedChanging(System.Nullable<bool> value);
    partial void OnIsClosedChanged();
    partial void OnReqPhaseIDChanging(System.Nullable<int> value);
    partial void OnReqPhaseIDChanged();
    partial void OnRequestTypeChanging(System.Nullable<int> value);
    partial void OnRequestTypeChanged();
    #endregion
		
		public MaintRequest()
		{
			this._MaintReqComments = new EntitySet<MaintReqComment>(new Action<MaintReqComment>(this.attach_MaintReqComments), new Action<MaintReqComment>(this.detach_MaintReqComments));
			this._MaintReqPictures = new EntitySet<MaintReqPicture>(new Action<MaintReqPicture>(this.attach_MaintReqPictures), new Action<MaintReqPicture>(this.detach_MaintReqPictures));
			this._Processes = new EntitySet<Process>(new Action<Process>(this.attach_Processes), new Action<Process>(this.detach_Processes));
			this._userRequests = new EntitySet<userRequest>(new Action<userRequest>(this.attach_userRequests), new Action<userRequest>(this.detach_userRequests));
			this._MaintReqDetails = new EntitySet<MaintReqDetail>(new Action<MaintReqDetail>(this.attach_MaintReqDetails), new Action<MaintReqDetail>(this.detach_MaintReqDetails));
			this._ReqPhases = new EntitySet<ReqPhase>(new Action<ReqPhase>(this.attach_ReqPhases), new Action<ReqPhase>(this.detach_ReqPhases));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintReqId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaintReqId
		{
			get
			{
				return this._MaintReqId;
			}
			set
			{
				if ((this._MaintReqId != value))
				{
					this.OnMaintReqIdChanging(value);
					this.SendPropertyChanging();
					this._MaintReqId = value;
					this.SendPropertyChanged("MaintReqId");
					this.OnMaintReqIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriorUrgent", DbType="Bit")]
		public System.Nullable<bool> PriorUrgent
		{
			get
			{
				return this._PriorUrgent;
			}
			set
			{
				if ((this._PriorUrgent != value))
				{
					this.OnPriorUrgentChanging(value);
					this.SendPropertyChanging();
					this._PriorUrgent = value;
					this.SendPropertyChanged("PriorUrgent");
					this.OnPriorUrgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriorHigh", DbType="Bit")]
		public System.Nullable<bool> PriorHigh
		{
			get
			{
				return this._PriorHigh;
			}
			set
			{
				if ((this._PriorHigh != value))
				{
					this.OnPriorHighChanging(value);
					this.SendPropertyChanging();
					this._PriorHigh = value;
					this.SendPropertyChanged("PriorHigh");
					this.OnPriorHighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriorLow", DbType="Bit")]
		public System.Nullable<bool> PriorLow
		{
			get
			{
				return this._PriorLow;
			}
			set
			{
				if ((this._PriorLow != value))
				{
					this.OnPriorLowChanging(value);
					this.SendPropertyChanging();
					this._PriorLow = value;
					this.SendPropertyChanged("PriorLow");
					this.OnPriorLowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int NOT NULL")]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedEmpId", DbType="Int NOT NULL")]
		public int RequestedEmpId
		{
			get
			{
				return this._RequestedEmpId;
			}
			set
			{
				if ((this._RequestedEmpId != value))
				{
					this.OnRequestedEmpIdChanging(value);
					this.SendPropertyChanging();
					this._RequestedEmpId = value;
					this.SendPropertyChanged("RequestedEmpId");
					this.OnRequestedEmpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAccepted", DbType="Bit")]
		public System.Nullable<bool> IsAccepted
		{
			get
			{
				return this._IsAccepted;
			}
			set
			{
				if ((this._IsAccepted != value))
				{
					this.OnIsAcceptedChanging(value);
					this.SendPropertyChanging();
					this._IsAccepted = value;
					this.SendPropertyChanged("IsAccepted");
					this.OnIsAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRejected", DbType="Bit")]
		public System.Nullable<bool> IsRejected
		{
			get
			{
				return this._IsRejected;
			}
			set
			{
				if ((this._IsRejected != value))
				{
					this.OnIsRejectedChanging(value);
					this.SendPropertyChanging();
					this._IsRejected = value;
					this.SendPropertyChanged("IsRejected");
					this.OnIsRejectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosed", DbType="Bit")]
		public System.Nullable<bool> IsClosed
		{
			get
			{
				return this._IsClosed;
			}
			set
			{
				if ((this._IsClosed != value))
				{
					this.OnIsClosedChanging(value);
					this.SendPropertyChanging();
					this._IsClosed = value;
					this.SendPropertyChanged("IsClosed");
					this.OnIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqPhaseID", DbType="Int")]
		public System.Nullable<int> ReqPhaseID
		{
			get
			{
				return this._ReqPhaseID;
			}
			set
			{
				if ((this._ReqPhaseID != value))
				{
					this.OnReqPhaseIDChanging(value);
					this.SendPropertyChanging();
					this._ReqPhaseID = value;
					this.SendPropertyChanged("ReqPhaseID");
					this.OnReqPhaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestType", DbType="Int")]
		public System.Nullable<int> RequestType
		{
			get
			{
				return this._RequestType;
			}
			set
			{
				if ((this._RequestType != value))
				{
					this.OnRequestTypeChanging(value);
					this.SendPropertyChanging();
					this._RequestType = value;
					this.SendPropertyChanged("RequestType");
					this.OnRequestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaintRequest_MaintReqComment", Storage="_MaintReqComments", ThisKey="MaintReqId", OtherKey="MaintReqId")]
		public EntitySet<MaintReqComment> MaintReqComments
		{
			get
			{
				return this._MaintReqComments;
			}
			set
			{
				this._MaintReqComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaintRequest_MaintReqPicture", Storage="_MaintReqPictures", ThisKey="MaintReqId", OtherKey="MaintReqId")]
		public EntitySet<MaintReqPicture> MaintReqPictures
		{
			get
			{
				return this._MaintReqPictures;
			}
			set
			{
				this._MaintReqPictures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaintRequest_Process", Storage="_Processes", ThisKey="MaintReqId", OtherKey="Req_Id")]
		public EntitySet<Process> Processes
		{
			get
			{
				return this._Processes;
			}
			set
			{
				this._Processes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaintRequest_userRequest", Storage="_userRequests", ThisKey="MaintReqId", OtherKey="MaintRequestId")]
		public EntitySet<userRequest> userRequests
		{
			get
			{
				return this._userRequests;
			}
			set
			{
				this._userRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaintRequest_MaintReqDetail", Storage="_MaintReqDetails", ThisKey="MaintReqId", OtherKey="MaintReqId")]
		public EntitySet<MaintReqDetail> MaintReqDetails
		{
			get
			{
				return this._MaintReqDetails;
			}
			set
			{
				this._MaintReqDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaintRequest_ReqPhase", Storage="_ReqPhases", ThisKey="MaintReqId", OtherKey="Req_Id")]
		public EntitySet<ReqPhase> ReqPhases
		{
			get
			{
				return this._ReqPhases;
			}
			set
			{
				this._ReqPhases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_MaintRequest", Storage="_Company", ThisKey="CompanyId", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.MaintRequests.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.MaintRequests.Add(this);
						this._CompanyId = value.ID;
					}
					else
					{
						this._CompanyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MaintReqComments(MaintReqComment entity)
		{
			this.SendPropertyChanging();
			entity.MaintRequest = this;
		}
		
		private void detach_MaintReqComments(MaintReqComment entity)
		{
			this.SendPropertyChanging();
			entity.MaintRequest = null;
		}
		
		private void attach_MaintReqPictures(MaintReqPicture entity)
		{
			this.SendPropertyChanging();
			entity.MaintRequest = this;
		}
		
		private void detach_MaintReqPictures(MaintReqPicture entity)
		{
			this.SendPropertyChanging();
			entity.MaintRequest = null;
		}
		
		private void attach_Processes(Process entity)
		{
			this.SendPropertyChanging();
			entity.MaintRequest = this;
		}
		
		private void detach_Processes(Process entity)
		{
			this.SendPropertyChanging();
			entity.MaintRequest = null;
		}
		
		private void attach_userRequests(userRequest entity)
		{
			this.SendPropertyChanging();
			entity.MaintRequest = this;
		}
		
		private void detach_userRequests(userRequest entity)
		{
			this.SendPropertyChanging();
			entity.MaintRequest = null;
		}
		
		private void attach_MaintReqDetails(MaintReqDetail entity)
		{
			this.SendPropertyChanging();
			entity.MaintRequest = this;
		}
		
		private void detach_MaintReqDetails(MaintReqDetail entity)
		{
			this.SendPropertyChanging();
			entity.MaintRequest = null;
		}
		
		private void attach_ReqPhases(ReqPhase entity)
		{
			this.SendPropertyChanging();
			entity.MaintRequest = this;
		}
		
		private void detach_ReqPhases(ReqPhase entity)
		{
			this.SendPropertyChanging();
			entity.MaintRequest = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReqPhase")]
	public partial class ReqPhase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReqPhaseID;
		
		private System.Nullable<int> _User_Id;
		
		private System.Nullable<int> _Phase_Id;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _Req_Id;
		
		private System.Nullable<bool> _IsPassedToNextPhase;
		
		private EntityRef<ReqPhase> _ReqPhase2;
		
		private EntityRef<Phase> _Phase;
		
		private EntityRef<MaintRequest> _MaintRequest;
		
		private EntityRef<User> _User;
		
		private EntityRef<ReqPhase> _ReqPhase1;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReqPhaseIDChanging(int value);
    partial void OnReqPhaseIDChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnPhase_IdChanging(System.Nullable<int> value);
    partial void OnPhase_IdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnReq_IdChanging(System.Nullable<int> value);
    partial void OnReq_IdChanged();
    partial void OnIsPassedToNextPhaseChanging(System.Nullable<bool> value);
    partial void OnIsPassedToNextPhaseChanged();
    #endregion
		
		public ReqPhase()
		{
			this._ReqPhase2 = default(EntityRef<ReqPhase>);
			this._Phase = default(EntityRef<Phase>);
			this._MaintRequest = default(EntityRef<MaintRequest>);
			this._User = default(EntityRef<User>);
			this._ReqPhase1 = default(EntityRef<ReqPhase>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqPhaseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReqPhaseID
		{
			get
			{
				return this._ReqPhaseID;
			}
			set
			{
				if ((this._ReqPhaseID != value))
				{
					if (this._ReqPhase1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReqPhaseIDChanging(value);
					this.SendPropertyChanging();
					this._ReqPhaseID = value;
					this.SendPropertyChanged("ReqPhaseID");
					this.OnReqPhaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if ((this._User.HasLoadedOrAssignedValue || this._User1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phase_Id", DbType="Int")]
		public System.Nullable<int> Phase_Id
		{
			get
			{
				return this._Phase_Id;
			}
			set
			{
				if ((this._Phase_Id != value))
				{
					if (this._Phase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhase_IdChanging(value);
					this.SendPropertyChanging();
					this._Phase_Id = value;
					this.SendPropertyChanged("Phase_Id");
					this.OnPhase_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Req_Id", DbType="Int")]
		public System.Nullable<int> Req_Id
		{
			get
			{
				return this._Req_Id;
			}
			set
			{
				if ((this._Req_Id != value))
				{
					if (this._MaintRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReq_IdChanging(value);
					this.SendPropertyChanging();
					this._Req_Id = value;
					this.SendPropertyChanged("Req_Id");
					this.OnReq_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPassedToNextPhase", DbType="Bit")]
		public System.Nullable<bool> IsPassedToNextPhase
		{
			get
			{
				return this._IsPassedToNextPhase;
			}
			set
			{
				if ((this._IsPassedToNextPhase != value))
				{
					this.OnIsPassedToNextPhaseChanging(value);
					this.SendPropertyChanging();
					this._IsPassedToNextPhase = value;
					this.SendPropertyChanged("IsPassedToNextPhase");
					this.OnIsPassedToNextPhaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReqPhase_ReqPhase", Storage="_ReqPhase2", ThisKey="ReqPhaseID", OtherKey="ReqPhaseID", IsUnique=true, IsForeignKey=false)]
		public ReqPhase ReqPhase2
		{
			get
			{
				return this._ReqPhase2.Entity;
			}
			set
			{
				ReqPhase previousValue = this._ReqPhase2.Entity;
				if (((previousValue != value) 
							|| (this._ReqPhase2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReqPhase2.Entity = null;
						previousValue.ReqPhase1 = null;
					}
					this._ReqPhase2.Entity = value;
					if ((value != null))
					{
						value.ReqPhase1 = this;
					}
					this.SendPropertyChanged("ReqPhase2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phase_ReqPhase", Storage="_Phase", ThisKey="Phase_Id", OtherKey="phases_Id", IsForeignKey=true)]
		public Phase Phase
		{
			get
			{
				return this._Phase.Entity;
			}
			set
			{
				Phase previousValue = this._Phase.Entity;
				if (((previousValue != value) 
							|| (this._Phase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phase.Entity = null;
						previousValue.ReqPhases.Remove(this);
					}
					this._Phase.Entity = value;
					if ((value != null))
					{
						value.ReqPhases.Add(this);
						this._Phase_Id = value.phases_Id;
					}
					else
					{
						this._Phase_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Phase");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaintRequest_ReqPhase", Storage="_MaintRequest", ThisKey="Req_Id", OtherKey="MaintReqId", IsForeignKey=true)]
		public MaintRequest MaintRequest
		{
			get
			{
				return this._MaintRequest.Entity;
			}
			set
			{
				MaintRequest previousValue = this._MaintRequest.Entity;
				if (((previousValue != value) 
							|| (this._MaintRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaintRequest.Entity = null;
						previousValue.ReqPhases.Remove(this);
					}
					this._MaintRequest.Entity = value;
					if ((value != null))
					{
						value.ReqPhases.Add(this);
						this._Req_Id = value.MaintReqId;
					}
					else
					{
						this._Req_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("MaintRequest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ReqPhase", Storage="_User", ThisKey="User_Id", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ReqPhases.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ReqPhases.Add(this);
						this._User_Id = value.ID;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReqPhase_ReqPhase", Storage="_ReqPhase1", ThisKey="ReqPhaseID", OtherKey="ReqPhaseID", IsForeignKey=true)]
		public ReqPhase ReqPhase1
		{
			get
			{
				return this._ReqPhase1.Entity;
			}
			set
			{
				ReqPhase previousValue = this._ReqPhase1.Entity;
				if (((previousValue != value) 
							|| (this._ReqPhase1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReqPhase1.Entity = null;
						previousValue.ReqPhase2 = null;
					}
					this._ReqPhase1.Entity = value;
					if ((value != null))
					{
						value.ReqPhase2 = this;
						this._ReqPhaseID = value.ReqPhaseID;
					}
					else
					{
						this._ReqPhaseID = default(int);
					}
					this.SendPropertyChanged("ReqPhase1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ReqPhase1", Storage="_User1", ThisKey="User_Id", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.ReqPhases1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.ReqPhases1.Add(this);
						this._User_Id = value.ID;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class AlarmSaveResult
	{
		
		private int _Column1;
		
		public AlarmSaveResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
		public int Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class CardsAvailableNoResult
	{
		
		private System.Nullable<int> _Available;
		
		public CardsAvailableNoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Available", DbType="Int")]
		public System.Nullable<int> Available
		{
			get
			{
				return this._Available;
			}
			set
			{
				if ((this._Available != value))
				{
					this._Available = value;
				}
			}
		}
	}
	
	public partial class EmployeesSelectWithJobResult
	{
		
		private string _Job;
		
		private int _EmployeeId;
		
		private string _EmployeeName;
		
		private string _CompName;
		
		private System.Nullable<int> _UserID;
		
		public EmployeesSelectWithJobResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Job", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string Job
		{
			get
			{
				return this._Job;
			}
			set
			{
				if ((this._Job != value))
				{
					this._Job = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this._EmployeeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="NVarChar(150)")]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this._CompName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
	}
	
	public partial class FollowUpCardBetweenTwoDatesResult
	{
		
		private System.Nullable<int> _VehcleId;
		
		private string _PlateNo;
		
		private string _DriverName;
		
		private System.DateTime _Date;
		
		private int _CounterReading;
		
		private int _distence;
		
		private string _FuelName;
		
		private System.Nullable<int> _LitresConsumed;
		
		private System.Nullable<decimal> _cost;
		
		private string _CompName;
		
		private int _FollowUpCardId;
		
		public FollowUpCardBetweenTwoDatesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehcleId", DbType="Int")]
		public System.Nullable<int> VehcleId
		{
			get
			{
				return this._VehcleId;
			}
			set
			{
				if ((this._VehcleId != value))
				{
					this._VehcleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateNo", DbType="NVarChar(20)")]
		public string PlateNo
		{
			get
			{
				return this._PlateNo;
			}
			set
			{
				if ((this._PlateNo != value))
				{
					this._PlateNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverName", DbType="NVarChar(70)")]
		public string DriverName
		{
			get
			{
				return this._DriverName;
			}
			set
			{
				if ((this._DriverName != value))
				{
					this._DriverName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterReading", DbType="Int NOT NULL")]
		public int CounterReading
		{
			get
			{
				return this._CounterReading;
			}
			set
			{
				if ((this._CounterReading != value))
				{
					this._CounterReading = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_distence", DbType="Int NOT NULL")]
		public int distence
		{
			get
			{
				return this._distence;
			}
			set
			{
				if ((this._distence != value))
				{
					this._distence = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelName", DbType="NVarChar(50)")]
		public string FuelName
		{
			get
			{
				return this._FuelName;
			}
			set
			{
				if ((this._FuelName != value))
				{
					this._FuelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LitresConsumed", DbType="Int")]
		public System.Nullable<int> LitresConsumed
		{
			get
			{
				return this._LitresConsumed;
			}
			set
			{
				if ((this._LitresConsumed != value))
				{
					this._LitresConsumed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this._cost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="NVarChar(150)")]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this._CompName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpCardId", DbType="Int NOT NULL")]
		public int FollowUpCardId
		{
			get
			{
				return this._FollowUpCardId;
			}
			set
			{
				if ((this._FollowUpCardId != value))
				{
					this._FollowUpCardId = value;
				}
			}
		}
	}
	
	public partial class FuelCardBalancesResult
	{
		
		private string _CardName;
		
		private System.Nullable<int> _Balance;
		
		private string _Name;
		
		public FuelCardBalancesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CardName
		{
			get
			{
				return this._CardName;
			}
			set
			{
				if ((this._CardName != value))
				{
					this._CardName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Int")]
		public System.Nullable<int> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this._Balance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class FuelCardsBalanceResult
	{
		
		private string _CardName;
		
		private System.Nullable<int> _countOut;
		
		private System.Nullable<int> _CountIn;
		
		private System.Nullable<int> _Balance;
		
		public FuelCardsBalanceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CardName
		{
			get
			{
				return this._CardName;
			}
			set
			{
				if ((this._CardName != value))
				{
					this._CardName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countOut", DbType="Int")]
		public System.Nullable<int> countOut
		{
			get
			{
				return this._countOut;
			}
			set
			{
				if ((this._countOut != value))
				{
					this._countOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountIn", DbType="Int")]
		public System.Nullable<int> CountIn
		{
			get
			{
				return this._CountIn;
			}
			set
			{
				if ((this._CountIn != value))
				{
					this._CountIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Int")]
		public System.Nullable<int> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this._Balance = value;
				}
			}
		}
	}
	
	public partial class FuelCardsSelectByFuelTypeAndSuperVisorIDResult
	{
		
		private int _FuelCardId;
		
		private string _CardName;
		
		public FuelCardsSelectByFuelTypeAndSuperVisorIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelCardId", DbType="Int NOT NULL")]
		public int FuelCardId
		{
			get
			{
				return this._FuelCardId;
			}
			set
			{
				if ((this._FuelCardId != value))
				{
					this._FuelCardId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CardName
		{
			get
			{
				return this._CardName;
			}
			set
			{
				if ((this._CardName != value))
				{
					this._CardName = value;
				}
			}
		}
	}
	
	public partial class GetBillIdResult
	{
		
		private string _BillNO;
		
		public GetBillIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillNO", DbType="NVarChar(34)")]
		public string BillNO
		{
			get
			{
				return this._BillNO;
			}
			set
			{
				if ((this._BillNO != value))
				{
					this._BillNO = value;
				}
			}
		}
	}
	
	public partial class InsuranceAlarmSelectResult
	{
		
		private string _Name;
		
		private string _CompName;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _InsuranceCompanyId;
		
		public InsuranceAlarmSelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="NVarChar(150)")]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this._CompName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceCompanyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InsuranceCompanyId
		{
			get
			{
				return this._InsuranceCompanyId;
			}
			set
			{
				if ((this._InsuranceCompanyId != value))
				{
					this._InsuranceCompanyId = value;
				}
			}
		}
	}
	
	public partial class LastSupplyInfoResult
	{
		
		private System.DateTime _Date;
		
		private System.Nullable<int> _LastReading;
		
		private System.Nullable<int> _LitresNo;
		
		public LastSupplyInfoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastReading", DbType="Int")]
		public System.Nullable<int> LastReading
		{
			get
			{
				return this._LastReading;
			}
			set
			{
				if ((this._LastReading != value))
				{
					this._LastReading = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LitresNo", DbType="Int")]
		public System.Nullable<int> LitresNo
		{
			get
			{
				return this._LitresNo;
			}
			set
			{
				if ((this._LitresNo != value))
				{
					this._LitresNo = value;
				}
			}
		}
	}
	
	public partial class MaintenenceCostResult
	{
		
		private int _VehcleId;
		
		private string _PlateNo;
		
		private System.DateTime _Date;
		
		private System.Nullable<int> _CounterReading;
		
		private string _MaintType;
		
		private string _PlanName;
		
		private string _ServiceName;
		
		private string _SpareName;
		
		private System.Nullable<decimal> _SparCost;
		
		private System.Nullable<decimal> _SparCount;
		
		private System.Nullable<decimal> _SparTotal;
		
		private System.Nullable<decimal> _LaborCost;
		
		private System.Nullable<decimal> _TotalCost;
		
		private int _SpareId;
		
		private System.Nullable<int> _maintPlanId;
		
		private System.Nullable<int> _ServiceId;
		
		private string _CompName;
		
		public MaintenenceCostResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehcleId", DbType="Int NOT NULL")]
		public int VehcleId
		{
			get
			{
				return this._VehcleId;
			}
			set
			{
				if ((this._VehcleId != value))
				{
					this._VehcleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PlateNo
		{
			get
			{
				return this._PlateNo;
			}
			set
			{
				if ((this._PlateNo != value))
				{
					this._PlateNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterReading", DbType="Int")]
		public System.Nullable<int> CounterReading
		{
			get
			{
				return this._CounterReading;
			}
			set
			{
				if ((this._CounterReading != value))
				{
					this._CounterReading = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintType", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string MaintType
		{
			get
			{
				return this._MaintType;
			}
			set
			{
				if ((this._MaintType != value))
				{
					this._MaintType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PlanName
		{
			get
			{
				return this._PlanName;
			}
			set
			{
				if ((this._PlanName != value))
				{
					this._PlanName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(150)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this._ServiceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpareName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SpareName
		{
			get
			{
				return this._SpareName;
			}
			set
			{
				if ((this._SpareName != value))
				{
					this._SpareName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SparCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SparCost
		{
			get
			{
				return this._SparCost;
			}
			set
			{
				if ((this._SparCost != value))
				{
					this._SparCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SparCount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SparCount
		{
			get
			{
				return this._SparCount;
			}
			set
			{
				if ((this._SparCount != value))
				{
					this._SparCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SparTotal", DbType="Decimal(20,2)")]
		public System.Nullable<decimal> SparTotal
		{
			get
			{
				return this._SparTotal;
			}
			set
			{
				if ((this._SparTotal != value))
				{
					this._SparTotal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaborCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LaborCost
		{
			get
			{
				return this._LaborCost;
			}
			set
			{
				if ((this._LaborCost != value))
				{
					this._LaborCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this._TotalCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpareId", DbType="Int NOT NULL")]
		public int SpareId
		{
			get
			{
				return this._SpareId;
			}
			set
			{
				if ((this._SpareId != value))
				{
					this._SpareId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maintPlanId", DbType="Int")]
		public System.Nullable<int> maintPlanId
		{
			get
			{
				return this._maintPlanId;
			}
			set
			{
				if ((this._maintPlanId != value))
				{
					this._maintPlanId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceId", DbType="Int")]
		public System.Nullable<int> ServiceId
		{
			get
			{
				return this._ServiceId;
			}
			set
			{
				if ((this._ServiceId != value))
				{
					this._ServiceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="NVarChar(150)")]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this._CompName = value;
				}
			}
		}
	}
	
	public partial class RequestSelectInWhileResult
	{
		
		private System.Nullable<int> _Column1;
		
		public RequestSelectInWhileResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class ShowLicenseNotificationsResult
	{
		
		private int _AlarmId;
		
		private string _Notification;
		
		private string _CompanyName;
		
		public ShowLicenseNotificationsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlarmId", DbType="Int NOT NULL")]
		public int AlarmId
		{
			get
			{
				return this._AlarmId;
			}
			set
			{
				if ((this._AlarmId != value))
				{
					this._AlarmId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notification", DbType="NVarChar(MAX)")]
		public string Notification
		{
			get
			{
				return this._Notification;
			}
			set
			{
				if ((this._Notification != value))
				{
					this._Notification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(150)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
	}
	
	public partial class ShowMaintainanceNotificationsResult
	{
		
		private int _AlarmId;
		
		private string _Notification;
		
		private string _CompanyName;
		
		private string _Name;
		
		public ShowMaintainanceNotificationsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlarmId", DbType="Int NOT NULL")]
		public int AlarmId
		{
			get
			{
				return this._AlarmId;
			}
			set
			{
				if ((this._AlarmId != value))
				{
					this._AlarmId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notification", DbType="NVarChar(MAX)")]
		public string Notification
		{
			get
			{
				return this._Notification;
			}
			set
			{
				if ((this._Notification != value))
				{
					this._Notification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(150)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class ShowNotificationsResult
	{
		
		private int _AlarmId;
		
		private string _Notification;
		
		private string _CompanyName;
		
		public ShowNotificationsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlarmId", DbType="Int NOT NULL")]
		public int AlarmId
		{
			get
			{
				return this._AlarmId;
			}
			set
			{
				if ((this._AlarmId != value))
				{
					this._AlarmId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notification", DbType="NVarChar(MAX)")]
		public string Notification
		{
			get
			{
				return this._Notification;
			}
			set
			{
				if ((this._Notification != value))
				{
					this._Notification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(150)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
	}
	
	public partial class ShowPlanNotificationsResult
	{
		
		private int _AlarmId;
		
		private string _Expr1;
		
		private string _CompName;
		
		public ShowPlanNotificationsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlarmId", DbType="Int NOT NULL")]
		public int AlarmId
		{
			get
			{
				return this._AlarmId;
			}
			set
			{
				if ((this._AlarmId != value))
				{
					this._AlarmId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="NVarChar(MAX)")]
		public string Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="NVarChar(150)")]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this._CompName = value;
				}
			}
		}
	}
	
	public partial class Sp_CompaniesSelectAllResult
	{
		
		private int _ID;
		
		private string _CompName;
		
		public Sp_CompaniesSelectAllResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="NVarChar(150)")]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this._CompName = value;
				}
			}
		}
	}
	
	public partial class Sp_MobileSelectAllResult
	{
		
		private int _MobileId;
		
		private string _MobileName;
		
		public Sp_MobileSelectAllResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileId", DbType="Int NOT NULL")]
		public int MobileId
		{
			get
			{
				return this._MobileId;
			}
			set
			{
				if ((this._MobileId != value))
				{
					this._MobileId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MobileName
		{
			get
			{
				return this._MobileName;
			}
			set
			{
				if ((this._MobileName != value))
				{
					this._MobileName = value;
				}
			}
		}
	}
	
	public partial class Sp_SelectConfigDetailsResult
	{
		
		private string _ConfigDetailName;
		
		private System.Nullable<int> _RecType;
		
		private System.Nullable<int> _Ast_Id;
		
		private int _ConfigDetailId;
		
		public Sp_SelectConfigDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigDetailName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ConfigDetailName
		{
			get
			{
				return this._ConfigDetailName;
			}
			set
			{
				if ((this._ConfigDetailName != value))
				{
					this._ConfigDetailName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecType", DbType="Int")]
		public System.Nullable<int> RecType
		{
			get
			{
				return this._RecType;
			}
			set
			{
				if ((this._RecType != value))
				{
					this._RecType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ast_Id", DbType="Int")]
		public System.Nullable<int> Ast_Id
		{
			get
			{
				return this._Ast_Id;
			}
			set
			{
				if ((this._Ast_Id != value))
				{
					this._Ast_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigDetailId", DbType="Int NOT NULL")]
		public int ConfigDetailId
		{
			get
			{
				return this._ConfigDetailId;
			}
			set
			{
				if ((this._ConfigDetailId != value))
				{
					this._ConfigDetailId = value;
				}
			}
		}
	}
	
	public partial class Sp_SelectMainMobileResult
	{
		
		private int _MobileId;
		
		private string _MobileName;
		
		public Sp_SelectMainMobileResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileId", DbType="Int NOT NULL")]
		public int MobileId
		{
			get
			{
				return this._MobileId;
			}
			set
			{
				if ((this._MobileId != value))
				{
					this._MobileId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MobileName
		{
			get
			{
				return this._MobileName;
			}
			set
			{
				if ((this._MobileName != value))
				{
					this._MobileName = value;
				}
			}
		}
	}
	
	public partial class Sp_SelectMobileResult
	{
		
		private int _MobileId;
		
		private string _MobileName;
		
		public Sp_SelectMobileResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileId", DbType="Int NOT NULL")]
		public int MobileId
		{
			get
			{
				return this._MobileId;
			}
			set
			{
				if ((this._MobileId != value))
				{
					this._MobileId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MobileName
		{
			get
			{
				return this._MobileName;
			}
			set
			{
				if ((this._MobileName != value))
				{
					this._MobileName = value;
				}
			}
		}
	}
	
	public partial class Sp_SelectParentMobileResult
	{
		
		private int _MobileId;
		
		private string _MobileName;
		
		public Sp_SelectParentMobileResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileId", DbType="Int NOT NULL")]
		public int MobileId
		{
			get
			{
				return this._MobileId;
			}
			set
			{
				if ((this._MobileId != value))
				{
					this._MobileId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MobileName
		{
			get
			{
				return this._MobileName;
			}
			set
			{
				if ((this._MobileName != value))
				{
					this._MobileName = value;
				}
			}
		}
	}
	
	public partial class Sp_WorksSelectAllResult
	{
		
		private int _ConfigDetailId;
		
		private string _ConfigDetailName;
		
		public Sp_WorksSelectAllResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigDetailId", DbType="Int NOT NULL")]
		public int ConfigDetailId
		{
			get
			{
				return this._ConfigDetailId;
			}
			set
			{
				if ((this._ConfigDetailId != value))
				{
					this._ConfigDetailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigDetailName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ConfigDetailName
		{
			get
			{
				return this._ConfigDetailName;
			}
			set
			{
				if ((this._ConfigDetailName != value))
				{
					this._ConfigDetailName = value;
				}
			}
		}
	}
	
	public partial class StoppedCarsSelectByIdResult
	{
		
		private string _PlateNo;
		
		private string _CompName;
		
		private string _StopReason;
		
		private System.DateTime _StopDate;
		
		private System.Nullable<System.DateTime> _ReoperateDate;
		
		private System.Nullable<int> _StopPeriod;
		
		public StoppedCarsSelectByIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PlateNo
		{
			get
			{
				return this._PlateNo;
			}
			set
			{
				if ((this._PlateNo != value))
				{
					this._PlateNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="NVarChar(150)")]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this._CompName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopReason", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string StopReason
		{
			get
			{
				return this._StopReason;
			}
			set
			{
				if ((this._StopReason != value))
				{
					this._StopReason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopDate", DbType="Date NOT NULL")]
		public System.DateTime StopDate
		{
			get
			{
				return this._StopDate;
			}
			set
			{
				if ((this._StopDate != value))
				{
					this._StopDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReoperateDate", DbType="Date")]
		public System.Nullable<System.DateTime> ReoperateDate
		{
			get
			{
				return this._ReoperateDate;
			}
			set
			{
				if ((this._ReoperateDate != value))
				{
					this._ReoperateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopPeriod", DbType="Int")]
		public System.Nullable<int> StopPeriod
		{
			get
			{
				return this._StopPeriod;
			}
			set
			{
				if ((this._StopPeriod != value))
				{
					this._StopPeriod = value;
				}
			}
		}
	}
	
	public partial class TotalCostSpResult
	{
		
		private int _VehcleId;
		
		private string _PlateNo;
		
		private System.Nullable<decimal> _SparTotal;
		
		private System.Nullable<decimal> _LaborCost;
		
		private System.Nullable<decimal> _FuelCost;
		
		private System.Nullable<decimal> _TotalCost;
		
		private string _CompanyName;
		
		public TotalCostSpResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehcleId", DbType="Int NOT NULL")]
		public int VehcleId
		{
			get
			{
				return this._VehcleId;
			}
			set
			{
				if ((this._VehcleId != value))
				{
					this._VehcleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PlateNo
		{
			get
			{
				return this._PlateNo;
			}
			set
			{
				if ((this._PlateNo != value))
				{
					this._PlateNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SparTotal", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> SparTotal
		{
			get
			{
				return this._SparTotal;
			}
			set
			{
				if ((this._SparTotal != value))
				{
					this._SparTotal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaborCost", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> LaborCost
		{
			get
			{
				return this._LaborCost;
			}
			set
			{
				if ((this._LaborCost != value))
				{
					this._LaborCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelCost", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> FuelCost
		{
			get
			{
				return this._FuelCost;
			}
			set
			{
				if ((this._FuelCost != value))
				{
					this._FuelCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this._TotalCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(50)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
	}
	
	public partial class usp_AstLocations_Select_ByUserIDResult
	{
		
		private int _ID;
		
		private string _LocationName;
		
		private System.Nullable<int> _ParentID;
		
		private string _ParentName;
		
		private System.Nullable<bool> _IsDefault;
		
		private System.Nullable<bool> _IsShown;
		
		private System.Nullable<bool> _IsMain;
		
		private System.Nullable<int> _Com_ID;
		
		private string _ComName;
		
		public usp_AstLocations_Select_ByUserIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(50)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentName", DbType="NVarChar(50)")]
		public string ParentName
		{
			get
			{
				return this._ParentName;
			}
			set
			{
				if ((this._ParentName != value))
				{
					this._ParentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this._IsDefault = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShown", DbType="Bit")]
		public System.Nullable<bool> IsShown
		{
			get
			{
				return this._IsShown;
			}
			set
			{
				if ((this._IsShown != value))
				{
					this._IsShown = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain", DbType="Bit")]
		public System.Nullable<bool> IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this._IsMain = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Com_ID", DbType="Int")]
		public System.Nullable<int> Com_ID
		{
			get
			{
				return this._Com_ID;
			}
			set
			{
				if ((this._Com_ID != value))
				{
					this._Com_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ComName
		{
			get
			{
				return this._ComName;
			}
			set
			{
				if ((this._ComName != value))
				{
					this._ComName = value;
				}
			}
		}
	}
	
	public partial class usp_Buses_RenewDatesResult
	{
		
		private int _ID;
		
		private string _PlateNumber;
		
		private string _BodyDesc;
		
		private System.Nullable<System.DateTime> _RenewDate;
		
		private string _OwnerName;
		
		private System.Nullable<int> _StudentsCount;
		
		private System.Nullable<int> _DriverID;
		
		private System.Nullable<int> _CompID;
		
		public usp_Buses_RenewDatesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateNumber", DbType="NVarChar(150)")]
		public string PlateNumber
		{
			get
			{
				return this._PlateNumber;
			}
			set
			{
				if ((this._PlateNumber != value))
				{
					this._PlateNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyDesc", DbType="NVarChar(300)")]
		public string BodyDesc
		{
			get
			{
				return this._BodyDesc;
			}
			set
			{
				if ((this._BodyDesc != value))
				{
					this._BodyDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RenewDate", DbType="Date")]
		public System.Nullable<System.DateTime> RenewDate
		{
			get
			{
				return this._RenewDate;
			}
			set
			{
				if ((this._RenewDate != value))
				{
					this._RenewDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerName", DbType="NVarChar(250)")]
		public string OwnerName
		{
			get
			{
				return this._OwnerName;
			}
			set
			{
				if ((this._OwnerName != value))
				{
					this._OwnerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentsCount", DbType="Int")]
		public System.Nullable<int> StudentsCount
		{
			get
			{
				return this._StudentsCount;
			}
			set
			{
				if ((this._StudentsCount != value))
				{
					this._StudentsCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverID", DbType="Int")]
		public System.Nullable<int> DriverID
		{
			get
			{
				return this._DriverID;
			}
			set
			{
				if ((this._DriverID != value))
				{
					this._DriverID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompID", DbType="Int")]
		public System.Nullable<int> CompID
		{
			get
			{
				return this._CompID;
			}
			set
			{
				if ((this._CompID != value))
				{
					this._CompID = value;
				}
			}
		}
	}
	
	public partial class usp_BusesDriversResult
	{
		
		private int _busId;
		
		private string _PlateNo;
		
		private string _EmployeeName;
		
		private string _OwnerName;
		
		private int _DriverId;
		
		private string _Mobile;
		
		public usp_BusesDriversResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_busId", DbType="Int NOT NULL")]
		public int busId
		{
			get
			{
				return this._busId;
			}
			set
			{
				if ((this._busId != value))
				{
					this._busId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PlateNo
		{
			get
			{
				return this._PlateNo;
			}
			set
			{
				if ((this._PlateNo != value))
				{
					this._PlateNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerName", DbType="NVarChar(150)")]
		public string OwnerName
		{
			get
			{
				return this._OwnerName;
			}
			set
			{
				if ((this._OwnerName != value))
				{
					this._OwnerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverId", DbType="Int NOT NULL")]
		public int DriverId
		{
			get
			{
				return this._DriverId;
			}
			set
			{
				if ((this._DriverId != value))
				{
					this._DriverId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(20)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
	}
	
	public partial class usp_BusesServices_SelectResult
	{
		
		private System.Nullable<int> _BusID;
		
		private string _PlateNumber;
		
		private System.Nullable<int> _ServiceID;
		
		private string _ServiceName;
		
		private System.DateTime _CheckDate;
		
		private string _Notes;
		
		public usp_BusesServices_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusID", DbType="Int")]
		public System.Nullable<int> BusID
		{
			get
			{
				return this._BusID;
			}
			set
			{
				if ((this._BusID != value))
				{
					this._BusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateNumber", DbType="NVarChar(150)")]
		public string PlateNumber
		{
			get
			{
				return this._PlateNumber;
			}
			set
			{
				if ((this._PlateNumber != value))
				{
					this._PlateNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="Int")]
		public System.Nullable<int> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this._ServiceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(150)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this._ServiceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="Date NOT NULL")]
		public System.DateTime CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this._CheckDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	public partial class usp_COM_SelectResult
	{
		
		private int _COMID;
		
		private System.Nullable<int> _ParentID;
		
		private string _COMName;
		
		private string _COMDescription;
		
		private string _COMAddress;
		
		private string _COMUrl;
		
		private System.Data.Linq.Binary _COMLogo;
		
		private string _COMPhone;
		
		private string _COMFax;
		
		private bool _COMStatus;
		
		private int _COM_ID;
		
		private string _DocFooter;
		
		private string _Accountant_Name;
		
		private string _FM_Name;
		
		private string _GM_Name;
		
		public usp_COM_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMID", DbType="Int NOT NULL")]
		public int COMID
		{
			get
			{
				return this._COMID;
			}
			set
			{
				if ((this._COMID != value))
				{
					this._COMID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string COMName
		{
			get
			{
				return this._COMName;
			}
			set
			{
				if ((this._COMName != value))
				{
					this._COMName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMDescription", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string COMDescription
		{
			get
			{
				return this._COMDescription;
			}
			set
			{
				if ((this._COMDescription != value))
				{
					this._COMDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMAddress", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string COMAddress
		{
			get
			{
				return this._COMAddress;
			}
			set
			{
				if ((this._COMAddress != value))
				{
					this._COMAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMUrl", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string COMUrl
		{
			get
			{
				return this._COMUrl;
			}
			set
			{
				if ((this._COMUrl != value))
				{
					this._COMUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMLogo", DbType="Image")]
		public System.Data.Linq.Binary COMLogo
		{
			get
			{
				return this._COMLogo;
			}
			set
			{
				if ((this._COMLogo != value))
				{
					this._COMLogo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string COMPhone
		{
			get
			{
				return this._COMPhone;
			}
			set
			{
				if ((this._COMPhone != value))
				{
					this._COMPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMFax", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string COMFax
		{
			get
			{
				return this._COMFax;
			}
			set
			{
				if ((this._COMFax != value))
				{
					this._COMFax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMStatus", DbType="Bit NOT NULL")]
		public bool COMStatus
		{
			get
			{
				return this._COMStatus;
			}
			set
			{
				if ((this._COMStatus != value))
				{
					this._COMStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COM_ID", DbType="Int NOT NULL")]
		public int COM_ID
		{
			get
			{
				return this._COM_ID;
			}
			set
			{
				if ((this._COM_ID != value))
				{
					this._COM_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocFooter", DbType="NVarChar(500)")]
		public string DocFooter
		{
			get
			{
				return this._DocFooter;
			}
			set
			{
				if ((this._DocFooter != value))
				{
					this._DocFooter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accountant_Name", DbType="NVarChar(250)")]
		public string Accountant_Name
		{
			get
			{
				return this._Accountant_Name;
			}
			set
			{
				if ((this._Accountant_Name != value))
				{
					this._Accountant_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FM_Name", DbType="NVarChar(250)")]
		public string FM_Name
		{
			get
			{
				return this._FM_Name;
			}
			set
			{
				if ((this._FM_Name != value))
				{
					this._FM_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GM_Name", DbType="NVarChar(250)")]
		public string GM_Name
		{
			get
			{
				return this._GM_Name;
			}
			set
			{
				if ((this._GM_Name != value))
				{
					this._GM_Name = value;
				}
			}
		}
	}
	
	public partial class usp_Companies_Select_ByUserIDResult
	{
		
		private int _ID;
		
		private string _CompName;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<int> _HrId;
		
		public usp_Companies_Select_ByUserIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="NVarChar(150)")]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this._CompName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HrId", DbType="Int")]
		public System.Nullable<int> HrId
		{
			get
			{
				return this._HrId;
			}
			set
			{
				if ((this._HrId != value))
				{
					this._HrId = value;
				}
			}
		}
	}
	
	public partial class Usp_Company_Select_ByUserIDResult
	{
		
		private int _COMID;
		
		private string _COMName;
		
		private string _Accountant_Name;
		
		private string _FM_Name;
		
		private string _GM_Name;
		
		public Usp_Company_Select_ByUserIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMID", DbType="Int NOT NULL")]
		public int COMID
		{
			get
			{
				return this._COMID;
			}
			set
			{
				if ((this._COMID != value))
				{
					this._COMID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string COMName
		{
			get
			{
				return this._COMName;
			}
			set
			{
				if ((this._COMName != value))
				{
					this._COMName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accountant_Name", DbType="NVarChar(250)")]
		public string Accountant_Name
		{
			get
			{
				return this._Accountant_Name;
			}
			set
			{
				if ((this._Accountant_Name != value))
				{
					this._Accountant_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FM_Name", DbType="NVarChar(250)")]
		public string FM_Name
		{
			get
			{
				return this._FM_Name;
			}
			set
			{
				if ((this._FM_Name != value))
				{
					this._FM_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GM_Name", DbType="NVarChar(250)")]
		public string GM_Name
		{
			get
			{
				return this._GM_Name;
			}
			set
			{
				if ((this._GM_Name != value))
				{
					this._GM_Name = value;
				}
			}
		}
	}
	
	public partial class usp_GroupPermission_GroupSelectResult
	{
		
		private long _ID;
		
		private int _Group_ID;
		
		private string _GroupName;
		
		private int _Page_ID;
		
		private string _PageName;
		
		private bool _Display;
		
		private System.Nullable<int> _Display1;
		
		private bool _InsertA;
		
		private System.Nullable<int> _InsertA1;
		
		private bool _UpdateA;
		
		private System.Nullable<int> _UpdateA1;
		
		private bool _DeleteA;
		
		private System.Nullable<int> _DeleteA1;
		
		public usp_GroupPermission_GroupSelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_ID", DbType="Int NOT NULL")]
		public int Group_ID
		{
			get
			{
				return this._Group_ID;
			}
			set
			{
				if ((this._Group_ID != value))
				{
					this._Group_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_ID", DbType="Int NOT NULL")]
		public int Page_ID
		{
			get
			{
				return this._Page_ID;
			}
			set
			{
				if ((this._Page_ID != value))
				{
					this._Page_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(250)")]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this._PageName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display", DbType="Bit NOT NULL")]
		public bool Display
		{
			get
			{
				return this._Display;
			}
			set
			{
				if ((this._Display != value))
				{
					this._Display = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display1", DbType="Int")]
		public System.Nullable<int> Display1
		{
			get
			{
				return this._Display1;
			}
			set
			{
				if ((this._Display1 != value))
				{
					this._Display1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertA", DbType="Bit NOT NULL")]
		public bool InsertA
		{
			get
			{
				return this._InsertA;
			}
			set
			{
				if ((this._InsertA != value))
				{
					this._InsertA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertA1", DbType="Int")]
		public System.Nullable<int> InsertA1
		{
			get
			{
				return this._InsertA1;
			}
			set
			{
				if ((this._InsertA1 != value))
				{
					this._InsertA1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateA", DbType="Bit NOT NULL")]
		public bool UpdateA
		{
			get
			{
				return this._UpdateA;
			}
			set
			{
				if ((this._UpdateA != value))
				{
					this._UpdateA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateA1", DbType="Int")]
		public System.Nullable<int> UpdateA1
		{
			get
			{
				return this._UpdateA1;
			}
			set
			{
				if ((this._UpdateA1 != value))
				{
					this._UpdateA1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteA", DbType="Bit NOT NULL")]
		public bool DeleteA
		{
			get
			{
				return this._DeleteA;
			}
			set
			{
				if ((this._DeleteA != value))
				{
					this._DeleteA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteA1", DbType="Int")]
		public System.Nullable<int> DeleteA1
		{
			get
			{
				return this._DeleteA1;
			}
			set
			{
				if ((this._DeleteA1 != value))
				{
					this._DeleteA1 = value;
				}
			}
		}
	}
	
	public partial class usp_GroupPermission_SelectResult
	{
		
		private long _ID;
		
		private int _Group_ID;
		
		private string _GroupName;
		
		private int _Page_ID;
		
		private string _PageName;
		
		private bool _Display;
		
		private System.Nullable<int> _Display1;
		
		private bool _InsertA;
		
		private System.Nullable<int> _InsertA1;
		
		private bool _UpdateA;
		
		private System.Nullable<int> _UpdateA1;
		
		private bool _DeleteA;
		
		private System.Nullable<int> _DeleteA1;
		
		public usp_GroupPermission_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_ID", DbType="Int NOT NULL")]
		public int Group_ID
		{
			get
			{
				return this._Group_ID;
			}
			set
			{
				if ((this._Group_ID != value))
				{
					this._Group_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_ID", DbType="Int NOT NULL")]
		public int Page_ID
		{
			get
			{
				return this._Page_ID;
			}
			set
			{
				if ((this._Page_ID != value))
				{
					this._Page_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(250)")]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this._PageName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display", DbType="Bit NOT NULL")]
		public bool Display
		{
			get
			{
				return this._Display;
			}
			set
			{
				if ((this._Display != value))
				{
					this._Display = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display1", DbType="Int")]
		public System.Nullable<int> Display1
		{
			get
			{
				return this._Display1;
			}
			set
			{
				if ((this._Display1 != value))
				{
					this._Display1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertA", DbType="Bit NOT NULL")]
		public bool InsertA
		{
			get
			{
				return this._InsertA;
			}
			set
			{
				if ((this._InsertA != value))
				{
					this._InsertA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertA1", DbType="Int")]
		public System.Nullable<int> InsertA1
		{
			get
			{
				return this._InsertA1;
			}
			set
			{
				if ((this._InsertA1 != value))
				{
					this._InsertA1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateA", DbType="Bit NOT NULL")]
		public bool UpdateA
		{
			get
			{
				return this._UpdateA;
			}
			set
			{
				if ((this._UpdateA != value))
				{
					this._UpdateA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateA1", DbType="Int")]
		public System.Nullable<int> UpdateA1
		{
			get
			{
				return this._UpdateA1;
			}
			set
			{
				if ((this._UpdateA1 != value))
				{
					this._UpdateA1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteA", DbType="Bit NOT NULL")]
		public bool DeleteA
		{
			get
			{
				return this._DeleteA;
			}
			set
			{
				if ((this._DeleteA != value))
				{
					this._DeleteA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteA1", DbType="Int")]
		public System.Nullable<int> DeleteA1
		{
			get
			{
				return this._DeleteA1;
			}
			set
			{
				if ((this._DeleteA1 != value))
				{
					this._DeleteA1 = value;
				}
			}
		}
	}
	
	public partial class usp_Groups_SelectResult
	{
		
		private int _ID;
		
		private string _Name;
		
		public usp_Groups_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class usp_PageActions_SelectResult
	{
		
		private int _ID;
		
		private int _Page_ID;
		
		private string _Name;
		
		private bool _Display;
		
		private bool _InsertA;
		
		private bool _UpdateA;
		
		private bool _DeleteA;
		
		public usp_PageActions_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_ID", DbType="Int NOT NULL")]
		public int Page_ID
		{
			get
			{
				return this._Page_ID;
			}
			set
			{
				if ((this._Page_ID != value))
				{
					this._Page_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display", DbType="Bit NOT NULL")]
		public bool Display
		{
			get
			{
				return this._Display;
			}
			set
			{
				if ((this._Display != value))
				{
					this._Display = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertA", DbType="Bit NOT NULL")]
		public bool InsertA
		{
			get
			{
				return this._InsertA;
			}
			set
			{
				if ((this._InsertA != value))
				{
					this._InsertA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateA", DbType="Bit NOT NULL")]
		public bool UpdateA
		{
			get
			{
				return this._UpdateA;
			}
			set
			{
				if ((this._UpdateA != value))
				{
					this._UpdateA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteA", DbType="Bit NOT NULL")]
		public bool DeleteA
		{
			get
			{
				return this._DeleteA;
			}
			set
			{
				if ((this._DeleteA != value))
				{
					this._DeleteA = value;
				}
			}
		}
	}
	
	public partial class usp_Pages_SelectResult
	{
		
		private int _ID;
		
		private string _Name;
		
		private string _URL;
		
		public usp_Pages_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(250)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this._URL = value;
				}
			}
		}
	}
	
	public partial class usp_Services_ReminderResult
	{
		
		private string _ServiceName;
		
		private System.Nullable<int> _BusID;
		
		private string _PlateNumber;
		
		private System.Nullable<int> _DriverID;
		
		private string _DriverName;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _LastCheckDate;
		
		public usp_Services_ReminderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(150)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this._ServiceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusID", DbType="Int")]
		public System.Nullable<int> BusID
		{
			get
			{
				return this._BusID;
			}
			set
			{
				if ((this._BusID != value))
				{
					this._BusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateNumber", DbType="NVarChar(150)")]
		public string PlateNumber
		{
			get
			{
				return this._PlateNumber;
			}
			set
			{
				if ((this._PlateNumber != value))
				{
					this._PlateNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverID", DbType="Int")]
		public System.Nullable<int> DriverID
		{
			get
			{
				return this._DriverID;
			}
			set
			{
				if ((this._DriverID != value))
				{
					this._DriverID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverName", DbType="NVarChar(150)")]
		public string DriverName
		{
			get
			{
				return this._DriverName;
			}
			set
			{
				if ((this._DriverName != value))
				{
					this._DriverName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCheckDate", DbType="Date")]
		public System.Nullable<System.DateTime> LastCheckDate
		{
			get
			{
				return this._LastCheckDate;
			}
			set
			{
				if ((this._LastCheckDate != value))
				{
					this._LastCheckDate = value;
				}
			}
		}
	}
	
	public partial class usp_User_PagesPermissionResult
	{
		
		private long _ID;
		
		private int _User_ID;
		
		private string _UserName;
		
		private int _Group_ID;
		
		private string _GroupName;
		
		private int _Page_ID;
		
		private string _PageName;
		
		private bool _Display;
		
		private bool _InsertA;
		
		private bool _UpdateA;
		
		private bool _DeleteA;
		
		private string _URL;
		
		public usp_User_PagesPermissionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this._User_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(150)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_ID", DbType="Int NOT NULL")]
		public int Group_ID
		{
			get
			{
				return this._Group_ID;
			}
			set
			{
				if ((this._Group_ID != value))
				{
					this._Group_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_ID", DbType="Int NOT NULL")]
		public int Page_ID
		{
			get
			{
				return this._Page_ID;
			}
			set
			{
				if ((this._Page_ID != value))
				{
					this._Page_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(250)")]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this._PageName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display", DbType="Bit NOT NULL")]
		public bool Display
		{
			get
			{
				return this._Display;
			}
			set
			{
				if ((this._Display != value))
				{
					this._Display = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertA", DbType="Bit NOT NULL")]
		public bool InsertA
		{
			get
			{
				return this._InsertA;
			}
			set
			{
				if ((this._InsertA != value))
				{
					this._InsertA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateA", DbType="Bit NOT NULL")]
		public bool UpdateA
		{
			get
			{
				return this._UpdateA;
			}
			set
			{
				if ((this._UpdateA != value))
				{
					this._UpdateA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteA", DbType="Bit NOT NULL")]
		public bool DeleteA
		{
			get
			{
				return this._DeleteA;
			}
			set
			{
				if ((this._DeleteA != value))
				{
					this._DeleteA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(250)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this._URL = value;
				}
			}
		}
	}
	
	public partial class usp_UserCompanies_SelectResult
	{
		
		private int _ID;
		
		private System.Nullable<int> _UserID;
		
		private string _UserName;
		
		private System.Nullable<int> _CompID;
		
		private string _CompName;
		
		public usp_UserCompanies_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(150)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompID", DbType="Int")]
		public System.Nullable<int> CompID
		{
			get
			{
				return this._CompID;
			}
			set
			{
				if ((this._CompID != value))
				{
					this._CompID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="NVarChar(150)")]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this._CompName = value;
				}
			}
		}
	}
	
	public partial class usp_UserGroups_SelectResult
	{
		
		private long _ID;
		
		private int _User_ID;
		
		private string _UserName;
		
		private int _Group_ID;
		
		private string _GroupName;
		
		public usp_UserGroups_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this._User_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(150)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_ID", DbType="Int NOT NULL")]
		public int Group_ID
		{
			get
			{
				return this._Group_ID;
			}
			set
			{
				if ((this._Group_ID != value))
				{
					this._Group_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
	}
	
	public partial class usp_Users_SelectResult
	{
		
		private int _ID;
		
		private string _Name;
		
		private string _UserName;
		
		private string _UserPassword;
		
		private System.Nullable<bool> _IsActive;
		
		public usp_Users_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(150)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="NVarChar(150)")]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this._UserPassword = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
	}
	
	public partial class VehclesPlansRequiredResult
	{
		
		private int _AlarmId;
		
		private string _Name;
		
		private string _PlanName;
		
		private string _Type;
		
		private System.Nullable<int> _counter;
		
		private System.Nullable<int> _CurrentReading;
		
		private System.Nullable<int> _KmDiffrence;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _DateNow;
		
		private System.Nullable<System.DateTime> _PLANDATE;
		
		private System.Nullable<int> _DayDiffrence;
		
		private int _VehcleId;
		
		private int _CompanyId;
		
		private System.Nullable<int> _MainDriver;
		
		private string _CompName;
		
		public VehclesPlansRequiredResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlarmId", DbType="Int NOT NULL")]
		public int AlarmId
		{
			get
			{
				return this._AlarmId;
			}
			set
			{
				if ((this._AlarmId != value))
				{
					this._AlarmId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PlanName
		{
			get
			{
				return this._PlanName;
			}
			set
			{
				if ((this._PlanName != value))
				{
					this._PlanName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_counter", DbType="Int")]
		public System.Nullable<int> counter
		{
			get
			{
				return this._counter;
			}
			set
			{
				if ((this._counter != value))
				{
					this._counter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentReading", DbType="Int")]
		public System.Nullable<int> CurrentReading
		{
			get
			{
				return this._CurrentReading;
			}
			set
			{
				if ((this._CurrentReading != value))
				{
					this._CurrentReading = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KmDiffrence", DbType="Int")]
		public System.Nullable<int> KmDiffrence
		{
			get
			{
				return this._KmDiffrence;
			}
			set
			{
				if ((this._KmDiffrence != value))
				{
					this._KmDiffrence = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateNow", DbType="Char(10)")]
		public string DateNow
		{
			get
			{
				return this._DateNow;
			}
			set
			{
				if ((this._DateNow != value))
				{
					this._DateNow = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLANDATE", DbType="Date")]
		public System.Nullable<System.DateTime> PLANDATE
		{
			get
			{
				return this._PLANDATE;
			}
			set
			{
				if ((this._PLANDATE != value))
				{
					this._PLANDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayDiffrence", DbType="Int")]
		public System.Nullable<int> DayDiffrence
		{
			get
			{
				return this._DayDiffrence;
			}
			set
			{
				if ((this._DayDiffrence != value))
				{
					this._DayDiffrence = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehcleId", DbType="Int NOT NULL")]
		public int VehcleId
		{
			get
			{
				return this._VehcleId;
			}
			set
			{
				if ((this._VehcleId != value))
				{
					this._VehcleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this._CompanyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainDriver", DbType="Int")]
		public System.Nullable<int> MainDriver
		{
			get
			{
				return this._MainDriver;
			}
			set
			{
				if ((this._MainDriver != value))
				{
					this._MainDriver = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="NVarChar(150)")]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this._CompName = value;
				}
			}
		}
	}
	
	public partial class VehclesSelectAllResult
	{
		
		private string _PlateNo;
		
		private string _BrandName;
		
		private string _ModelName;
		
		private string _ClassName;
		
		private string _CompName;
		
		private string _LicenseType;
		
		private string _LicenseNo;
		
		private System.Nullable<System.DateTime> _LicenseExpiryDate;
		
		private System.Nullable<System.DateTime> _InspectioDate;
		
		private string _FuelName;
		
		private string _VehcleType;
		
		private string _BodyNo;
		
		private string _MotorNo;
		
		private System.Nullable<int> _CC;
		
		private string _EmployeeName;
		
		private string _SuperVisorId;
		
		private System.Nullable<int> _CounterReadingStart;
		
		private System.Nullable<int> _CurrentReading;
		
		private System.Nullable<decimal> _AverageFuelConsumption;
		
		private System.Nullable<int> _Color;
		
		private System.Nullable<int> _CylenderNo;
		
		private System.Nullable<int> _ManufactureYear;
		
		private string _ManufactureCountry;
		
		private System.Nullable<System.DateTime> _StartOperationDate;
		
		private System.Nullable<System.DateTime> _EndOperationDate;
		
		public VehclesSelectAllResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PlateNo
		{
			get
			{
				return this._PlateNo;
			}
			set
			{
				if ((this._PlateNo != value))
				{
					this._PlateNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this._ModelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(50)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="NVarChar(150)")]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this._CompName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseType", DbType="NVarChar(50)")]
		public string LicenseType
		{
			get
			{
				return this._LicenseType;
			}
			set
			{
				if ((this._LicenseType != value))
				{
					this._LicenseType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNo", DbType="NVarChar(20)")]
		public string LicenseNo
		{
			get
			{
				return this._LicenseNo;
			}
			set
			{
				if ((this._LicenseNo != value))
				{
					this._LicenseNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseExpiryDate", DbType="Date")]
		public System.Nullable<System.DateTime> LicenseExpiryDate
		{
			get
			{
				return this._LicenseExpiryDate;
			}
			set
			{
				if ((this._LicenseExpiryDate != value))
				{
					this._LicenseExpiryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectioDate", DbType="Date")]
		public System.Nullable<System.DateTime> InspectioDate
		{
			get
			{
				return this._InspectioDate;
			}
			set
			{
				if ((this._InspectioDate != value))
				{
					this._InspectioDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelName", DbType="NVarChar(50)")]
		public string FuelName
		{
			get
			{
				return this._FuelName;
			}
			set
			{
				if ((this._FuelName != value))
				{
					this._FuelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehcleType", DbType="NVarChar(50)")]
		public string VehcleType
		{
			get
			{
				return this._VehcleType;
			}
			set
			{
				if ((this._VehcleType != value))
				{
					this._VehcleType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyNo", DbType="NVarChar(20)")]
		public string BodyNo
		{
			get
			{
				return this._BodyNo;
			}
			set
			{
				if ((this._BodyNo != value))
				{
					this._BodyNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotorNo", DbType="NVarChar(20)")]
		public string MotorNo
		{
			get
			{
				return this._MotorNo;
			}
			set
			{
				if ((this._MotorNo != value))
				{
					this._MotorNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CC", DbType="Int")]
		public System.Nullable<int> CC
		{
			get
			{
				return this._CC;
			}
			set
			{
				if ((this._CC != value))
				{
					this._CC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(70)")]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperVisorId", DbType="NVarChar(100)")]
		public string SuperVisorId
		{
			get
			{
				return this._SuperVisorId;
			}
			set
			{
				if ((this._SuperVisorId != value))
				{
					this._SuperVisorId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterReadingStart", DbType="Int")]
		public System.Nullable<int> CounterReadingStart
		{
			get
			{
				return this._CounterReadingStart;
			}
			set
			{
				if ((this._CounterReadingStart != value))
				{
					this._CounterReadingStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentReading", DbType="Int")]
		public System.Nullable<int> CurrentReading
		{
			get
			{
				return this._CurrentReading;
			}
			set
			{
				if ((this._CurrentReading != value))
				{
					this._CurrentReading = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageFuelConsumption", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AverageFuelConsumption
		{
			get
			{
				return this._AverageFuelConsumption;
			}
			set
			{
				if ((this._AverageFuelConsumption != value))
				{
					this._AverageFuelConsumption = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="Int")]
		public System.Nullable<int> Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this._Color = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CylenderNo", DbType="Int")]
		public System.Nullable<int> CylenderNo
		{
			get
			{
				return this._CylenderNo;
			}
			set
			{
				if ((this._CylenderNo != value))
				{
					this._CylenderNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufactureYear", DbType="Int")]
		public System.Nullable<int> ManufactureYear
		{
			get
			{
				return this._ManufactureYear;
			}
			set
			{
				if ((this._ManufactureYear != value))
				{
					this._ManufactureYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufactureCountry", DbType="NVarChar(50)")]
		public string ManufactureCountry
		{
			get
			{
				return this._ManufactureCountry;
			}
			set
			{
				if ((this._ManufactureCountry != value))
				{
					this._ManufactureCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartOperationDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartOperationDate
		{
			get
			{
				return this._StartOperationDate;
			}
			set
			{
				if ((this._StartOperationDate != value))
				{
					this._StartOperationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndOperationDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndOperationDate
		{
			get
			{
				return this._EndOperationDate;
			}
			set
			{
				if ((this._EndOperationDate != value))
				{
					this._EndOperationDate = value;
				}
			}
		}
	}
	
	public partial class VehclesSelectAllFirstResult
	{
		
		private string _PlateNo;
		
		private string _BrandName;
		
		private string _ModelName;
		
		private string _ClassName;
		
		private string _CompName;
		
		private string _LicenseType;
		
		private string _LicenseNo;
		
		private System.Nullable<System.DateTime> _LicenseExpiryDate;
		
		private System.Nullable<System.DateTime> _InspectioDate;
		
		private string _EmployeeName;
		
		private string _SuperVisorId;
		
		private System.Nullable<int> _CurrentReading;
		
		private System.Nullable<int> _UserID;
		
		public VehclesSelectAllFirstResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PlateNo
		{
			get
			{
				return this._PlateNo;
			}
			set
			{
				if ((this._PlateNo != value))
				{
					this._PlateNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this._ModelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(50)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="NVarChar(150)")]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this._CompName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseType", DbType="NVarChar(50)")]
		public string LicenseType
		{
			get
			{
				return this._LicenseType;
			}
			set
			{
				if ((this._LicenseType != value))
				{
					this._LicenseType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNo", DbType="NVarChar(20)")]
		public string LicenseNo
		{
			get
			{
				return this._LicenseNo;
			}
			set
			{
				if ((this._LicenseNo != value))
				{
					this._LicenseNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseExpiryDate", DbType="Date")]
		public System.Nullable<System.DateTime> LicenseExpiryDate
		{
			get
			{
				return this._LicenseExpiryDate;
			}
			set
			{
				if ((this._LicenseExpiryDate != value))
				{
					this._LicenseExpiryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectioDate", DbType="Date")]
		public System.Nullable<System.DateTime> InspectioDate
		{
			get
			{
				return this._InspectioDate;
			}
			set
			{
				if ((this._InspectioDate != value))
				{
					this._InspectioDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(70)")]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperVisorId", DbType="NVarChar(100)")]
		public string SuperVisorId
		{
			get
			{
				return this._SuperVisorId;
			}
			set
			{
				if ((this._SuperVisorId != value))
				{
					this._SuperVisorId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentReading", DbType="Int")]
		public System.Nullable<int> CurrentReading
		{
			get
			{
				return this._CurrentReading;
			}
			set
			{
				if ((this._CurrentReading != value))
				{
					this._CurrentReading = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
	}
	
	public partial class VehclesSelectAllSecondResult
	{
		
		private string _PlateNo;
		
		private string _CompName;
		
		private string _FuelName;
		
		private string _VehcleType;
		
		private string _MotorNo;
		
		private System.Nullable<int> _CounterReadingStart;
		
		private System.Nullable<decimal> _AverageFuelConsumption;
		
		private System.Nullable<int> _ManufactureYear;
		
		private string _ManufactureCountry;
		
		private System.Nullable<System.DateTime> _StartOperationDate;
		
		private System.Nullable<System.DateTime> _EndOperationDate;
		
		private string _BodyNo;
		
		private string _Active;
		
		private string _CC;
		
		private string _CylenderNo;
		
		private string _Color;
		
		public VehclesSelectAllSecondResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PlateNo
		{
			get
			{
				return this._PlateNo;
			}
			set
			{
				if ((this._PlateNo != value))
				{
					this._PlateNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="NVarChar(150)")]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this._CompName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelName", DbType="NVarChar(50)")]
		public string FuelName
		{
			get
			{
				return this._FuelName;
			}
			set
			{
				if ((this._FuelName != value))
				{
					this._FuelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehcleType", DbType="NVarChar(50)")]
		public string VehcleType
		{
			get
			{
				return this._VehcleType;
			}
			set
			{
				if ((this._VehcleType != value))
				{
					this._VehcleType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotorNo", DbType="NVarChar(20)")]
		public string MotorNo
		{
			get
			{
				return this._MotorNo;
			}
			set
			{
				if ((this._MotorNo != value))
				{
					this._MotorNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterReadingStart", DbType="Int")]
		public System.Nullable<int> CounterReadingStart
		{
			get
			{
				return this._CounterReadingStart;
			}
			set
			{
				if ((this._CounterReadingStart != value))
				{
					this._CounterReadingStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageFuelConsumption", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AverageFuelConsumption
		{
			get
			{
				return this._AverageFuelConsumption;
			}
			set
			{
				if ((this._AverageFuelConsumption != value))
				{
					this._AverageFuelConsumption = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufactureYear", DbType="Int")]
		public System.Nullable<int> ManufactureYear
		{
			get
			{
				return this._ManufactureYear;
			}
			set
			{
				if ((this._ManufactureYear != value))
				{
					this._ManufactureYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufactureCountry", DbType="NVarChar(50)")]
		public string ManufactureCountry
		{
			get
			{
				return this._ManufactureCountry;
			}
			set
			{
				if ((this._ManufactureCountry != value))
				{
					this._ManufactureCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartOperationDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartOperationDate
		{
			get
			{
				return this._StartOperationDate;
			}
			set
			{
				if ((this._StartOperationDate != value))
				{
					this._StartOperationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndOperationDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndOperationDate
		{
			get
			{
				return this._EndOperationDate;
			}
			set
			{
				if ((this._EndOperationDate != value))
				{
					this._EndOperationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyNo", DbType="NVarChar(20)")]
		public string BodyNo
		{
			get
			{
				return this._BodyNo;
			}
			set
			{
				if ((this._BodyNo != value))
				{
					this._BodyNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CC", DbType="NVarChar(50)")]
		public string CC
		{
			get
			{
				return this._CC;
			}
			set
			{
				if ((this._CC != value))
				{
					this._CC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CylenderNo", DbType="NVarChar(50)")]
		public string CylenderNo
		{
			get
			{
				return this._CylenderNo;
			}
			set
			{
				if ((this._CylenderNo != value))
				{
					this._CylenderNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this._Color = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
