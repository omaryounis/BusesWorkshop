#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusesWorkshop.DAL.Accounting
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ESOL_EsolERP")]
	public partial class RealEstateDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAst_Location(Ast_Location instance);
    partial void UpdateAst_Location(Ast_Location instance);
    partial void DeleteAst_Location(Ast_Location instance);
    partial void InsertCAT(CAT instance);
    partial void UpdateCAT(CAT instance);
    partial void DeleteCAT(CAT instance);
    partial void InsertAstName(AstName instance);
    partial void UpdateAstName(AstName instance);
    partial void DeleteAstName(AstName instance);
    partial void InsertAsset(Asset instance);
    partial void UpdateAsset(Asset instance);
    partial void DeleteAsset(Asset instance);
    #endregion
		
		public RealEstateDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AccountingTestConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RealEstateDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RealEstateDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RealEstateDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RealEstateDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AssetLocationsWithLevelsSelect_Vw> AssetLocationsWithLevelsSelect_Vws
		{
			get
			{
				return this.GetTable<AssetLocationsWithLevelsSelect_Vw>();
			}
		}
		
		public System.Data.Linq.Table<Ast_Location> Ast_Locations
		{
			get
			{
				return this.GetTable<Ast_Location>();
			}
		}
		
		public System.Data.Linq.Table<CAT> CATs
		{
			get
			{
				return this.GetTable<CAT>();
			}
		}
		
		public System.Data.Linq.Table<AstName> AstNames
		{
			get
			{
				return this.GetTable<AstName>();
			}
		}
		
		public System.Data.Linq.Table<Asset> Assets
		{
			get
			{
				return this.GetTable<Asset>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_SelectLocation")]
		public ISingleResult<Sp_SelectLocationResult> Sp_SelectLocation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentLocationId", DbType="Int")] System.Nullable<int> parentLocationId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), parentLocationId);
			return ((ISingleResult<Sp_SelectLocationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_SelectParentLocation")]
		public ISingleResult<Sp_SelectParentLocationResult> Sp_SelectParentLocation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComID", DbType="Int")] System.Nullable<int> comID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), comID);
			return ((ISingleResult<Sp_SelectParentLocationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_SelectParentLocationById")]
		public ISingleResult<Sp_SelectParentLocationByIdResult> Sp_SelectParentLocationById([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<Sp_SelectParentLocationByIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AssetLocationsWithLevelsSelect_Sp")]
		public ISingleResult<AssetLocationsWithLevelsSelect_SpResult> AssetLocationsWithLevelsSelect_Sp()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<AssetLocationsWithLevelsSelect_SpResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetLocationsWithLevelsSelect_Vw")]
	public partial class AssetLocationsWithLevelsSelect_Vw
	{
		
		private int _ID;
		
		private string _LocationName;
		
		private System.Nullable<int> _ParentID;
		
		private System.Nullable<bool> _IsDefault;
		
		private System.Nullable<bool> _IsShown;
		
		private System.Nullable<bool> _IsMain;
		
		private System.Nullable<int> _Com_ID;
		
		private System.Nullable<bool> _IsResidential;
		
		private System.Nullable<int> _MaxCount;
		
		private int _level;
		
		public AssetLocationsWithLevelsSelect_Vw()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(200)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this._IsDefault = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShown", DbType="Bit")]
		public System.Nullable<bool> IsShown
		{
			get
			{
				return this._IsShown;
			}
			set
			{
				if ((this._IsShown != value))
				{
					this._IsShown = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain", DbType="Bit")]
		public System.Nullable<bool> IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this._IsMain = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Com_ID", DbType="Int")]
		public System.Nullable<int> Com_ID
		{
			get
			{
				return this._Com_ID;
			}
			set
			{
				if ((this._Com_ID != value))
				{
					this._Com_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsResidential", DbType="Bit")]
		public System.Nullable<bool> IsResidential
		{
			get
			{
				return this._IsResidential;
			}
			set
			{
				if ((this._IsResidential != value))
				{
					this._IsResidential = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxCount", DbType="Int")]
		public System.Nullable<int> MaxCount
		{
			get
			{
				return this._MaxCount;
			}
			set
			{
				if ((this._MaxCount != value))
				{
					this._MaxCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[level]", Storage="_level", DbType="Int NOT NULL")]
		public int level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this._level = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ast_Location")]
	public partial class Ast_Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LocationName;
		
		private System.Nullable<int> _ParentID;
		
		private System.Nullable<bool> _IsDefault;
		
		private System.Nullable<bool> _IsShown;
		
		private System.Nullable<bool> _IsMain;
		
		private System.Nullable<int> _Com_ID;
		
		private System.Nullable<bool> _IsResidential;
		
		private System.Nullable<int> _MaxCount;
		
		private System.Nullable<int> _ClassID;
		
		private System.Nullable<int> _width;
		
		private System.Nullable<int> _Height;
		
		private System.Nullable<int> _Depth;
		
		private EntitySet<Asset> _Assets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLocationNameChanging(string value);
    partial void OnLocationNameChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnIsDefaultChanging(System.Nullable<bool> value);
    partial void OnIsDefaultChanged();
    partial void OnIsShownChanging(System.Nullable<bool> value);
    partial void OnIsShownChanged();
    partial void OnIsMainChanging(System.Nullable<bool> value);
    partial void OnIsMainChanged();
    partial void OnCom_IDChanging(System.Nullable<int> value);
    partial void OnCom_IDChanged();
    partial void OnIsResidentialChanging(System.Nullable<bool> value);
    partial void OnIsResidentialChanged();
    partial void OnMaxCountChanging(System.Nullable<int> value);
    partial void OnMaxCountChanged();
    partial void OnClassIDChanging(System.Nullable<int> value);
    partial void OnClassIDChanged();
    partial void OnwidthChanging(System.Nullable<int> value);
    partial void OnwidthChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnDepthChanging(System.Nullable<int> value);
    partial void OnDepthChanged();
    #endregion
		
		public Ast_Location()
		{
			this._Assets = new EntitySet<Asset>(new Action<Asset>(this.attach_Assets), new Action<Asset>(this.detach_Assets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(200)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this.OnLocationNameChanging(value);
					this.SendPropertyChanging();
					this._LocationName = value;
					this.SendPropertyChanged("LocationName");
					this.OnLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShown", DbType="Bit")]
		public System.Nullable<bool> IsShown
		{
			get
			{
				return this._IsShown;
			}
			set
			{
				if ((this._IsShown != value))
				{
					this.OnIsShownChanging(value);
					this.SendPropertyChanging();
					this._IsShown = value;
					this.SendPropertyChanged("IsShown");
					this.OnIsShownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain", DbType="Bit")]
		public System.Nullable<bool> IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this.OnIsMainChanging(value);
					this.SendPropertyChanging();
					this._IsMain = value;
					this.SendPropertyChanged("IsMain");
					this.OnIsMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Com_ID", DbType="Int")]
		public System.Nullable<int> Com_ID
		{
			get
			{
				return this._Com_ID;
			}
			set
			{
				if ((this._Com_ID != value))
				{
					this.OnCom_IDChanging(value);
					this.SendPropertyChanging();
					this._Com_ID = value;
					this.SendPropertyChanged("Com_ID");
					this.OnCom_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsResidential", DbType="Bit")]
		public System.Nullable<bool> IsResidential
		{
			get
			{
				return this._IsResidential;
			}
			set
			{
				if ((this._IsResidential != value))
				{
					this.OnIsResidentialChanging(value);
					this.SendPropertyChanging();
					this._IsResidential = value;
					this.SendPropertyChanged("IsResidential");
					this.OnIsResidentialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxCount", DbType="Int")]
		public System.Nullable<int> MaxCount
		{
			get
			{
				return this._MaxCount;
			}
			set
			{
				if ((this._MaxCount != value))
				{
					this.OnMaxCountChanging(value);
					this.SendPropertyChanging();
					this._MaxCount = value;
					this.SendPropertyChanged("MaxCount");
					this.OnMaxCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_width", DbType="Int")]
		public System.Nullable<int> width
		{
			get
			{
				return this._width;
			}
			set
			{
				if ((this._width != value))
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Depth", DbType="Int")]
		public System.Nullable<int> Depth
		{
			get
			{
				return this._Depth;
			}
			set
			{
				if ((this._Depth != value))
				{
					this.OnDepthChanging(value);
					this.SendPropertyChanging();
					this._Depth = value;
					this.SendPropertyChanged("Depth");
					this.OnDepthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ast_Location_Asset", Storage="_Assets", ThisKey="ID", OtherKey="LocationID")]
		public EntitySet<Asset> Assets
		{
			get
			{
				return this._Assets;
			}
			set
			{
				this._Assets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Assets(Asset entity)
		{
			this.SendPropertyChanging();
			entity.Ast_Location = this;
		}
		
		private void detach_Assets(Asset entity)
		{
			this.SendPropertyChanging();
			entity.Ast_Location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAT")]
	public partial class CAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CAT_ID;
		
		private string _CAT_Name;
		
		private System.Nullable<int> _COA_ID;
		
		private System.Nullable<int> _MainDepAcc;
		
		private System.Nullable<int> _MainTotalDepAcc;
		
		private System.Nullable<int> _DEP_ID;
		
		private System.Nullable<decimal> _DEP_Percent;
		
		private System.Nullable<int> _DepYears;
		
		private EntitySet<AstName> _AstNames;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCAT_IDChanging(int value);
    partial void OnCAT_IDChanged();
    partial void OnCAT_NameChanging(string value);
    partial void OnCAT_NameChanged();
    partial void OnCOA_IDChanging(System.Nullable<int> value);
    partial void OnCOA_IDChanged();
    partial void OnMainDepAccChanging(System.Nullable<int> value);
    partial void OnMainDepAccChanged();
    partial void OnMainTotalDepAccChanging(System.Nullable<int> value);
    partial void OnMainTotalDepAccChanged();
    partial void OnDEP_IDChanging(System.Nullable<int> value);
    partial void OnDEP_IDChanged();
    partial void OnDEP_PercentChanging(System.Nullable<decimal> value);
    partial void OnDEP_PercentChanged();
    partial void OnDepYearsChanging(System.Nullable<int> value);
    partial void OnDepYearsChanged();
    #endregion
		
		public CAT()
		{
			this._AstNames = new EntitySet<AstName>(new Action<AstName>(this.attach_AstNames), new Action<AstName>(this.detach_AstNames));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAT_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CAT_ID
		{
			get
			{
				return this._CAT_ID;
			}
			set
			{
				if ((this._CAT_ID != value))
				{
					this.OnCAT_IDChanging(value);
					this.SendPropertyChanging();
					this._CAT_ID = value;
					this.SendPropertyChanged("CAT_ID");
					this.OnCAT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAT_Name", DbType="NVarChar(4000)")]
		public string CAT_Name
		{
			get
			{
				return this._CAT_Name;
			}
			set
			{
				if ((this._CAT_Name != value))
				{
					this.OnCAT_NameChanging(value);
					this.SendPropertyChanging();
					this._CAT_Name = value;
					this.SendPropertyChanged("CAT_Name");
					this.OnCAT_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COA_ID", DbType="Int")]
		public System.Nullable<int> COA_ID
		{
			get
			{
				return this._COA_ID;
			}
			set
			{
				if ((this._COA_ID != value))
				{
					this.OnCOA_IDChanging(value);
					this.SendPropertyChanging();
					this._COA_ID = value;
					this.SendPropertyChanged("COA_ID");
					this.OnCOA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainDepAcc", DbType="Int")]
		public System.Nullable<int> MainDepAcc
		{
			get
			{
				return this._MainDepAcc;
			}
			set
			{
				if ((this._MainDepAcc != value))
				{
					this.OnMainDepAccChanging(value);
					this.SendPropertyChanging();
					this._MainDepAcc = value;
					this.SendPropertyChanged("MainDepAcc");
					this.OnMainDepAccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainTotalDepAcc", DbType="Int")]
		public System.Nullable<int> MainTotalDepAcc
		{
			get
			{
				return this._MainTotalDepAcc;
			}
			set
			{
				if ((this._MainTotalDepAcc != value))
				{
					this.OnMainTotalDepAccChanging(value);
					this.SendPropertyChanging();
					this._MainTotalDepAcc = value;
					this.SendPropertyChanged("MainTotalDepAcc");
					this.OnMainTotalDepAccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEP_ID", DbType="Int")]
		public System.Nullable<int> DEP_ID
		{
			get
			{
				return this._DEP_ID;
			}
			set
			{
				if ((this._DEP_ID != value))
				{
					this.OnDEP_IDChanging(value);
					this.SendPropertyChanging();
					this._DEP_ID = value;
					this.SendPropertyChanged("DEP_ID");
					this.OnDEP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEP_Percent", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DEP_Percent
		{
			get
			{
				return this._DEP_Percent;
			}
			set
			{
				if ((this._DEP_Percent != value))
				{
					this.OnDEP_PercentChanging(value);
					this.SendPropertyChanging();
					this._DEP_Percent = value;
					this.SendPropertyChanged("DEP_Percent");
					this.OnDEP_PercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepYears", DbType="Int")]
		public System.Nullable<int> DepYears
		{
			get
			{
				return this._DepYears;
			}
			set
			{
				if ((this._DepYears != value))
				{
					this.OnDepYearsChanging(value);
					this.SendPropertyChanging();
					this._DepYears = value;
					this.SendPropertyChanged("DepYears");
					this.OnDepYearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAT_AstName", Storage="_AstNames", ThisKey="CAT_ID", OtherKey="CAT_ID")]
		public EntitySet<AstName> AstNames
		{
			get
			{
				return this._AstNames;
			}
			set
			{
				this._AstNames.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AstNames(AstName entity)
		{
			this.SendPropertyChanging();
			entity.CAT = this;
		}
		
		private void detach_AstNames(AstName entity)
		{
			this.SendPropertyChanging();
			entity.CAT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AstNames")]
	public partial class AstName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _CAT_ID;
		
		private System.Nullable<int> _ComID;
		
		private EntitySet<Asset> _Assets;
		
		private EntityRef<CAT> _CAT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCAT_IDChanging(System.Nullable<int> value);
    partial void OnCAT_IDChanged();
    partial void OnComIDChanging(System.Nullable<int> value);
    partial void OnComIDChanged();
    #endregion
		
		public AstName()
		{
			this._Assets = new EntitySet<Asset>(new Action<Asset>(this.attach_Assets), new Action<Asset>(this.detach_Assets));
			this._CAT = default(EntityRef<CAT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(4000)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAT_ID", DbType="Int")]
		public System.Nullable<int> CAT_ID
		{
			get
			{
				return this._CAT_ID;
			}
			set
			{
				if ((this._CAT_ID != value))
				{
					if (this._CAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCAT_IDChanging(value);
					this.SendPropertyChanging();
					this._CAT_ID = value;
					this.SendPropertyChanged("CAT_ID");
					this.OnCAT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComID", DbType="Int")]
		public System.Nullable<int> ComID
		{
			get
			{
				return this._ComID;
			}
			set
			{
				if ((this._ComID != value))
				{
					this.OnComIDChanging(value);
					this.SendPropertyChanging();
					this._ComID = value;
					this.SendPropertyChanged("ComID");
					this.OnComIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AstName_Asset", Storage="_Assets", ThisKey="ID", OtherKey="AST_ID")]
		public EntitySet<Asset> Assets
		{
			get
			{
				return this._Assets;
			}
			set
			{
				this._Assets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAT_AstName", Storage="_CAT", ThisKey="CAT_ID", OtherKey="CAT_ID", IsForeignKey=true)]
		public CAT CAT
		{
			get
			{
				return this._CAT.Entity;
			}
			set
			{
				CAT previousValue = this._CAT.Entity;
				if (((previousValue != value) 
							|| (this._CAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAT.Entity = null;
						previousValue.AstNames.Remove(this);
					}
					this._CAT.Entity = value;
					if ((value != null))
					{
						value.AstNames.Add(this);
						this._CAT_ID = value.CAT_ID;
					}
					else
					{
						this._CAT_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CAT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Assets(Asset entity)
		{
			this.SendPropertyChanging();
			entity.AstName = this;
		}
		
		private void detach_Assets(Asset entity)
		{
			this.SendPropertyChanging();
			entity.AstName = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Assets")]
	public partial class Asset : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AssetId;
		
		private int _Asset_MasterId;
		
		private int _AST_ID;
		
		private int _Cat_Id;
		
		private int _QTY;
		
		private decimal _PurchaseValue;
		
		private System.DateTime _PurchaseDate;
		
		private int _LocationID;
		
		private string _PlateNumber;
		
		private string _Model;
		
		private string _Color;
		
		private string _CountryOfManufacture;
		
		private string _YearOfManufacture;
		
		private string _Code;
		
		private System.Nullable<System.DateTime> _LicenseEndDate;
		
		private System.Nullable<int> _JOBList_ID;
		
		private System.Nullable<int> _JOB_ID;
		
		private System.Nullable<int> _SupplierId;
		
		private bool _IsOld;
		
		private string _ImgURL;
		
		private string _BarCode;
		
		private EntityRef<Ast_Location> _Ast_Location;
		
		private EntityRef<AstName> _AstName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssetIdChanging(int value);
    partial void OnAssetIdChanged();
    partial void OnAsset_MasterIdChanging(int value);
    partial void OnAsset_MasterIdChanged();
    partial void OnAST_IDChanging(int value);
    partial void OnAST_IDChanged();
    partial void OnCat_IdChanging(int value);
    partial void OnCat_IdChanged();
    partial void OnQTYChanging(int value);
    partial void OnQTYChanged();
    partial void OnPurchaseValueChanging(decimal value);
    partial void OnPurchaseValueChanged();
    partial void OnPurchaseDateChanging(System.DateTime value);
    partial void OnPurchaseDateChanged();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnPlateNumberChanging(string value);
    partial void OnPlateNumberChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnCountryOfManufactureChanging(string value);
    partial void OnCountryOfManufactureChanged();
    partial void OnYearOfManufactureChanging(string value);
    partial void OnYearOfManufactureChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnLicenseEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLicenseEndDateChanged();
    partial void OnJOBList_IDChanging(System.Nullable<int> value);
    partial void OnJOBList_IDChanged();
    partial void OnJOB_IDChanging(System.Nullable<int> value);
    partial void OnJOB_IDChanged();
    partial void OnSupplierIdChanging(System.Nullable<int> value);
    partial void OnSupplierIdChanged();
    partial void OnIsOldChanging(bool value);
    partial void OnIsOldChanged();
    partial void OnImgURLChanging(string value);
    partial void OnImgURLChanged();
    partial void OnBarCodeChanging(string value);
    partial void OnBarCodeChanged();
    #endregion
		
		public Asset()
		{
			this._Ast_Location = default(EntityRef<Ast_Location>);
			this._AstName = default(EntityRef<AstName>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AssetId
		{
			get
			{
				return this._AssetId;
			}
			set
			{
				if ((this._AssetId != value))
				{
					this.OnAssetIdChanging(value);
					this.SendPropertyChanging();
					this._AssetId = value;
					this.SendPropertyChanged("AssetId");
					this.OnAssetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Asset_MasterId", DbType="Int NOT NULL")]
		public int Asset_MasterId
		{
			get
			{
				return this._Asset_MasterId;
			}
			set
			{
				if ((this._Asset_MasterId != value))
				{
					this.OnAsset_MasterIdChanging(value);
					this.SendPropertyChanging();
					this._Asset_MasterId = value;
					this.SendPropertyChanged("Asset_MasterId");
					this.OnAsset_MasterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AST_ID", DbType="Int NOT NULL")]
		public int AST_ID
		{
			get
			{
				return this._AST_ID;
			}
			set
			{
				if ((this._AST_ID != value))
				{
					if (this._AstName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAST_IDChanging(value);
					this.SendPropertyChanging();
					this._AST_ID = value;
					this.SendPropertyChanged("AST_ID");
					this.OnAST_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_Id", DbType="Int NOT NULL")]
		public int Cat_Id
		{
			get
			{
				return this._Cat_Id;
			}
			set
			{
				if ((this._Cat_Id != value))
				{
					this.OnCat_IdChanging(value);
					this.SendPropertyChanging();
					this._Cat_Id = value;
					this.SendPropertyChanged("Cat_Id");
					this.OnCat_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTY", DbType="Int NOT NULL")]
		public int QTY
		{
			get
			{
				return this._QTY;
			}
			set
			{
				if ((this._QTY != value))
				{
					this.OnQTYChanging(value);
					this.SendPropertyChanging();
					this._QTY = value;
					this.SendPropertyChanged("QTY");
					this.OnQTYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseValue", DbType="Decimal(18,2) NOT NULL")]
		public decimal PurchaseValue
		{
			get
			{
				return this._PurchaseValue;
			}
			set
			{
				if ((this._PurchaseValue != value))
				{
					this.OnPurchaseValueChanging(value);
					this.SendPropertyChanging();
					this._PurchaseValue = value;
					this.SendPropertyChanged("PurchaseValue");
					this.OnPurchaseValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="Date NOT NULL")]
		public System.DateTime PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this.OnPurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._PurchaseDate = value;
					this.SendPropertyChanged("PurchaseDate");
					this.OnPurchaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					if (this._Ast_Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateNumber", DbType="NVarChar(100)")]
		public string PlateNumber
		{
			get
			{
				return this._PlateNumber;
			}
			set
			{
				if ((this._PlateNumber != value))
				{
					this.OnPlateNumberChanging(value);
					this.SendPropertyChanging();
					this._PlateNumber = value;
					this.SendPropertyChanged("PlateNumber");
					this.OnPlateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(100)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(100)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryOfManufacture", DbType="NVarChar(100)")]
		public string CountryOfManufacture
		{
			get
			{
				return this._CountryOfManufacture;
			}
			set
			{
				if ((this._CountryOfManufacture != value))
				{
					this.OnCountryOfManufactureChanging(value);
					this.SendPropertyChanging();
					this._CountryOfManufacture = value;
					this.SendPropertyChanged("CountryOfManufacture");
					this.OnCountryOfManufactureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearOfManufacture", DbType="NVarChar(4)")]
		public string YearOfManufacture
		{
			get
			{
				return this._YearOfManufacture;
			}
			set
			{
				if ((this._YearOfManufacture != value))
				{
					this.OnYearOfManufactureChanging(value);
					this.SendPropertyChanging();
					this._YearOfManufacture = value;
					this.SendPropertyChanged("YearOfManufacture");
					this.OnYearOfManufactureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(100)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseEndDate", DbType="Date")]
		public System.Nullable<System.DateTime> LicenseEndDate
		{
			get
			{
				return this._LicenseEndDate;
			}
			set
			{
				if ((this._LicenseEndDate != value))
				{
					this.OnLicenseEndDateChanging(value);
					this.SendPropertyChanging();
					this._LicenseEndDate = value;
					this.SendPropertyChanged("LicenseEndDate");
					this.OnLicenseEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOBList_ID", DbType="Int")]
		public System.Nullable<int> JOBList_ID
		{
			get
			{
				return this._JOBList_ID;
			}
			set
			{
				if ((this._JOBList_ID != value))
				{
					this.OnJOBList_IDChanging(value);
					this.SendPropertyChanging();
					this._JOBList_ID = value;
					this.SendPropertyChanged("JOBList_ID");
					this.OnJOBList_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOB_ID", DbType="Int")]
		public System.Nullable<int> JOB_ID
		{
			get
			{
				return this._JOB_ID;
			}
			set
			{
				if ((this._JOB_ID != value))
				{
					this.OnJOB_IDChanging(value);
					this.SendPropertyChanging();
					this._JOB_ID = value;
					this.SendPropertyChanged("JOB_ID");
					this.OnJOB_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int")]
		public System.Nullable<int> SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOld", DbType="Bit NOT NULL")]
		public bool IsOld
		{
			get
			{
				return this._IsOld;
			}
			set
			{
				if ((this._IsOld != value))
				{
					this.OnIsOldChanging(value);
					this.SendPropertyChanging();
					this._IsOld = value;
					this.SendPropertyChanged("IsOld");
					this.OnIsOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgURL", DbType="NVarChar(600)")]
		public string ImgURL
		{
			get
			{
				return this._ImgURL;
			}
			set
			{
				if ((this._ImgURL != value))
				{
					this.OnImgURLChanging(value);
					this.SendPropertyChanging();
					this._ImgURL = value;
					this.SendPropertyChanged("ImgURL");
					this.OnImgURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCode", DbType="NVarChar(100)")]
		public string BarCode
		{
			get
			{
				return this._BarCode;
			}
			set
			{
				if ((this._BarCode != value))
				{
					this.OnBarCodeChanging(value);
					this.SendPropertyChanging();
					this._BarCode = value;
					this.SendPropertyChanged("BarCode");
					this.OnBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ast_Location_Asset", Storage="_Ast_Location", ThisKey="LocationID", OtherKey="ID", IsForeignKey=true)]
		public Ast_Location Ast_Location
		{
			get
			{
				return this._Ast_Location.Entity;
			}
			set
			{
				Ast_Location previousValue = this._Ast_Location.Entity;
				if (((previousValue != value) 
							|| (this._Ast_Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ast_Location.Entity = null;
						previousValue.Assets.Remove(this);
					}
					this._Ast_Location.Entity = value;
					if ((value != null))
					{
						value.Assets.Add(this);
						this._LocationID = value.ID;
					}
					else
					{
						this._LocationID = default(int);
					}
					this.SendPropertyChanged("Ast_Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AstName_Asset", Storage="_AstName", ThisKey="AST_ID", OtherKey="ID", IsForeignKey=true)]
		public AstName AstName
		{
			get
			{
				return this._AstName.Entity;
			}
			set
			{
				AstName previousValue = this._AstName.Entity;
				if (((previousValue != value) 
							|| (this._AstName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AstName.Entity = null;
						previousValue.Assets.Remove(this);
					}
					this._AstName.Entity = value;
					if ((value != null))
					{
						value.Assets.Add(this);
						this._AST_ID = value.ID;
					}
					else
					{
						this._AST_ID = default(int);
					}
					this.SendPropertyChanged("AstName");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Sp_SelectLocationResult
	{
		
		private int _ID;
		
		private System.Nullable<int> _ParentID;
		
		private string _LocationName;
		
		public Sp_SelectLocationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(50)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
	}
	
	public partial class Sp_SelectParentLocationResult
	{
		
		private int _ID;
		
		private string _LocationName;
		
		public Sp_SelectParentLocationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(200)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
	}
	
	public partial class Sp_SelectParentLocationByIdResult
	{
		
		private System.Nullable<int> _ParentID;
		
		public Sp_SelectParentLocationByIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
	}
	
	public partial class AssetLocationsWithLevelsSelect_SpResult
	{
		
		private int _ID;
		
		private string _LocationName;
		
		private System.Nullable<int> _ParentID;
		
		private System.Nullable<bool> _IsDefault;
		
		private System.Nullable<bool> _IsShown;
		
		private System.Nullable<bool> _IsMain;
		
		private System.Nullable<int> _Com_ID;
		
		private System.Nullable<bool> _IsResidential;
		
		private System.Nullable<int> _MaxCount;
		
		private System.Nullable<int> _ClassID;
		
		private System.Nullable<int> _width;
		
		private System.Nullable<int> _Height;
		
		private System.Nullable<int> _Depth;
		
		private int _level;
		
		public AssetLocationsWithLevelsSelect_SpResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(200)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this._IsDefault = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShown", DbType="Bit")]
		public System.Nullable<bool> IsShown
		{
			get
			{
				return this._IsShown;
			}
			set
			{
				if ((this._IsShown != value))
				{
					this._IsShown = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain", DbType="Bit")]
		public System.Nullable<bool> IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this._IsMain = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Com_ID", DbType="Int")]
		public System.Nullable<int> Com_ID
		{
			get
			{
				return this._Com_ID;
			}
			set
			{
				if ((this._Com_ID != value))
				{
					this._Com_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsResidential", DbType="Bit")]
		public System.Nullable<bool> IsResidential
		{
			get
			{
				return this._IsResidential;
			}
			set
			{
				if ((this._IsResidential != value))
				{
					this._IsResidential = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxCount", DbType="Int")]
		public System.Nullable<int> MaxCount
		{
			get
			{
				return this._MaxCount;
			}
			set
			{
				if ((this._MaxCount != value))
				{
					this._MaxCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_width", DbType="Int")]
		public System.Nullable<int> width
		{
			get
			{
				return this._width;
			}
			set
			{
				if ((this._width != value))
				{
					this._width = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this._Height = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Depth", DbType="Int")]
		public System.Nullable<int> Depth
		{
			get
			{
				return this._Depth;
			}
			set
			{
				if ((this._Depth != value))
				{
					this._Depth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[level]", Storage="_level", DbType="Int NOT NULL")]
		public int level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this._level = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
